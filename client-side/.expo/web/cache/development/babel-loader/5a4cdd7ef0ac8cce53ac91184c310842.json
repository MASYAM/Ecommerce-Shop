{"ast":null,"code":"import Platform from \"../Platform\";\nimport { CodedError } from \"./CodedError\";\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName, propertyName) {\n    super('ERR_UNAVAILABLE', \"The method or property \".concat(moduleName, \".\").concat(propertyName, \" is not available on \").concat(Platform.OS, \", are you sure you've linked all the native dependencies properly?\"));\n  }\n\n}","map":{"version":3,"sources":["../../src/errors/UnavailabilityError.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP;AACA,SAAS,UAAT;AAOA,OAAM,MAAO,mBAAP,SAAmC,UAAnC,CAA6C;AACjD,EAAA,WAAA,CAAY,UAAZ,EAAgC,YAAhC,EAAoD;AAClD,UACE,iBADF,mCAE4B,UAF5B,cAE0C,YAF1C,kCAE8E,QAAQ,CAAC,EAFvF;AAID;;AANgD","sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}