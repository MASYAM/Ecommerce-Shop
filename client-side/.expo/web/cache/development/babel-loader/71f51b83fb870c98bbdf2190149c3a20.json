{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ShoppingCart/index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles from \"./style\";\nimport MapView from \"react-native-map-clustering\";\nimport { Container, Tab, Tabs, Content, Form, Item, Picker, Button, Toast } from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { ThemeSettings, ImageSources, ScreenNames } from \"../../../constants\";\nimport { Basement } from \"../../../components/Basement\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from \"../../../components/legacy/ClothesDetailSlide\";\nimport ShoppingCartPriceRow from \"../../../components/legacy/ShoppingCartPriceRow\";\nimport ShoppingCartItem from \"../../../components/legacy/ShoppingCartItem\";\nimport { StandardHeader } from \"../../../components/legacy/Header\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { cartActions } from \"../../../store/actions\";\nimport { productsActions } from \"../../../store/actions\";\nimport { ActionStatusTypeValues } from \"../../../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../../../store/selectors/app\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nvar {\n  width: viewportWidth,\n  height: viewportHeight\n} = Dimensions.get('window');\n\nclass ShoppingCart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onPressProductDetail = () => {\n      this.props.navigation.navigate(ScreenNames.ClothesDetail);\n    };\n\n    this.goCheckoutScreen = () => {\n      this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n    };\n\n    this.onDeleteShoppingCartItem = productId => {\n      console.log(\"onDeleteShoppingCartItem   >>>\" + productId);\n      var {\n        cartActions,\n        navigation\n      } = this.props;\n      cartActions.removeCart(navigation.state.key, productId);\n      Toast.show({\n        type: \"success\",\n        text: \"Removed\"\n      });\n    };\n\n    this.state = {\n      selectedColor: undefined,\n      selectedSize: undefined,\n      isAddToCart: false,\n      slider1ActiveSlide: 1,\n      shoppingCartList: [{\n        productId: 'P001',\n        productImage: ImageSources.ProductImage001,\n        productName: 'Dress Helena',\n        productType: 'Black, M',\n        productPrice: 54.0\n      }, {\n        productId: 'P002',\n        productImage: ImageSources.ProductImage002,\n        productName: 'Dress Maroe Amme short',\n        productType: 'Black, M',\n        productPrice: 89.0\n      }]\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(\"CART LIST   >>>\");\n    console.log(this.props.cartListing);\n  }\n\n  componentDidMount() {}\n\n  onValueChangeColor(value) {\n    this.setState({\n      selectedColor: value\n    });\n  }\n\n  render() {\n    var totoalPrice = 0.0;\n    this.props.cartListing.map((item, key) => {\n      totoalPrice = totoalPrice + parseFloat(item.price);\n    });\n    return React.createElement(Basement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, React.createElement(StandardHeader, {\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 2\n      }\n    }), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.shoppingCartContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 24\n      }\n    }, React.createElement(Text, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 28\n      }\n    }, \"Shopping Cart \")), this.props.cartListing.map((item, key) => {\n      return React.createElement(ShoppingCartItem, {\n        key: key,\n        productId: item.id,\n        productImage: item.image,\n        productName: item.name,\n        productType: item.size + \",\" + item.color,\n        productPrice: item.price,\n        onDeleteShoppingCartItem: this.onDeleteShoppingCartItem,\n        onPressProductDetail: this.onPressProductDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      });\n    }), this.props.cartListing.length == 0 ? React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, \"You didn't buy anything yet.\"), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Let's go shopping  \\uD83D\\uDECD\\uFE0F\\uD83D\\uDECD\\uFE0F\\uD83D\\uDECD\\uFE0F\\uD83D\\uDC5A\\uD83D\\uDC5A\\uD83D\\uDC5A\")) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, React.createElement(ShoppingCartPriceRow, {\n      title: \"Shipping\",\n      price: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }), React.createElement(ShoppingCartPriceRow, {\n      title: \"Your Total\",\n      price: totoalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: styles.checkoutLayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      transparent: true,\n      full: true,\n      style: styles.btnShoppingCart,\n      onPress: this.goCheckoutScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 22\n      }\n    }, React.createElement(View, {\n      style: styles.shopIconContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 28\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 67\n      }\n    }, React.createElement(Icon, {\n      style: styles.shoppingIcon,\n      size: 15,\n      name: \"shopping-bag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 73\n      }\n    }))), React.createElement(Text, {\n      style: styles.btnShoppingCartText,\n      large: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 28\n      }\n    }, \"Check out now!\")))))));\n  }\n\n}\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    cartListing: state.cart.cartListing\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    cartActions: bindActionCreators(cartActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ShoppingCart/index.js"],"names":["React","styles","MapView","Container","Tab","Tabs","Content","Form","Item","Picker","Button","Toast","Actions","Icon","ThemeSettings","ImageSources","ScreenNames","Basement","Carousel","Pagination","ClothesDetailSlide","ShoppingCartPriceRow","ShoppingCartItem","StandardHeader","ScrollView","cartActions","productsActions","ActionStatusTypeValues","selectViewActionStatus","bindActionCreators","connect","width","viewportWidth","height","viewportHeight","Dimensions","get","ShoppingCart","Component","constructor","props","onPressProductDetail","navigation","navigate","ClothesDetail","goCheckoutScreen","CheckoutScreen","onDeleteShoppingCartItem","productId","console","log","removeCart","state","key","show","type","text","selectedColor","undefined","selectedSize","isAddToCart","slider1ActiveSlide","shoppingCartList","productImage","ProductImage001","productName","productType","productPrice","ProductImage002","componentDidUpdate","cartListing","componentDidMount","onValueChangeColor","value","setState","render","totoalPrice","map","item","parseFloat","price","shoppingCartContainer","titleContainer","titleStyle","id","image","name","size","color","length","checkoutLayer","btnShoppingCart","shopIconContainer","shoppingIcon","btnShoppingCartText","mapStateToProps","ownProps","cart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    Image,\n    Platform,\n    InteractionManager,\n    SafeAreaView,\n    Dimensions,\n    \n} from 'react-native';\nimport styles from './style';\nimport MapView from \"react-native-map-clustering\";\nimport {\n    Container,\n    Tab,\n    Tabs,\n    Content, Form, Item, Picker, Button,\n    Toast\n} from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { ThemeSettings, ImageSources, ScreenNames } from '../../../constants';\nimport { Basement } from '../../../components/Basement';\n// import Carousel from 'react-native-carousel-view';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from '../../../components/legacy/ClothesDetailSlide';\nimport ShoppingCartPriceRow from '../../../components/legacy/ShoppingCartPriceRow';\nimport ShoppingCartItem from '../../../components/legacy/ShoppingCartItem';\nimport { StandardHeader } from '../../../components/legacy/Header';\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\n\n\nimport { cartActions } from  '../../../store/actions';\n\nimport { productsActions } from  '../../../store/actions';\nimport { ActionStatusTypeValues } from '../../../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../../../store/selectors/app';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\n\nconst { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');\n\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    cartActions: typeof cartActions,\n}\nclass ShoppingCart extends React.Component<Props> {\n\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            selectedColor: undefined,\n            selectedSize: undefined,\n            isAddToCart:false,\n            slider1ActiveSlide:1,\n            shoppingCartList:[\n            {  \n                productId:'P001',\n                productImage:ImageSources.ProductImage001,\n                productName:'Dress Helena',\n                productType:'Black, M',\n                productPrice:54.0\n            },\n            {  \n                productId:'P002',\n                productImage:ImageSources.ProductImage002,\n                productName:'Dress Maroe Amme short',\n                productType:'Black, M',\n                productPrice:89.0\n            },\n        ] };\n    }\n\n\n    componentDidUpdate(){\n        console.log(\"CART LIST   >>>\");\n        console.log(this.props.cartListing);\n    }\n\n\n    \n    // state = {\n    //     showMap: false,\n    // }\n    componentDidMount () {\n\n        // InteractionManager.runAfterInteractions( () => {\n        //     this.setState({showMap: true})\n        // });\n\n    }\n\n    onValueChangeColor(value: string) {\n        this.setState({\n          selectedColor: value\n        });\n      }\n\n      \n      onPressProductDetail = () => {\n        this.props.navigation.navigate(ScreenNames.ClothesDetail);\n\n\n    }\n    goCheckoutScreen = () => {\n        this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n\n        \n    }\n\n    \n\n\n    onDeleteShoppingCartItem = ( productId) => {\n        console.log(\"onDeleteShoppingCartItem   >>>\"+productId);\n        const { cartActions,  navigation } = this.props;\n        cartActions.removeCart(navigation.state.key,productId);\n        Toast.show({\n            type: \"success\",\n            text:\"Removed\"\n          });\n    }\n\n\n\n\n\n    render() {\n\n        let totoalPrice = 0.0;\n        this.props.cartListing.map((item, key) => {\n            totoalPrice = totoalPrice + parseFloat(item.price)\n        });\n\n        return (\n            <Basement>\n <StandardHeader back />\n                  <ScrollView>\n                  \n                  <View style={styles.shoppingCartContainer}>\n                       <View style={styles.titleContainer}>\n                           <Text style={styles.titleStyle}>Shopping Cart </Text>\n                       </View>\n                   \n\n                      { this.props.cartListing.map((item, key) => {\n            return (\n                            <ShoppingCartItem key={key}\n                            productId={item.id}\n                            productImage={item.image}\n                            productName={item.name}\n                            productType={item.size + \",\" + item.color}\n                            productPrice={item.price}\n                            onDeleteShoppingCartItem={this.onDeleteShoppingCartItem}\n                            onPressProductDetail={this.onPressProductDetail}\n                        />\n            );\n       }) }\n           \n                               \n\n {this.props.cartListing.length==0 ?\n         <View>\n                <Text>You didn't buy anything yet.</Text>\n                <Text>Let's go shopping  🛍️🛍️🛍️👚👚👚</Text>\n         </View>\n:\n         \n        <View>\n                <ShoppingCartPriceRow title=\"Shipping\" price={10}  />\n                <ShoppingCartPriceRow title=\"Your Total\" price={totoalPrice}  />\n                <View style={styles.checkoutLayer}>\n                     <Button transparent full  style={styles.btnShoppingCart} onPress={this.goCheckoutScreen}> \n                           <View style={styles.shopIconContainer}><Text><Icon  style={styles.shoppingIcon} size={15} name=\"shopping-bag\" /></Text></View>\n                           <Text style={styles.btnShoppingCartText} large>Check out now!</Text>\n                       </Button>\n                </View>\n        </View>\n\n }\n                    \n                      \n\n                    </View>\n                  </ScrollView>\n\n                     \n\n\n\n            </Basement> \n        );\n    }\n}\n\n\n\n\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        cartListing: state.cart.cartListing,\n     };\n  };\n  const mapDispatchToProps = dispatch => {\n    return {\n      cartActions: bindActionCreators(cartActions, dispatch),      \n    };\n  };\n  export default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);"]},"metadata":{},"sourceType":"module"}