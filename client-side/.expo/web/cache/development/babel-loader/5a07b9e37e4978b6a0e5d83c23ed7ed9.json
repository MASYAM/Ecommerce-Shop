{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from 'react-native-reanimated';\nexport default class TabBarIcon extends React.Component {\n  render() {\n    var {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style\n    } = this.props;\n    return React.createElement(View, {\n      style: style\n    }, React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: activeOpacity\n      }]\n    }, renderIcon({\n      route,\n      focused: true,\n      horizontal,\n      tintColor: activeTintColor\n    })), React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: inactiveOpacity\n      }]\n    }, renderIcon({\n      route,\n      focused: false,\n      horizontal,\n      tintColor: inactiveTintColor\n    })));\n  }\n\n}\nvar styles = StyleSheet.create({\n  icon: {\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    minWidth: 25\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","render","style","styles","opacity","activeOpacity","renderIcon","focused","tintColor","activeTintColor","inactiveOpacity","inactiveTintColor","icon","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;AAEA,OAAA,QAAA,MAAA,yBAAA;AAmBA,eAAe,MAAA,UAAA,SAAyBA,KAAK,CAA9B,SAAA,CAAgD;AAC7DC,EAAAA,MAAM,GAAG;AACP,QAAM;AAAA,MAAA,KAAA;AAAA,MAAA,aAAA;AAAA,MAAA,eAAA;AAAA,MAAA,eAAA;AAAA,MAAA,iBAAA;AAAA,MAAA,UAAA;AAAA,MAAA,UAAA;AAQJC,MAAAA;AARI,QASF,KAVG,KACP;AAaA,WACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,KAAK,EAAEA;AAAb,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,MAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,QAAAA,OAAO,EAAEC;AAAX,OAAd;AAAtB,KAAA,EACGC,UAAU,CAAC;AAAA,MAAA,KAAA;AAEVC,MAAAA,OAAO,EAFG,IAAA;AAAA,MAAA,UAAA;AAIVC,MAAAA,SAAS,EAAEC;AAJD,KAAD,CADb,CADF,EASE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,MAAA,KAAK,EAAE,CAACN,MAAM,CAAP,IAAA,EAAc;AAAEC,QAAAA,OAAO,EAAEM;AAAX,OAAd;AAAtB,KAAA,EACGJ,UAAU,CAAC;AAAA,MAAA,KAAA;AAEVC,MAAAA,OAAO,EAFG,KAAA;AAAA,MAAA,UAAA;AAIVC,MAAAA,SAAS,EAAEG;AAJD,KAAD,CADb,CATF,CADF;AAoBD;;AAnC4D;AAsC/D,IAAMR,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BS,EAAAA,IAAI,EAAE;AAIJC,IAAAA,QAAQ,EAJJ,UAAA;AAKJC,IAAAA,SAAS,EALL,QAAA;AAMJC,IAAAA,UAAU,EANN,QAAA;AAOJC,IAAAA,cAAc,EAPV,QAAA;AAQJC,IAAAA,MAAM,EARF,MAAA;AASJC,IAAAA,KAAK,EATD,MAAA;AAWJC,IAAAA,QAAQ,EAAE;AAXN;AADyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { NavigationRoute } from 'react-navigation';\n\ntype Props = {\n  route: NavigationRoute;\n  horizontal?: boolean;\n  activeOpacity: number;\n  inactiveOpacity: number;\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  renderIcon: (props: {\n    route: NavigationRoute;\n    focused: boolean;\n    tintColor?: string;\n    horizontal?: boolean;\n  }) => React.ReactNode;\n  style: StyleProp<ViewStyle>;\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}