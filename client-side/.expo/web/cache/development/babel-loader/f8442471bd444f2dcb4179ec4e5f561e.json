{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-gesture-handler/GestureButtons.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport createNativeWrapper from \"./createNativeWrapper\";\nimport GestureHandlerButton from \"./GestureHandlerButton\";\nimport State from \"./State\";\nexport var RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexport class BaseButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleEvent = (_ref) => {\n      var {\n        nativeEvent\n      } = _ref;\n      var {\n        state,\n        oldState,\n        pointerInside\n      } = nativeEvent;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== this._lastActive && this.props.onActiveStateChange) {\n        this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && this._lastActive && this.props.onPress) {\n        this.props.onPress(active);\n      }\n\n      this._lastActive = active;\n    };\n\n    this._onHandlerStateChange = e => {\n      this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n\n      this._handleEvent(e);\n    };\n\n    this._onGestureEvent = e => {\n      this.props.onGestureEvent && this.props.onGestureEvent(e);\n\n      this._handleEvent(e);\n    };\n\n    this._lastActive = false;\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      rippleColor\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"rippleColor\"]);\n\n    return React.createElement(RawButton, _extends({\n      rippleColor: processColor(rippleColor)\n    }, rest, {\n      onGestureEvent: this._onGestureEvent,\n      onHandlerStateChange: this._onHandlerStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\nBaseButton.propTypes = _objectSpread(_objectSpread({}, RawButton.propTypes), {}, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\nexport class RectButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 0);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(0);\n  }\n\n  render() {\n    var _this$props2 = this.props,\n        {\n      children,\n      style\n    } = _this$props2,\n        rest = _objectWithoutProperties(_this$props2, [\"children\", \"style\"]);\n\n    var resolvedStyle = StyleSheet.flatten(style != null ? style : {});\n    return React.createElement(BaseButton, _extends({}, rest, {\n      style: resolvedStyle,\n      onActiveStateChange: this._onActiveStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }), React.createElement(Animated.View, {\n      style: [btnStyles.underlay, {\n        opacity: this._opacity,\n        backgroundColor: this.props.underlayColor,\n        borderRadius: resolvedStyle.borderRadius,\n        borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n        borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n        borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n        borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }), children);\n  }\n\n}\nRectButton.propTypes = BaseButton.propTypes;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\nexport class BorderlessButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 1);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(1);\n  }\n\n  render() {\n    var _this$props3 = this.props,\n        {\n      children,\n      style\n    } = _this$props3,\n        rest = _objectWithoutProperties(_this$props3, [\"children\", \"style\"]);\n\n    return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n      onActiveStateChange: this._onActiveStateChange,\n      style: [style, Platform.OS === 'ios' && {\n        opacity: this._opacity\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n}\nBorderlessButton.propTypes = _objectSpread(_objectSpread({}, BaseButton.propTypes), {}, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\nexport { default as PureNativeButton } from \"./GestureHandlerButton\";","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-gesture-handler/GestureButtons.js"],"names":["PropTypes","React","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","Component","constructor","props","_handleEvent","nativeEvent","state","oldState","pointerInside","active","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","_onHandlerStateChange","e","onHandlerStateChange","_onGestureEvent","onGestureEvent","render","rippleColor","rest","processColor","propTypes","func","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","opacity","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","borderless","bool","default","PureNativeButton"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"module"}