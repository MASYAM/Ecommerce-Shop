{"ast":null,"code":"import { createAnimatedSet as set } from \"../core/AnimatedSet\";\nimport interpolate from \"../derived/interpolate\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport { val } from \"../val\";\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return \"AnimatedValue, id: \".concat(this.__nodeID);\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n\n}","map":{"version":3,"sources":["AnimatedValue.js"],"names":["createAnimatedSet","setValue","Platform","val","ReanimatedModule","evaluateOnce","set","toString","interpolate"],"mappings":"AAAA,SAASA,iBAAiB,IAA1B,GAAA;AACA,OAAA,WAAA;AACA,OAAA,qBAAA;;AAEA,SAAA,YAAA;AACA,OAAA,gBAAA;AACA,SAAA,GAAA;AAGA,eAAe,MAAA,aAAA,SAAA,qBAAA,CAAkD;AAC/DC,EAAAA,QAAQ,CAAA,KAAA,EAAQ;AACd,SAAA,iBAAA,CAAuB,KAAvB,UAAA;;AACA,QAAIC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,IAAyBA,QAAQ,CAARA,EAAAA,KAAzBA,SAAAA,IAAsDA,QAAQ,CAARA,EAAAA,KAA1D,OAAA,EAAmF;AACjF,WAAA,YAAA,CAAkBC,GAAG,CAArB,KAAqB,CAArB;AADF,KAAA,MAEO;AACL,UAAIC,gBAAgB,CAAhBA,QAAAA,IAA6B,OAAA,KAAA,KAAjC,QAAA,EAA4D;AAI1DA,QAAAA,gBAAgB,CAAhBA,QAAAA,CAA0B,KAA1BA,QAAAA,EAAAA,KAAAA;AAJF,OAAA,MAKO;AACLC,QAAAA,YAAY,CAACC,GAAG,CAAA,IAAA,EAAJ,KAAI,CAAJ,EAAZD,IAAY,CAAZA;AACD;AACF;AACF;;AAEDE,EAAAA,QAAQ,GAAG;AACT,WAAA,sBAAA,MAAA,CAA6B,KAA7B,QAAA,CAAA;AACD;;AAEDC,EAAAA,WAAW,CAAA,MAAA,EAAS;AAClB,WAAOA,WAAW,CAAA,IAAA,EAAlB,MAAkB,CAAlB;AACD;;AAvB8D","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../ReanimatedModule';\nimport { val } from '../val';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos') {\n      this._updateValue(val(value));\n    } else {\n      if (ReanimatedModule.setValue && typeof value === 'number') {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}