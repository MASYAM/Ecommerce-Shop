{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-easy-grid/Components/Grid.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport computeProps from \"../Utils/computeProps\";\nimport Col from \"./Col\";\nimport Row from \"./Row\";\nexport default class GridNB extends Component {\n  prepareRootProps() {\n    var type = {\n      flex: 1,\n      flexDirection: this.ifRow() ? 'column' : 'row'\n    };\n    var defaultProps = {\n      style: type\n    };\n    return computeProps(this.props, defaultProps);\n  }\n\n  ifRow() {\n    var row = false;\n    React.Children.forEach(this.props.children, function (child) {\n      if (child && child.type == Row) row = true;\n    });\n    return row;\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  render() {\n    if (this.props.onPress) {\n      return React.createElement(TouchableOpacity, {\n        onPress: this.props.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, React.createElement(View, _extends({\n        ref: component => this._root = component\n      }, this.props, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      }), this.props.children));\n    } else {\n      return React.createElement(View, _extends({\n        ref: component => this._root = component\n      }, this.props, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }), this.props.children);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-easy-grid/Components/Grid.js"],"names":["React","Component","computeProps","Col","Row","GridNB","prepareRootProps","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","setNativeProps","nativeProps","_root","render","onPress","component"],"mappings":"AAAA;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAOC,YAAP;AACA,OAAOC,GAAP;AACA,OAAOC,GAAP;AAGA,eAAe,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC1CK,EAAAA,gBAAgB,GAAG;AAEf,QAAIC,IAAI,GAAG;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,aAAa,EAAE,KAAKC,KAAL,KAAe,QAAf,GAA0B;AAFlC,KAAX;AAKA,QAAIC,YAAY,GAAG;AACfC,MAAAA,KAAK,EAAEL;AADQ,KAAnB;AAIA,WAAOL,YAAY,CAAC,KAAKW,KAAN,EAAaF,YAAb,CAAnB;AAEH;;AAEDD,EAAAA,KAAK,GAAG;AACJ,QAAII,GAAG,GAAG,KAAV;AACAd,IAAAA,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;AACzD,UAAGA,KAAK,IAAIA,KAAK,CAACX,IAAN,IAAcH,GAA1B,EACIU,GAAG,GAAG,IAAN;AACP,KAHD;AAIA,WAAOA,GAAP;AACH;;AAEDK,EAAAA,cAAc,CAACC,WAAD,EAAc;AAC1B,SAAKC,KAAL,CAAWF,cAAX,CAA0BC,WAA1B;AACD;;AAEHE,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKT,KAAL,CAAWU,OAAd,EAAsB;AACpB,aACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEC,SAAS,IAAI,KAAKH,KAAL,GAAaG;AADjC,SAEM,KAAKX,KAFX,EAGM,KAAKP,gBAAL,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,KAAKO,KAAL,CAAWI,QAJb,CADI,CADF;AASD,KAVD,MAWI;AACF,aACE,oBAAC,IAAD;AACF,QAAA,GAAG,EAAEO,SAAS,IAAI,KAAKH,KAAL,GAAaG;AAD7B,SAEE,KAAKX,KAFP,EAGE,KAAKP,gBAAL,EAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIF,KAAKO,KAAL,CAAWI,QAJT,CADF;AAOD;AACF;;AAlD2C","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child && child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}