{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar UPDATED_NODES = [];\nvar loopID = 1;\nvar propUpdatesEnqueued = null;\nvar nodeCount = 0;\nvar callID = \"\";\nexport function getCallID() {\n  return callID;\n}\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    var output = {};\n\n    for (var property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n\n    return output;\n  }\n\n  return config;\n}\n\nfunction runPropUpdates() {\n  var visitedNodes = new Set();\n\n  var findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      var nodes = node.__getChildren();\n\n      if (nodes) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < UPDATED_NODES.length; i++) {\n    var node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n\n  UPDATED_NODES.length = 0;\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nexport default class AnimatedNode {\n  constructor(nodeConfig, inputNodes) {\n    _defineProperty(this, \"__nodeID\", void 0);\n\n    _defineProperty(this, \"__lastLoopID\", {\n      \"\": -1\n    });\n\n    _defineProperty(this, \"__memoizedValue\", {\n      \"\": null\n    });\n\n    _defineProperty(this, \"__children\", []);\n\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes = inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return \"AnimatedNode, id: \".concat(this.__nodeID);\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    var nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    var nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n\n      var result = this.__onEvaluate();\n\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = setImmediate(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, _objectSpread({}, this.__nodeConfig));\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n\n    this.__children.push(child);\n\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    var index = this.__children.indexOf(child);\n\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n\n}","map":{"version":3,"sources":["AnimatedNode.js"],"names":["UPDATED_NODES","loopID","propUpdatesEnqueued","nodeCount","callID","Platform","Array","config","output","property","sanitizeConfig","visitedNodes","findAndUpdateNodes","node","console","nodes","i","l","constructor","inputNodes","toString","__attach","__detach","__getValue","result","__forceUpdateCache","__dangerouslyRescheduleEvaluate","__markUpdated","setImmediate","__nativeInitialize","ReanimatedModule","__nativeTearDown","isNativelyInitialized","__onEvaluate","__getProps","__getChildren","__addChild","child","__removeChild","index","_connectAnimatedView","_disconnectAnimatedView"],"mappings":"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","sourcesContent":["import ReanimatedModule from '../ReanimatedModule';\nimport { Platform } from 'react-native';\n\nconst UPDATED_NODES = [];\n\nlet loopID = 1;\nlet propUpdatesEnqueued = null;\nlet nodeCount = 0;\nlet callID = \"\";\n\nexport function getCallID() {\n  return callID;\n}\n\nexport function setCallID(nextCallID) {\n  callID = nextCallID;\n}\n\nfunction sanitizeConfig(config) {\n  if (Platform.OS === 'web' || Platform.OS === 'windows' || Platform.OS === 'macos' || ['undefined', 'string', 'function', 'boolean', 'number'].includes(typeof config)) {\n    return config;\n  } else if (Array.isArray(config)) {\n    return config.map(sanitizeConfig);\n  } else if (config instanceof AnimatedNode) {\n    return config.__nodeID;\n  } else if (typeof config === 'object') {\n    const output = {};\n    for (const property in config) {\n      if (property in config) {\n        output[property] = sanitizeConfig(config[property]);\n      }\n    }\n    return output;\n  }\n  // unhandled\n  return config;\n}\n\nfunction runPropUpdates() {\n  const visitedNodes = new Set();\n  const findAndUpdateNodes = node => {\n    if (!node) {\n      console.warn('findAndUpdateNodes was passed a nullish node');\n      return;\n    }\n\n    if (visitedNodes.has(node)) {\n      return;\n    } else {\n      visitedNodes.add(node);\n    }\n    if (typeof node.update === 'function') {\n      node.update();\n    } else {\n      const nodes = node.__getChildren();\n      if (nodes) {\n        for (let i = 0, l = nodes.length; i < l; i++) {\n          findAndUpdateNodes(nodes[i]);\n        }\n      }\n    }\n  };\n  for (let i = 0; i < UPDATED_NODES.length; i++) {\n    const node = UPDATED_NODES[i];\n    findAndUpdateNodes(node);\n  }\n  UPDATED_NODES.length = 0; // clear array\n  propUpdatesEnqueued = null;\n  loopID += 1;\n}\n\nexport default class AnimatedNode {\n\n  __nodeID;\n  __lastLoopID = { \"\": -1 };\n  __memoizedValue = { \"\": null };\n  __children = [];\n\n  constructor(nodeConfig, inputNodes) {\n    this.__nodeID = ++nodeCount;\n    this.__nodeConfig = sanitizeConfig(nodeConfig);\n    this.__initialized = false;\n    this.__inputNodes =\n      inputNodes && inputNodes.filter(node => node instanceof AnimatedNode);\n  }\n\n  toString() {\n    return `AnimatedNode, id: ${this.__nodeID}`;\n  }\n\n  __attach() {\n    this.__nativeInitialize();\n\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    const nodes = this.__inputNodes;\n\n    if (nodes) {\n      for (let i = 0, l = nodes.length; i < l; i++) {\n        nodes[i].__removeChild(this);\n      }\n    }\n\n    this.__nativeTearDown();\n  }\n\n  __getValue() {\n    if (!(callID in this.__lastLoopID) || this.__lastLoopID[callID] < loopID) {\n      this.__lastLoopID[callID] = loopID;\n      const result = this.__onEvaluate();\n      this.__memoizedValue[callID] = result;\n      return result;\n    }\n    return this.__memoizedValue[callID];\n  }\n\n  __forceUpdateCache(newValue) {\n    this.__memoizedValue[callID] = newValue;\n    this.__markUpdated();\n  }\n\n  __dangerouslyRescheduleEvaluate() {\n    this.__lastLoopID[callID] = -1;\n    this.__markUpdated();\n  }\n\n  __markUpdated() {\n    UPDATED_NODES.push(this);\n    if (!propUpdatesEnqueued) {\n      propUpdatesEnqueued = setImmediate(runPropUpdates);\n    }\n  }\n\n  __nativeInitialize() {\n    if (!this.__initialized) {\n      ReanimatedModule.createNode(this.__nodeID, { ...this.__nodeConfig });\n      this.__initialized = true;\n    }\n  }\n\n  __nativeTearDown() {\n    if (this.__initialized) {\n      ReanimatedModule.dropNode(this.__nodeID);\n      this.__initialized = false;\n    }\n  }\n\n  isNativelyInitialized() {\n    return this.__initialized;\n  }\n\n  __onEvaluate() {\n    throw new Error('Missing implementation of onEvaluate');\n  }\n\n  __getProps() {\n    return this.__getValue();\n  }\n\n  __getChildren() {\n    return this.__children;\n  }\n\n  __addChild(child) {\n    if (this.__children.length === 0) {\n      this.__attach();\n    }\n    this.__children.push(child);\n    child.__nativeInitialize();\n\n    if (ReanimatedModule.connectNodes) {\n      ReanimatedModule.connectNodes(this.__nodeID, child.__nodeID);\n    } else {\n      child.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  __removeChild(child) {\n    const index = this.__children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n\n    if (ReanimatedModule.disconnectNodes) {\n      ReanimatedModule.disconnectNodes(this.__nodeID, child.__nodeID);\n    }\n\n    this.__children.splice(index, 1);\n    if (this.__children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  _connectAnimatedView(nativeViewTag) {\n    if (ReanimatedModule.connectNodeToView) {\n      ReanimatedModule.connectNodeToView(this.__nodeID, nativeViewTag);\n    } else {\n      this.__dangerouslyRescheduleEvaluate();\n    }\n  }\n\n  _disconnectAnimatedView(nativeViewTag) {\n    ReanimatedModule.disconnectNodeFromView(this.__nodeID, nativeViewTag);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}