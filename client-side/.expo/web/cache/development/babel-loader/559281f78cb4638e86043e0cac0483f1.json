{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/navigation/LegacyNavigator.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Router, Stack, Drawer, Modal, Scene } from 'react-native-router-flux';\nimport { View, StyleProvider, Root } from 'native-base';\nimport { connect } from 'react-redux';\nimport * as Screens from \"../screens\";\nimport { ScreenNames } from \"../constants/Screens\";\nimport { CurrentTheme } from \"../constants/Theme\";\nimport { getTheme } from \"../native-base-theme\";\nvar AppRouter = connect()(Router);\nexport class LegacyNavigator extends React.PureComponent {\n  render() {\n    var pushModalProps = {\n      hideNavBar: true,\n      gesturesEnabled: false\n    };\n    return React.createElement(StyleProvider, {\n      style: getTheme(CurrentTheme.Styles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }\n    }, React.createElement(Root, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, React.createElement(AppRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, React.createElement(Scene, {\n      initial: true,\n      hideNavBar: true,\n      key: ScreenNames.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.StartUp,\n      initial: true,\n      component: Screens.StartupScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }), React.createElement(Stack, _extends({}, pushModalProps, {\n      path: \"/\",\n      key: ScreenNames.Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.TutorialScreen,\n      component: Screens.TutorialScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      inital: true,\n      key: ScreenNames.Landing + \"$main\",\n      component: Screens.Landing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.RegisterScreen,\n      component: Screens.RegisterScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.LoginScreen,\n      component: Screens.LoginScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    })), React.createElement(Scene, {\n      drawer: true,\n      hideNavBar: true,\n      key: ScreenNames.AppMain,\n      contentComponent: Screens.DrawerScreen,\n      drawerPosition: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, React.createElement(Stack, _extends({}, pushModalProps, {\n      key: ScreenNames.ExploreShop,\n      path: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.ExploreShop,\n      component: Screens.ExploreShop,\n      inital: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.ClothesListing,\n      component: Screens.ClothesListing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.ClothesDetail,\n      component: Screens.ClothesDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.ShoppingCart,\n      component: Screens.ShoppingCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.InboxMessage,\n      component: Screens.InboxMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.InboxDetail,\n      component: Screens.InboxDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.CheckoutScreen,\n      component: Screens.CheckoutScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.FindProduct,\n      component: Screens.FindProduct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    })), React.createElement(Scene, {\n      hideNavBar: true,\n      key: ScreenNames.InternalBrowser,\n      component: Screens.InternalBrowser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      path: \"/my/profile/\",\n      key: ScreenNames.MyProfileView,\n      component: Screens.ProfileView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      path: \"/settings\",\n      key: ScreenNames.Settings,\n      component: Screens.Settings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      path: \"/help\",\n      key: ScreenNames.Help,\n      component: Screens.Help,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }))), React.createElement(Scene, {\n      hideNavBar: true,\n      modal: true,\n      key: ScreenNames.InternalBrowser + '$popup',\n      component: Screens.InternalBrowser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), React.createElement(Scene, {\n      hideNavBar: true,\n      modal: true,\n      path: \"/profile/:profileId\",\n      key: ScreenNames.ProfileView,\n      component: Screens.ProfileView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/navigation/LegacyNavigator.js"],"names":["React","Router","Stack","Drawer","Modal","Scene","View","StyleProvider","Root","connect","Screens","ScreenNames","CurrentTheme","getTheme","AppRouter","LegacyNavigator","PureComponent","render","pushModalProps","hideNavBar","gesturesEnabled","Styles","root","StartUp","StartupScreen","Landing","TutorialScreen","RegisterScreen","LoginScreen","AppMain","DrawerScreen","ExploreShop","ClothesListing","ClothesDetail","ShoppingCart","InboxMessage","InboxDetail","CheckoutScreen","FindProduct","InternalBrowser","MyProfileView","ProfileView","Settings","Help"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Router, Stack, Drawer, Modal, Scene } from 'react-native-router-flux';\nimport { View, StyleProvider, Root } from 'native-base';\nimport { connect } from 'react-redux';\n\nimport * as Screens from \"../screens\";\nimport { ScreenNames } from '../constants/Screens';\nimport { CurrentTheme } from \"../constants/Theme\";\nimport { getTheme } from '../native-base-theme';\n\nconst AppRouter = connect()(Router)\nexport class LegacyNavigator extends React.PureComponent {\n    render() {\n\n        const pushModalProps = {\n            hideNavBar: true,\n            gesturesEnabled: false,\n          };\n\n        return <StyleProvider style={getTheme(CurrentTheme.Styles)}>\n            <Root>\n                <AppRouter>\n                    <Modal>\n                        <Scene initial hideNavBar key={ScreenNames.root}>\n                            <Scene hideNavBar key={ScreenNames.StartUp} initial component={Screens.StartupScreen} />\n                            <Stack {...pushModalProps}  path=\"/\" key={ScreenNames.Landing}>\n                                <Scene hideNavBar key={ScreenNames.TutorialScreen} component={Screens.TutorialScreen} />\n                                <Scene hideNavBar inital key={ScreenNames.Landing + \"$main\"} component={Screens.Landing} />\n                                <Scene hideNavBar key={ScreenNames.RegisterScreen} component={Screens.RegisterScreen} />\n                                <Scene hideNavBar key={ScreenNames.LoginScreen} component={Screens.LoginScreen} />\n                            </Stack>\n\n                            <Scene drawer hideNavBar key={ScreenNames.AppMain} contentComponent={Screens.DrawerScreen} drawerPosition=\"left\">\n                                <Stack {...pushModalProps}  key={ScreenNames.ExploreShop} path=\"/home\" >\n                                    <Scene hideNavBar key={ScreenNames.ExploreShop} component={Screens.ExploreShop} inital/>\n                                    <Scene hideNavBar key={ScreenNames.ClothesListing} component={Screens.ClothesListing} />\n                                    <Scene hideNavBar key={ScreenNames.ClothesDetail} component={Screens.ClothesDetail} />\n                                    <Scene hideNavBar key={ScreenNames.ShoppingCart} component={Screens.ShoppingCart} />\n\n                                    <Scene hideNavBar key={ScreenNames.InboxMessage} component={Screens.InboxMessage} />\n                                    <Scene hideNavBar key={ScreenNames.InboxDetail} component={Screens.InboxDetail} />\n\n\n                                    \n\n\n                                    <Scene hideNavBar key={ScreenNames.CheckoutScreen} component={Screens.CheckoutScreen} />\n                                    <Scene hideNavBar key={ScreenNames.FindProduct} component={Screens.FindProduct} />\n                                </Stack>\n                                <Scene hideNavBar key={ScreenNames.InternalBrowser} component={Screens.InternalBrowser} />\n                                <Scene hideNavBar path=\"/my/profile/\" key={ScreenNames.MyProfileView} component={Screens.ProfileView} />\n                                <Scene hideNavBar path=\"/settings\" key={ScreenNames.Settings} component={Screens.Settings} />\n                                <Scene hideNavBar path=\"/help\" key={ScreenNames.Help} component={Screens.Help} />\n                            </Scene>\n                        </Scene>\n                        <Scene hideNavBar modal key={ScreenNames.InternalBrowser + '$popup'} component={Screens.InternalBrowser} />\n                        <Scene hideNavBar modal path=\"/profile/:profileId\" key={ScreenNames.ProfileView} component={Screens.ProfileView} />\n                    </Modal>\n                </AppRouter>\n            </Root>\n        </StyleProvider>\n    }\n}"]},"metadata":{},"sourceType":"module"}