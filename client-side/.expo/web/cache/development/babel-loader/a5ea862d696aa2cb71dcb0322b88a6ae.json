{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/components/legacy/DrawerContent/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Container, Content, Header, Icon } from 'native-base';\nimport { NavigationActions, NavigationProp } from 'react-navigation';\nimport { Actions } from 'react-native-router-flux';\nimport { Colors, ImageSources } from \"../../../constants\";\nimport { DrawerMenuItem } from \"../DrawerMenuItem\";\nimport styles from \"./style\";\nexport var DrawerContent = props => {\n  var {\n    menuItems,\n    userProfile,\n    onPressProfile,\n    navigation\n  } = props;\n\n  var onOpenMenuItem = menuItem => {\n    if (!!menuItem.to) {\n      var params = typeof menuItem.params === \"function\" ? menuItem.params() : menuItem.params;\n\n      if (menuItem.modal) {\n        Actions.push(menuItem.to, _objectSpread({\n          modal: true\n        }, params));\n      } else {\n        Actions.drawerClose();\n        Actions.jump(menuItem.to, params);\n        setTimeout(() => {\n          Actions.refresh(params);\n        }, 5);\n      }\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.userProfileContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../../../../assets/profile_bg.png\"),\n    resizeMode: \"cover\",\n    style: styles.backgroundImage,\n    imageStyle: styles.backgroundImage_imageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.userProfileWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }\n  }, React.createElement(View, {\n    style: styles.userProfilePicWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    style: styles.userImage,\n    source: {\n      uri: userProfile.profilePic\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onPressProfile,\n    style: styles.usernameWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.usernameText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, userProfile.name), React.createElement(Text, {\n    style: styles.usernameSubtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"View profile\"))))), React.createElement(ScrollView, {\n    contentContainerStyle: {\n      backgroundColor: Colors.white\n    },\n    style: {\n      backgroundColor: Colors.white,\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, !!menuItems && Array.isArray(menuItems) && menuItems.map((menuItem, index) => React.createElement(DrawerMenuItem, {\n    key: \"$mi-\".concat(index),\n    icon: menuItem.icon,\n    title: menuItem.title,\n    notification: menuItem.notification,\n    onPress: () => onOpenMenuItem(menuItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/components/legacy/DrawerContent/index.js"],"names":["React","Container","Content","Header","Icon","NavigationActions","NavigationProp","Actions","Colors","ImageSources","DrawerMenuItem","styles","DrawerContent","props","menuItems","userProfile","onPressProfile","navigation","onOpenMenuItem","menuItem","to","params","modal","push","drawerClose","jump","setTimeout","refresh","userProfileContainer","require","backgroundImage","backgroundImage_imageStyle","userProfileWrap","userProfilePicWrap","userImage","uri","profilePic","usernameWrap","usernameText","name","usernameSubtext","backgroundColor","white","flex","Array","isArray","map","index","icon","title","notification"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    ScrollView,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    ImageBackground\n    \n} from 'react-native';\nimport { Container, Content, Header, Icon } from 'native-base';\nimport { NavigationActions, NavigationProp } from 'react-navigation';\nimport { Actions } from 'react-native-router-flux';\nimport { Colors, ImageSources } from '../../../constants';\nimport { DrawerMenuItem } from '../DrawerMenuItem';\nimport styles from './style';\n\ntype DrawerUserProfilePayload = {\n    name: string,\n    pictureUrl: string,\n}\ntype DrawerMenuItemPayload = {\n    icon: string,\n    title: string,\n    to?: string,\n    params?: any,\n    modal?: boolean,\n}\ntype DrawerContentProps = {\n    navigation: NavigationProp,\n    onPressProfile?: () => void,\n    userProfile?: DrawerUserProfilePayload,\n    menuItems?: DrawerMenuItemPayload[],\n}\n\nexport const DrawerContent: React.FC<DrawerContentProps> = (props: DrawerContentProps) => {\n\n    const { menuItems, userProfile, onPressProfile, navigation } = props;\n    const onOpenMenuItem = (menuItem: DrawerMenuItem) => {\n        if ( !!menuItem.to ) {\n            const params = typeof menuItem.params === \"function\" ? menuItem.params() : menuItem.params;\n            if ( menuItem.modal ) {\n                Actions.push(menuItem.to, {modal: true, ...params});\n            } else {\n                Actions.drawerClose();\n                Actions.jump(menuItem.to, params);\n                setTimeout( () => {\n                    Actions.refresh(params);\n                }, 5);\n            }\n        }\n    }\n    return (\n        <Container>\n            <SafeAreaView style={styles.userProfileContainer}>\n            <ImageBackground\n                source={require(\"../../../../assets/profile_bg.png\")}\n                resizeMode=\"cover\"\n                style={styles.backgroundImage}\n                imageStyle={styles.backgroundImage_imageStyle}\n            >\n                 <View style={styles.userProfileWrap}>\n                    <View style={styles.userProfilePicWrap}>\n                        <Image style={styles.userImage}  source={{ uri: userProfile.profilePic  }}  />\n                        {/* <View style={styles.cameraButton}>\n                            <Icon name=\"camera\" type=\"MaterialCommunityIcons\" style={styles.cameraIcon} />\n                        </View> */}\n                    </View>\n                    <TouchableOpacity  onPress={onPressProfile} style={styles.usernameWrap}>\n                        <Text style={styles.usernameText}>{userProfile.name}</Text>\n                        <Text style={styles.usernameSubtext}>View profile</Text>\n                    </TouchableOpacity>\n                </View>\n                </ImageBackground>\n            </SafeAreaView>\n            <ScrollView contentContainerStyle={{backgroundColor: Colors.white}} style={{backgroundColor: Colors.white, flex: 1}}>\n                {!!menuItems && Array.isArray(menuItems) && menuItems.map((menuItem, index) => (\n                    <DrawerMenuItem\n                        key={`$mi-${index}`}\n                        icon={menuItem.icon}\n                        title={menuItem.title}\n                        notification={menuItem.notification}\n                        onPress={() => onOpenMenuItem(menuItem)}\n                    />\n                ))}\n\n            </ScrollView>\n        </Container>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}