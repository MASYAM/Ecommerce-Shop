{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/InboxMessage/index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport styles from \"./style\";\nimport MapView from \"react-native-map-clustering\";\nimport { Container, Tab, Tabs, Content, Form, Item, Picker, Button, Toast } from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { ThemeSettings, ImageSources, ScreenNames } from \"../../../constants\";\nimport { Basement } from \"../../../components/Basement\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from \"../../../components/legacy/ClothesDetailSlide\";\nimport ShoppingCartPriceRow from \"../../../components/legacy/ShoppingCartPriceRow\";\nimport InobxMessageItem from \"../../../components/legacy/InobxMessageItem\";\nimport { StandardHeader } from \"../../../components/legacy/Header\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { CloseButton, ButtonImage, MenuButton } from \"../../../components/StandardButtons\";\nimport { inboxActions } from \"../../../store/actions\";\nimport { ActionStatusTypeValues } from \"../../../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../../../store/selectors/app\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nvar {\n  width: viewportWidth,\n  height: viewportHeight\n} = Dimensions.get('window');\n\nclass InboxMessage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshContent = () => {\n      this.setState({\n        refreshing: true\n      });\n      var {\n        inboxActions,\n        navigation\n      } = this.props;\n      inboxActions.getInboxMessageList(navigation.state.key);\n    };\n\n    this.goCheckoutScreen = () => {\n      this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n    };\n\n    this.onPressViewDetail = id => {\n      console.log(\"onPressViewDetail   >>>\" + id);\n      this.props.navigation.navigate(ScreenNames.InboxDetail, {\n        id\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      lastRequest: 0,\n      lastSent: 0,\n      isUserWantToSavedLogin: false,\n      isShowAlert: false,\n      isShowingSuccessAlert: false,\n      inboxlist: [],\n      refreshing: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    var {\n      props,\n      state\n    } = this;\n\n    if (state.lastRequest !== props.inboxListRequest.lastRequest) {\n      if (props.inboxListRequest.status === ActionStatusTypeValues.ERROR) {\n        this.setState({\n          isLoading: false,\n          refreshing: false,\n          lastRequest: props.inboxListRequest.lastRequest\n        }, () => {\n          Toast.show({\n            type: \"danger\",\n            text: \"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n          });\n        });\n      } else if (props.inboxListRequest.status === ActionStatusTypeValues.COMPLETED) {\n        if (this.props.inboxListStatus === \"success\") {\n          this.setState({\n            isLoading: false,\n            refreshing: false,\n            lastRequest: props.inboxListRequest.lastRequest,\n            inboxlist: this.props.inboxlist\n          }, () => {});\n        } else {\n          this.setState({\n            isLoading: false,\n            isShowAlert: true,\n            refreshing: false,\n            lastRequest: props.inboxListRequest.lastRequest\n          }, () => {});\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.inboxlist.length == 0) {\n      this.refreshContent();\n    }\n  }\n\n  onValueChangeColor(value) {\n    this.setState({\n      selectedColor: value\n    });\n  }\n\n  render() {\n    return React.createElement(Basement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, React.createElement(StandardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 2\n      }\n    }), React.createElement(SafeAreaView, {\n      style: styles.menubuttoncontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 2\n      }\n    }, React.createElement(MenuButton, {\n      bg: true,\n      rounded: true,\n      onPress: () => Actions.drawerOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    })), React.createElement(ScrollView, {\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.refreshContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.shoppingCartContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 24\n      }\n    }, React.createElement(Text, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 28\n      }\n    }, \"Inbox Message\")), this.props.inboxlist.map((item, key) => {\n      return React.createElement(InobxMessageItem, {\n        key: key,\n        id: item.id,\n        icon: item.icon,\n        title: item.title,\n        subTitle: item.subTitle,\n        createDateTime: item.createDateTime,\n        onPressViewDetail: this.onPressViewDetail,\n        isRead: item.isRead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      });\n    }), this.props.inboxlist.length == 0 ? React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, \"You didn't any message yet.\"), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \"Let's go shopping  \\uD83D\\uDECD\\uFE0F\\uD83D\\uDECD\\uFE0F\\uD83D\\uDECD\\uFE0F\\uD83D\\uDC5A\\uD83D\\uDC5A\\uD83D\\uDC5A\")) : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 1\n      }\n    }))));\n  }\n\n}\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    inboxlist: state.inbox.inboxlist,\n    inboxListStatus: state.inbox.inboxListStatus,\n    inboxListErrorMessage: state.inbox.inboxListErrorMessage,\n    inboxListRequest: selectViewActionStatus(state, navigation.state.key, inboxActions.INBOX_LIST)\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    inboxActions: bindActionCreators(inboxActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxMessage);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/InboxMessage/index.js"],"names":["React","styles","MapView","Container","Tab","Tabs","Content","Form","Item","Picker","Button","Toast","Actions","Icon","ThemeSettings","ImageSources","ScreenNames","Basement","Carousel","Pagination","ClothesDetailSlide","ShoppingCartPriceRow","InobxMessageItem","StandardHeader","ScrollView","CloseButton","ButtonImage","MenuButton","inboxActions","ActionStatusTypeValues","selectViewActionStatus","bindActionCreators","connect","width","viewportWidth","height","viewportHeight","Dimensions","get","InboxMessage","Component","constructor","props","refreshContent","setState","refreshing","navigation","getInboxMessageList","state","key","goCheckoutScreen","navigate","CheckoutScreen","onPressViewDetail","id","console","log","InboxDetail","isLoading","lastRequest","lastSent","isUserWantToSavedLogin","isShowAlert","isShowingSuccessAlert","inboxlist","componentDidUpdate","prevProps","inboxListRequest","status","ERROR","show","type","text","COMPLETED","inboxListStatus","componentDidMount","length","onValueChangeColor","value","selectedColor","render","menubuttoncontainer","drawerOpen","shoppingCartContainer","titleContainer","titleStyle","map","item","icon","title","subTitle","createDateTime","isRead","mapStateToProps","ownProps","inbox","inboxListErrorMessage","INBOX_LIST","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    Image,\n    Platform,\n    InteractionManager,\n    SafeAreaView,\n    Dimensions,\n    RefreshControl\n    \n} from 'react-native';\nimport styles from './style';\nimport MapView from \"react-native-map-clustering\";\nimport {\n    Container,\n    Tab,\n    Tabs,\n    Content, Form, Item, Picker, Button,\n    Toast\n} from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { ThemeSettings, ImageSources, ScreenNames } from '../../../constants';\nimport { Basement } from '../../../components/Basement';\n// import Carousel from 'react-native-carousel-view';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from '../../../components/legacy/ClothesDetailSlide';\nimport ShoppingCartPriceRow from '../../../components/legacy/ShoppingCartPriceRow';\nimport InobxMessageItem from '../../../components/legacy/InobxMessageItem';\nimport { StandardHeader } from '../../../components/legacy/Header';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { CloseButton, ButtonImage, MenuButton } from '../../../components/StandardButtons';\n\n\n\n\n\n\nimport { inboxActions } from  '../../../store/actions';\nimport { ActionStatusTypeValues } from '../../../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../../../store/selectors/app';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\n\nconst { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    inboxListRequest: ViewActionStateInfo,\n    inboxActions: typeof inboxActions\n}\nclass InboxMessage extends React.Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading: false,\n            lastRequest:0,\n            lastSent: 0,\n            isUserWantToSavedLogin: false,\n            isShowAlert:false,\n            isShowingSuccessAlert: false,\n            inboxlist:[],\n            refreshing: false,\n        };\n    }\n\n\n\n    componentDidUpdate(prevProps: Props) {\n        const { props, state } = this;\n        if (state.lastRequest !== props.inboxListRequest.lastRequest) {\n            \n            \n            if (props.inboxListRequest.status === ActionStatusTypeValues.ERROR) {\n                this.setState({\n                    isLoading: false,\n                    refreshing: false,\n                    lastRequest: props.inboxListRequest.lastRequest,\n                }, () => {\n                    Toast.show({\n                        type: \"danger\",\n                        text:\"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n                    })\n                });\n            }\n            else if (props.inboxListRequest.status === ActionStatusTypeValues.COMPLETED) {\n                if(this.props.inboxListStatus===\"success\"){\n\n                    this.setState({\n                        isLoading: false,\n                        refreshing: false,\n                        lastRequest: props.inboxListRequest.lastRequest,\n                        inboxlist: this.props.inboxlist,\n                    }, () => {\n\n                    });\n\n                }else{\n                    this.setState({\n                        isLoading: false,\n                        isShowAlert:true,\n                        refreshing: false,\n                        lastRequest: props.inboxListRequest.lastRequest,\n                    }, () => {\n                    });\n                }\n            }\n\n            \n        }\n    }\n\n\n    refreshContent = () =>{\n        this.setState({refreshing: true});\n        const { inboxActions, navigation } = this.props;\n        inboxActions.getInboxMessageList(navigation.state.key);\n  \n    }\n\n\n    \n    componentDidMount () {\n\n        if(this.state.inboxlist.length == 0){\n            this.refreshContent();\n        }\n    }\n\n    onValueChangeColor(value: string) {\n        this.setState({\n          selectedColor: value\n        });\n      }\n\n\n    goCheckoutScreen = () => {\n        this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n    }\n\n    \n\n\n    onPressViewDetail = ( id) => {\n        console.log(\"onPressViewDetail   >>>\"+id);\n    \n\n        this.props.navigation.navigate(ScreenNames.InboxDetail, {\n            id,\n          });\n\n\n    }\n\n\n\n\n\n    render() {\n\n\n\n        return (\n            <Basement>\n <StandardHeader  />\n <SafeAreaView style={styles.menubuttoncontainer}>\n                        <MenuButton bg rounded onPress={() => Actions.drawerOpen()} />\n</SafeAreaView>\n\n                  <ScrollView\n                   refreshControl={\n                    <RefreshControl\n                      refreshing={this.state.refreshing}\n                      onRefresh={this.refreshContent}\n                    />\n                  }\n                  >\n                  \n                  <View style={styles.shoppingCartContainer}>\n                       <View style={styles.titleContainer}>\n                           <Text style={styles.titleStyle}>Inbox Message</Text>\n                       </View>\n                   \n\n                      { this.props.inboxlist.map((item, key) => {\n            return (\n                            <InobxMessageItem key={key}\n                            id={item.id}\n                            icon={item.icon}\n                            title={item.title}\n                            subTitle={item.subTitle}\n                            createDateTime={item.createDateTime}\n                            onPressViewDetail={this.onPressViewDetail}\n                            isRead={item.isRead}\n                        />\n            );\n       }) }\n           \n                               \n\n {this.props.inboxlist.length==0 ?\n         <View>\n                <Text>You didn't any message yet.</Text>\n                <Text>Let's go shopping  🛍️🛍️🛍️👚👚👚</Text>\n         </View>\n:\n<View>\n</View>\n\n }\n                    \n                      \n\n                    </View>\n                  </ScrollView>\n\n                     \n\n\n\n            </Basement> \n        );\n    }\n}\n\n\n\n\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        inboxlist: state.inbox.inboxlist,\n        inboxListStatus: state.inbox.inboxListStatus,\n        inboxListErrorMessage: state.inbox.inboxListErrorMessage,\n        inboxListRequest: selectViewActionStatus(state, navigation.state.key, inboxActions.INBOX_LIST),\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        inboxActions: bindActionCreators(inboxActions, dispatch),\n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxMessage);"]},"metadata":{},"sourceType":"module"}