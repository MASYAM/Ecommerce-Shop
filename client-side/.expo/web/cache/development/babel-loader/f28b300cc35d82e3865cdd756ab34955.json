{"ast":null,"code":"import { createAnimatedSet as set } from \"../core/AnimatedSet\";\nimport interpolate from \"../derived/interpolate\";\nimport InternalAnimatedValue from \"./InternalAnimatedValue\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nimport ReanimatedModule from \"../ReanimatedModule\";\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n\n    if (Platform.OS === 'web') {\n      this._updateValue(value);\n    } else {\n      if (ReanimatedModule.setValue && typeof value === \"number\") {\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return \"AnimatedValue, id: \".concat(this.__nodeID);\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-reanimated/src/core/AnimatedValue.js"],"names":["createAnimatedSet","set","interpolate","InternalAnimatedValue","evaluateOnce","ReanimatedModule","AnimatedValue","setValue","value","__detachAnimation","_animation","Platform","OS","_updateValue","__nodeID","toString","config"],"mappings":"AAAA,SAASA,iBAAiB,IAAIC,GAA9B;AACA,OAAOC,WAAP;AACA,OAAOC,qBAAP;;AAEA,SAASC,YAAT;AACA,OAAOC,gBAAP;AAGA,eAAe,MAAMC,aAAN,SAA4BH,qBAA5B,CAAkD;AAC/DI,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,SAAKC,iBAAL,CAAuB,KAAKC,UAA5B;;AACA,QAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,WAAKC,YAAL,CAAkBL,KAAlB;AACD,KAFD,MAEO;AACL,UAAIH,gBAAgB,CAACE,QAAjB,IAA6B,OAAOC,KAAP,KAAiB,QAAlD,EAA4D;AAI1DH,QAAAA,gBAAgB,CAACE,QAAjB,CAA0B,KAAKO,QAA/B,EAAyCN,KAAzC;AACD,OALD,MAKO;AACLJ,QAAAA,YAAY,CAACH,GAAG,CAAC,IAAD,EAAOO,KAAP,CAAJ,EAAmB,IAAnB,CAAZ;AACD;AACF;AACF;;AAEDO,EAAAA,QAAQ,GAAG;AACT,wCAA6B,KAAKD,QAAlC;AACD;;AAEDZ,EAAAA,WAAW,CAACc,MAAD,EAAS;AAClB,WAAOd,WAAW,CAAC,IAAD,EAAOc,MAAP,CAAlB;AACD;;AAvB8D","sourcesContent":["import { createAnimatedSet as set } from '../core/AnimatedSet';\nimport interpolate from '../derived/interpolate';\nimport InternalAnimatedValue from './InternalAnimatedValue';\nimport { Platform } from 'react-native';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport ReanimatedModule from '../ReanimatedModule';\n\n// Animated value wrapped with extra methods for omit cycle of dependencies\nexport default class AnimatedValue extends InternalAnimatedValue {\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    if (Platform.OS === 'web') {\n      this._updateValue(value);\n    } else {\n      if (ReanimatedModule.setValue && typeof value === \"number\") {\n        // FIXME Remove it after some time\n        // For OTA-safety\n        // FIXME handle setting value with a node\n        ReanimatedModule.setValue(this.__nodeID, value);\n      } else {\n        evaluateOnce(set(this, value), this);\n      }\n    }\n  }\n\n  toString() {\n    return `AnimatedValue, id: ${this.__nodeID}`;\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}