{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { coalesceExpirations, coalesceStatuses, coalesceCanAskAgain, coalesceGranted } from \"./CoalescedPermissions\";\nimport Permissions from \"./ExpoPermissions\";\nimport { PermissionStatus } from \"./Permissions.types\";\nexport { PermissionStatus };\nexport var CAMERA = 'camera';\nexport var CAMERA_ROLL = 'cameraRoll';\nexport var AUDIO_RECORDING = 'audioRecording';\nexport var LOCATION = 'location';\nexport var USER_FACING_NOTIFICATIONS = 'userFacingNotifications';\nexport var NOTIFICATIONS = 'notifications';\nexport var CONTACTS = 'contacts';\nexport var CALENDAR = 'calendar';\nexport var REMINDERS = 'reminders';\nexport var SYSTEM_BRIGHTNESS = 'systemBrightness';\nexport var MOTION = 'motion';\nexport function getAsync() {\n  return _getAsync.apply(this, arguments);\n}\n\nfunction _getAsync() {\n  _getAsync = _asyncToGenerator(function* () {\n    for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {\n      types[_key] = arguments[_key];\n    }\n\n    if (Platform.OS === 'ios') {\n      return yield _handleMultiPermissionsRequestIOSAsync(types, Permissions.getAsync);\n    }\n\n    return yield _handlePermissionsRequestAsync(types, Permissions.getAsync);\n  });\n  return _getAsync.apply(this, arguments);\n}\n\nexport function askAsync() {\n  return _askAsync.apply(this, arguments);\n}\n\nfunction _askAsync() {\n  _askAsync = _asyncToGenerator(function* () {\n    for (var _len2 = arguments.length, types = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      types[_key2] = arguments[_key2];\n    }\n\n    if (Platform.OS === 'ios') {\n      return yield _handleMultiPermissionsRequestIOSAsync(types, Permissions.askAsync);\n    }\n\n    return yield _handlePermissionsRequestAsync(types, Permissions.askAsync);\n  });\n  return _askAsync.apply(this, arguments);\n}\n\nfunction _handleSinglePermissionRequestIOSAsync(_x, _x2) {\n  return _handleSinglePermissionRequestIOSAsync2.apply(this, arguments);\n}\n\nfunction _handleSinglePermissionRequestIOSAsync2() {\n  _handleSinglePermissionRequestIOSAsync2 = _asyncToGenerator(function* (type, handlePermission) {\n    if (Platform.OS !== 'web' && type === 'motion') {\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        granted: true,\n        canAskAgain: true\n      };\n    }\n\n    return yield handlePermission(type);\n  });\n  return _handleSinglePermissionRequestIOSAsync2.apply(this, arguments);\n}\n\nfunction _handleMultiPermissionsRequestIOSAsync(_x3, _x4) {\n  return _handleMultiPermissionsRequestIOSAsync2.apply(this, arguments);\n}\n\nfunction _handleMultiPermissionsRequestIOSAsync2() {\n  _handleMultiPermissionsRequestIOSAsync2 = _asyncToGenerator(function* (types, handlePermission) {\n    if (!types.length) {\n      throw new Error('At least one permission type must be specified');\n    }\n\n    var permissions = {};\n\n    for (var type of types) {\n      permissions[type] = yield _handleSinglePermissionRequestIOSAsync(type, handlePermission);\n    }\n\n    return {\n      status: coalesceStatuses(permissions),\n      expires: coalesceExpirations(permissions),\n      canAskAgain: coalesceCanAskAgain(permissions),\n      granted: coalesceGranted(permissions),\n      permissions\n    };\n  });\n  return _handleMultiPermissionsRequestIOSAsync2.apply(this, arguments);\n}\n\nfunction _handlePermissionsRequestAsync(_x5, _x6) {\n  return _handlePermissionsRequestAsync2.apply(this, arguments);\n}\n\nfunction _handlePermissionsRequestAsync2() {\n  _handlePermissionsRequestAsync2 = _asyncToGenerator(function* (types, handlePermissions) {\n    if (!types.length) {\n      throw new Error('At least one permission type must be specified');\n    }\n\n    if (Platform.OS !== 'web' && types.length === 1 && types[0] === 'motion') {\n      var approvedPermission = {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        granted: true,\n        canAskAgain: true\n      };\n      return _objectSpread(_objectSpread({}, approvedPermission), {}, {\n        permissions: {\n          motion: approvedPermission\n        }\n      });\n    }\n\n    var permissions = yield handlePermissions(types);\n    return {\n      status: coalesceStatuses(permissions),\n      expires: coalesceExpirations(permissions),\n      canAskAgain: coalesceCanAskAgain(permissions),\n      granted: coalesceGranted(permissions),\n      permissions\n    };\n  });\n  return _handlePermissionsRequestAsync2.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Permissions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  coalesceExpirations,\n  coalesceStatuses,\n  coalesceCanAskAgain,\n  coalesceGranted,\n} from './CoalescedPermissions';\nimport Permissions from './ExpoPermissions';\nimport {\n  PermissionResponse,\n  PermissionType,\n  PermissionMap,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionInfo,\n} from './Permissions.types';\n\nexport {\n  PermissionStatus,\n  PermissionResponse,\n  PermissionExpiration,\n  PermissionMap,\n  PermissionInfo,\n  PermissionType,\n};\n\nexport const CAMERA = 'camera';\nexport const CAMERA_ROLL = 'cameraRoll';\nexport const AUDIO_RECORDING = 'audioRecording';\nexport const LOCATION = 'location';\nexport const USER_FACING_NOTIFICATIONS = 'userFacingNotifications';\nexport const NOTIFICATIONS = 'notifications';\nexport const CONTACTS = 'contacts';\nexport const CALENDAR = 'calendar';\nexport const REMINDERS = 'reminders';\nexport const SYSTEM_BRIGHTNESS = 'systemBrightness';\nexport const MOTION = 'motion';\n\nexport async function getAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  if (Platform.OS === 'ios') {\n    return await _handleMultiPermissionsRequestIOSAsync(types, Permissions.getAsync);\n  }\n  return await _handlePermissionsRequestAsync(types, Permissions.getAsync);\n}\n\nexport async function askAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  if (Platform.OS === 'ios') {\n    return await _handleMultiPermissionsRequestIOSAsync(types, Permissions.askAsync);\n  }\n  return await _handlePermissionsRequestAsync(types, Permissions.askAsync);\n}\n\nasync function _handleSinglePermissionRequestIOSAsync(\n  type: PermissionType,\n  handlePermission: (type: PermissionType) => Promise<PermissionInfo>\n): Promise<PermissionInfo> {\n  if (Platform.OS !== 'web' && type === 'motion') {\n    return {\n      status: PermissionStatus.GRANTED,\n      expires: 'never',\n      granted: true,\n      canAskAgain: true,\n    };\n  }\n  return await handlePermission(type);\n}\n\nasync function _handleMultiPermissionsRequestIOSAsync(\n  types: PermissionType[],\n  handlePermission: (type: PermissionType) => Promise<PermissionInfo>\n): Promise<PermissionResponse> {\n  if (!types.length) {\n    throw new Error('At least one permission type must be specified');\n  }\n\n  const permissions = {};\n  for (const type of types) {\n    permissions[type] = await _handleSinglePermissionRequestIOSAsync(type, handlePermission);\n  }\n\n  return {\n    status: coalesceStatuses(permissions),\n    expires: coalesceExpirations(permissions),\n    canAskAgain: coalesceCanAskAgain(permissions),\n    granted: coalesceGranted(permissions),\n    permissions,\n  };\n}\n\nasync function _handlePermissionsRequestAsync(\n  types: PermissionType[],\n  handlePermissions: (types: PermissionType[]) => Promise<PermissionMap>\n): Promise<PermissionResponse> {\n  if (!types.length) {\n    throw new Error('At least one permission type must be specified');\n  }\n\n  if (Platform.OS !== 'web' && types.length === 1 && types[0] === 'motion') {\n    const approvedPermission = {\n      status: PermissionStatus.GRANTED,\n      expires: 'never',\n      granted: true,\n      canAskAgain: true,\n    };\n    return {\n      ...approvedPermission,\n      // @ts-ignore\n      permissions: { motion: approvedPermission },\n    };\n  }\n\n  const permissions = await handlePermissions(types);\n  return {\n    status: coalesceStatuses(permissions),\n    expires: coalesceExpirations(permissions),\n    canAskAgain: coalesceCanAskAgain(permissions),\n    granted: coalesceGranted(permissions),\n    permissions,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}