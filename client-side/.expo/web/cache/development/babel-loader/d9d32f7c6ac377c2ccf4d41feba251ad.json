{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { REGISTER_ACCOUNT, LOGIN_ACCOUNT, CHECK_LOGIN, LOGOUT } from \"../actions/auth\";\nimport { ActionStatusTypeValues } from \"../../constants/actionStatusTypes\";\nvar initialState = {\n  token: null,\n  registerStatus: null,\n  registerErrorMessage: null,\n  loginStatus: null,\n  loginProfile: null,\n  loginErrorMessage: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var {\n    type,\n    payload,\n    status\n  } = action;\n\n  switch (action.type) {\n    case REGISTER_ACCOUNT:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          registerStatus: action.registerStatus,\n          registerErrorMessage: action.registerErrorMessage\n        });\n      }\n\n      break;\n\n    case LOGIN_ACCOUNT:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loginStatus: action.loginStatus,\n          loginProfile: action.loginProfile,\n          loginErrorMessage: action.loginErrorMessage,\n          token: action.token\n        });\n      }\n\n      break;\n\n    case CHECK_LOGIN:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          token: action.token,\n          loginProfile: action.loginProfile\n        });\n      }\n\n      break;\n\n    case LOGOUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/store/reducers/auth.js"],"names":["REGISTER_ACCOUNT","LOGIN_ACCOUNT","CHECK_LOGIN","LOGOUT","ActionStatusTypeValues","initialState","token","registerStatus","registerErrorMessage","loginStatus","loginProfile","loginErrorMessage","state","action","type","payload","status","COMPLETED"],"mappings":";;;;;;AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,MAJF;AAMA,SAASC,sBAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,cAAc,EAAE,IAFG;AAGnBC,EAAAA,oBAAoB,EAAE,IAHH;AAInBC,EAAAA,WAAW,EAAC,IAJO;AAKnBC,EAAAA,YAAY,EAAC,IALM;AAMnBC,EAAAA,iBAAiB,EAAE;AANA,CAArB;AASA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;AAC/C,MAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BH,MAAlC;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,gBAAL;AACE,UAAIgB,MAAM,KAAKZ,sBAAsB,CAACa,SAAtC,EAAiD;AAC/C,+CACKL,KADL;AAEEL,UAAAA,cAAc,EAAEM,MAAM,CAACN,cAFzB;AAGEC,UAAAA,oBAAoB,EAAEK,MAAM,CAACL;AAH/B;AAKD;;AACD;;AACA,SAAKP,aAAL;AACE,UAAIe,MAAM,KAAKZ,sBAAsB,CAACa,SAAtC,EAAiD;AAC/C,+CACKL,KADL;AAEEH,UAAAA,WAAW,EAAEI,MAAM,CAACJ,WAFtB;AAGEC,UAAAA,YAAY,EAAEG,MAAM,CAACH,YAHvB;AAIEC,UAAAA,iBAAiB,EAAEE,MAAM,CAACF,iBAJ5B;AAKEL,UAAAA,KAAK,EAAEO,MAAM,CAACP;AALhB;AAOD;;AACD;;AACA,SAAKJ,WAAL;AACA,UAAIc,MAAM,KAAKZ,sBAAsB,CAACa,SAAtC,EAAiD;AAC/C,+CACKL,KADL;AAEEN,UAAAA,KAAK,EAAEO,MAAM,CAACP,KAFhB;AAGEI,UAAAA,YAAY,EAAEG,MAAM,CAACH;AAHvB;AAKD;;AACD;;AACJ,SAAKP,MAAL;AACE,aAAOE,YAAP;;AACF;AACE,aAAOO,KAAP;AAjCJ;;AAmCA,SAAOA,KAAP;AACD,CAtCD","sourcesContent":["import { \n  REGISTER_ACCOUNT, \n  LOGIN_ACCOUNT,\n  CHECK_LOGIN,\n  LOGOUT \n} from '../actions/auth';\nimport { ActionStatusTypeValues } from '../../constants/actionStatusTypes';\n\nconst initialState = {\n  token: null,\n  registerStatus: null,\n  registerErrorMessage: null,\n  loginStatus:null,\n  loginProfile:null,\n  loginErrorMessage: null\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload, status } = action;\n  switch (action.type) {\n    case REGISTER_ACCOUNT:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return {\n          ...state,\n          registerStatus: action.registerStatus,\n          registerErrorMessage: action.registerErrorMessage,\n        };\n      }\n      break;\n      case LOGIN_ACCOUNT:\n        if (status === ActionStatusTypeValues.COMPLETED) {\n          return {\n            ...state,\n            loginStatus: action.loginStatus,\n            loginProfile: action.loginProfile,\n            loginErrorMessage: action.loginErrorMessage,\n            token: action.token\n          };\n        }\n        break;\n        case CHECK_LOGIN:\n        if (status === ActionStatusTypeValues.COMPLETED) {\n          return {\n            ...state,\n            token: action.token,\n            loginProfile: action.loginProfile,\n          };\n        }\n        break;\n    case LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}