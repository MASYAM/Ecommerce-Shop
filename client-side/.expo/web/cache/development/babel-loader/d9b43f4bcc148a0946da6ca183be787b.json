{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ReanimatedModule from \"../ReanimatedModule\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport InternalAnimatedValue from \"./AnimatedValue\";\nimport { createAnimatedAlways } from \"./AnimatedAlways\";\nimport invariant from 'fbjs/lib/invariant';\nimport createEventObjectProxyPolyfill from \"./createEventObjectProxyPolyfill\";\n\nfunction sanitizeArgMapping(argMapping) {\n  var eventMappings = [];\n  var alwaysNodes = [];\n\n  var getNode = node => {\n    if (Platform.OS === 'web') {\n      return node;\n    }\n\n    return node.__nodeID;\n  };\n\n  var traverse = (value, path) => {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      var node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (var key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(argMapping[0] && argMapping[0].nativeEvent, 'Native driven events only support animated values contained inside `nativeEvent`.');\n  var ev = argMapping[0].nativeEvent;\n\n  if (typeof ev === 'object') {\n    traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    var proxyHandler = {\n      get: function get(target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n\n        return target[name];\n      },\n      set: function set(target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n\n        return false;\n      }\n    };\n    var proxy = typeof Proxy === 'function' ? new Proxy({}, proxyHandler) : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    traverse(proxy, []);\n  }\n\n  return {\n    eventMappings,\n    alwaysNodes\n  };\n}\n\nexport default class AnimatedEvent extends AnimatedNode {\n  constructor(argMapping) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var {\n      eventMappings,\n      alwaysNodes\n    } = sanitizeArgMapping(argMapping);\n    super({\n      type: 'event',\n      argMapping: eventMappings\n    });\n    this.__isNative = true;\n    this._alwaysNodes = alwaysNodes;\n  }\n\n  toString() {\n    return \"AnimatedEvent, id: \".concat(this.__nodeID);\n  }\n\n  attachEvent(viewRef, eventName) {\n    for (var i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].__attach();\n    }\n\n    this.__attach();\n\n    var viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n  }\n\n  __onEvaluate() {\n    return 0;\n  }\n\n  detachEvent(viewRef, eventName) {\n    for (var i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].isNativelyInitialized() && this._alwaysNodes[i].__detach();\n    }\n\n    var viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n\n    this.__detach();\n  }\n\n}\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-reanimated/src/core/AnimatedEvent.js"],"names":["ReanimatedModule","AnimatedNode","InternalAnimatedValue","createAnimatedAlways","invariant","createEventObjectProxyPolyfill","sanitizeArgMapping","argMapping","eventMappings","alwaysNodes","getNode","node","Platform","OS","__nodeID","traverse","value","path","push","concat","__val","key","nativeEvent","ev","proxyHandler","get","target","name","Proxy","set","prop","proxy","AnimatedEvent","constructor","config","type","__isNative","_alwaysNodes","toString","attachEvent","viewRef","eventName","i","length","__attach","viewTag","findNodeHandle","__onEvaluate","detachEvent","isNativelyInitialized","__detach","createAnimatedEvent"],"mappings":"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","sourcesContent":["import { Platform, findNodeHandle } from 'react-native';\nimport ReanimatedModule from '../ReanimatedModule';\n\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './AnimatedValue';\nimport { createAnimatedAlways } from './AnimatedAlways';\n\nimport invariant from 'fbjs/lib/invariant';\nimport createEventObjectProxyPolyfill from './createEventObjectProxyPolyfill';\n\nfunction sanitizeArgMapping(argMapping) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n  const alwaysNodes = [];\n\n  const getNode = node => {\n    if (Platform.OS === 'web') {\n      return node;\n    }\n    return node.__nodeID;\n  };\n\n  const traverse = (value, path) => {\n    if (value instanceof InternalAnimatedValue) {\n      eventMappings.push(path.concat(getNode(value)));\n    } else if (typeof value === 'object' && value.__val) {\n      eventMappings.push(path.concat(getNode(value.__val)));\n    } else if (typeof value === 'function') {\n      const node = new InternalAnimatedValue(0);\n      alwaysNodes.push(createAnimatedAlways(value(node)));\n      eventMappings.push(path.concat(getNode(node)));\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.'\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  const ev = argMapping[0].nativeEvent;\n  if (typeof ev === 'object') {\n    traverse(ev, []);\n  } else if (typeof ev === 'function') {\n    const proxyHandler = {\n      get: function(target, name) {\n        if (name === '__isProxy') {\n          return true;\n        }\n        if (!target[name] && name !== '__val') {\n          target[name] = new Proxy({}, proxyHandler);\n        }\n        return target[name];\n      },\n      set: function(target, prop, value) {\n        if (prop === '__val') {\n          target[prop] = value;\n          return true;\n        }\n        return false;\n      },\n    };\n\n    const proxy =\n      typeof Proxy === 'function'\n        ? new Proxy({}, proxyHandler)\n        : createEventObjectProxyPolyfill();\n    alwaysNodes.push(createAnimatedAlways(ev(proxy)));\n    traverse(proxy, []);\n  }\n\n  return { eventMappings, alwaysNodes };\n}\n\nexport default class AnimatedEvent extends AnimatedNode {\n  constructor(argMapping, config = {}) {\n    const { eventMappings, alwaysNodes } = sanitizeArgMapping(argMapping);\n    super({ type: 'event', argMapping: eventMappings });\n    this._alwaysNodes = alwaysNodes;\n  }\n\n  toString() {\n    return `AnimatedEvent, id: ${this.__nodeID}`;\n  }\n\n  // The below field is a temporary workaround to make AnimatedEvent object be recognized\n  // as Animated.event event callback and therefore filtered out from being send over the\n  // bridge which was causing the object to be frozen in JS.\n  __isNative = true;\n\n  attachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].__attach();\n    }\n    this.__attach();\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.attachEvent(viewTag, eventName, this.__nodeID);\n  }\n\n  __onEvaluate() {\n    return 0;\n  }\n\n  detachEvent(viewRef, eventName) {\n    for (let i = 0; i < this._alwaysNodes.length; i++) {\n      this._alwaysNodes[i].isNativelyInitialized() &&\n        this._alwaysNodes[i].__detach();\n    }\n    const viewTag = findNodeHandle(viewRef);\n    ReanimatedModule.detachEvent(viewTag, eventName, this.__nodeID);\n    this.__detach();\n  }\n}\n\nexport function createAnimatedEvent(argMapping, config) {\n  return new AnimatedEvent(argMapping, config);\n}\n"]},"metadata":{},"sourceType":"module"}