{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/DrawerScreen.js\";\nimport React from 'react';\nimport { Actions } from 'react-native-router-flux';\nimport { ScreenNames, ImageSources } from \"../constants\";\nimport { DrawerContent } from \"../components/legacy/DrawerContent\";\nimport { connect } from \"react-redux\";\nimport { authActions } from \"../store/actions\";\nimport { ActionStatusTypeValues } from \"../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../store/selectors/app\";\nimport { bindActionCreators } from 'redux';\nimport { cartActions } from \"../store/actions\";\n\nclass DrawerScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      lastRequest: 0,\n      lastSent: 0,\n      isUserWantToSavedLogin: false,\n      isShowAlert: false,\n      isShowingSuccessAlert: false\n    };\n  }\n\n  render() {\n    var menuItems = [{\n      icon: 'home',\n      title: 'Home',\n      to: ScreenNames.ExploreShop,\n      notification: 0\n    }, {\n      icon: 'female',\n      title: 'Categories',\n      to: ScreenNames.ClothesListing,\n      notification: 0\n    }, {\n      icon: 'search',\n      title: 'Find Product',\n      to: ScreenNames.FindProduct,\n      notification: 0\n    }, {\n      icon: 'shopping-cart',\n      title: 'Shopping Cart',\n      to: ScreenNames.ShoppingCart,\n      notification: this.props.cartListing.length\n    }, {\n      icon: 'envelope',\n      title: 'Inbox Message',\n      to: ScreenNames.InboxMessage,\n      notification: 1\n    }, {\n      icon: 'question',\n      title: 'Help Center',\n      to: ScreenNames.Help,\n      notification: 0\n    }, {\n      icon: 'cogs',\n      title: 'Settings',\n      to: ScreenNames.Settings,\n      notification: 0\n    }];\n    return React.createElement(DrawerContent, {\n      navigation: this.props.navigation,\n      menuItems: menuItems,\n      onPressProfile: () => Actions.jump(ScreenNames.MyProfileView),\n      userProfile: {\n        profilePic: this.props.loginProfile.profilePicture,\n        name: this.props.loginProfile.username\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    loginProfile: state.auth.loginProfile,\n    cartListing: state.cart.cartListing\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    authActions: bindActionCreators(authActions, dispatch),\n    cartActions: bindActionCreators(cartActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerScreen);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/DrawerScreen.js"],"names":["React","Actions","ScreenNames","ImageSources","DrawerContent","connect","authActions","ActionStatusTypeValues","selectViewActionStatus","bindActionCreators","cartActions","DrawerScreen","Component","constructor","props","state","isLoading","lastRequest","lastSent","isUserWantToSavedLogin","isShowAlert","isShowingSuccessAlert","render","menuItems","icon","title","to","ExploreShop","notification","ClothesListing","FindProduct","ShoppingCart","cartListing","length","InboxMessage","Help","Settings","navigation","jump","MyProfileView","profilePic","loginProfile","profilePicture","name","username","mapStateToProps","ownProps","auth","cart","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Actions } from 'react-native-router-flux';\nimport { ScreenNames, ImageSources } from '../constants';\nimport { DrawerContent } from '../components/legacy/DrawerContent';\nimport { connect } from \"react-redux\";\n\nimport { authActions } from  '../store/actions';\nimport { ActionStatusTypeValues } from '../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../store/selectors/app';\nimport { bindActionCreators } from 'redux';\nimport { cartActions } from  '../store/actions';\n\n\n\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    loginRequest: ViewActionStateInfo,\n    authActions: typeof authActions,\n    cartActions: typeof cartActions,\n}\nclass DrawerScreen extends React.Component<Props> {\n\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading: false,\n            lastRequest:0,\n            lastSent: 0,\n            isUserWantToSavedLogin: false,\n            isShowAlert:false,\n            isShowingSuccessAlert: false\n        };\n    }\n\n    render() {\n\n\nconst menuItems = [\n    {\n        icon: 'home',\n        title: 'Home',\n        to: ScreenNames.ExploreShop,\n        notification:0\n    },\n    {\n        icon: 'female',\n        title: 'Categories',\n        to: ScreenNames.ClothesListing,\n        notification:0\n    },\n    {\n        icon: 'search',\n        title: 'Find Product',\n        to: ScreenNames.FindProduct,\n        notification:0\n    },\n    {\n        icon: 'shopping-cart',\n        title: 'Shopping Cart',\n        to: ScreenNames.ShoppingCart,\n        notification:this.props.cartListing.length\n    },\n    {\n        icon: 'envelope',\n        title: 'Inbox Message',\n        to: ScreenNames.InboxMessage,\n        notification:1\n    },\n\n    {\n        icon: 'question',\n        title: 'Help Center',\n        to: ScreenNames.Help,\n        notification:0\n    },\n\n    {\n        icon: 'cogs',\n        title: 'Settings',\n        to: ScreenNames.Settings,\n        notification:0\n    },\n];\n\n\n        return <DrawerContent\n        navigation={this.props.navigation}\n        menuItems={menuItems}\n        onPressProfile={() => Actions.jump(ScreenNames.MyProfileView)}\n        userProfile={{\n            profilePic: this.props.loginProfile.profilePicture,\n            name: this.props.loginProfile.username\n        }} />\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        loginProfile: state.auth.loginProfile,\n        cartListing: state.cart.cartListing,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        authActions: bindActionCreators(authActions, dispatch),\n        cartActions: bindActionCreators(cartActions, dispatch),      \n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerScreen);"]},"metadata":{},"sourceType":"module"}