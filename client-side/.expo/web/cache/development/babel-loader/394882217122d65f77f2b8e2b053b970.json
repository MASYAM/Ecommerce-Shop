{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/image/Image.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ImageNative from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { nodeType } from \"../helpers\";\nimport { ViewPropTypes, withTheme } from \"../config\";\n\nclass Image extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      placeholderOpacity: new Animated.Value(1)\n    };\n\n    this.onLoad = () => {\n      var minimumWait = 100;\n      var staggerNonce = 200 * Math.random();\n      setTimeout(() => {\n        Animated.timing(this.state.placeholderOpacity, {\n          toValue: 0,\n          duration: 350,\n          useNativeDriver: Platform.OS === 'android' ? false : true\n        }).start();\n      }, Platform.OS === 'android' ? 0 : Math.floor(minimumWait + staggerNonce));\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      placeholderStyle,\n      PlaceholderContent,\n      containerStyle,\n      style,\n      ImageComponent,\n      children\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"placeholderStyle\", \"PlaceholderContent\", \"containerStyle\", \"style\", \"ImageComponent\", \"children\"]);\n\n    var hasImage = Boolean(attributes.source);\n    return React.createElement(View, {\n      accessibilityIgnoresInvertColors: true,\n      style: StyleSheet.flatten([styles.container, containerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, React.createElement(ImageComponent, _extends({\n      testID: \"RNE__Image\"\n    }, attributes, {\n      onLoad: this.onLoad,\n      style: [StyleSheet.absoluteFill, {\n        width: style.width,\n        height: style.height\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })), React.createElement(Animated.View, {\n      pointerEvents: hasImage ? 'none' : 'auto',\n      accessibilityElementsHidden: hasImage,\n      importantForAccessibility: hasImage ? 'no-hide-descendants' : 'yes',\n      style: [styles.placeholderContainer, {\n        opacity: hasImage ? this.state.placeholderOpacity : 1\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      testID: \"RNE__Image__placeholder\",\n      style: StyleSheet.flatten([style, styles.placeholder, placeholderStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, PlaceholderContent)), React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nvar styles = {\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative'\n  },\n  placeholderContainer: _objectSpread({}, StyleSheet.absoluteFillObject),\n  placeholder: {\n    backgroundColor: '#bdbdbd',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\nImage.propTypes = _objectSpread(_objectSpread({}, ImageNative.propTypes), {}, {\n  ImageComponent: PropTypes.elementType,\n  PlaceholderContent: nodeType,\n  containerStyle: ViewPropTypes.style,\n  placeholderStyle: ImageNative.propTypes.style\n});\nImage.defaultProps = {\n  ImageComponent: ImageNative,\n  style: {}\n};\nexport { Image };\nexport default withTheme(Image, 'Image');","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/image/Image.js"],"names":["React","PropTypes","nodeType","ViewPropTypes","withTheme","Image","Component","state","placeholderOpacity","Animated","Value","onLoad","minimumWait","staggerNonce","Math","random","setTimeout","timing","toValue","duration","useNativeDriver","Platform","OS","start","floor","render","props","placeholderStyle","PlaceholderContent","containerStyle","style","ImageComponent","children","attributes","hasImage","Boolean","source","StyleSheet","flatten","styles","container","absoluteFill","width","height","placeholderContainer","opacity","placeholder","backgroundColor","position","absoluteFillObject","alignItems","justifyContent","propTypes","ImageNative","elementType","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AASA,SAASC,QAAT;AACA,SAASC,aAAT,EAAwBC,SAAxB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,kBAAkB,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB;AADd,KAD0B;;AAAA,SAKlCC,MALkC,GAKzB,MAAM;AACb,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,YAAY,GAAG,MAAMC,IAAI,CAACC,MAAL,EAA3B;AAEAC,MAAAA,UAAU,CACR,MAAM;AACJP,QAAAA,QAAQ,CAACQ,MAAT,CAAgB,KAAKV,KAAL,CAAWC,kBAA3B,EAA+C;AAC7CU,UAAAA,OAAO,EAAE,CADoC;AAE7CC,UAAAA,QAAQ,EAAE,GAFmC;AAG7CC,UAAAA,eAAe,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,KAA5B,GAAoC;AAHR,SAA/C,EAIGC,KAJH;AAKD,OAPO,EAQRF,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgCR,IAAI,CAACU,KAAL,CAAWZ,WAAW,GAAGC,YAAzB,CARxB,CAAV;AAUD,KAnBiC;AAAA;;AAqBlCY,EAAAA,MAAM,GAAG;AACP,sBAQI,KAAKC,KART;AAAA,QAAM;AACJC,MAAAA,gBADI;AAEJC,MAAAA,kBAFI;AAGJC,MAAAA,cAHI;AAIJC,MAAAA,KAJI;AAKJC,MAAAA,cALI;AAMJC,MAAAA;AANI,KAAN;AAAA,QAOKC,UAPL;;AASA,QAAMC,QAAQ,GAAGC,OAAO,CAACF,UAAU,CAACG,MAAZ,CAAxB;AAEA,WACE,oBAAC,IAAD;AACE,MAAA,gCAAgC,EAAE,IADpC;AAEE,MAAA,KAAK,EAAEC,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmBX,cAAnB,CAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAC;AADT,OAEMI,UAFN;AAGE,MAAA,MAAM,EAAE,KAAKtB,MAHf;AAIE,MAAA,KAAK,EAAE,CACL0B,UAAU,CAACI,YADN,EAEL;AACEC,QAAAA,KAAK,EAAEZ,KAAK,CAACY,KADf;AAEEC,QAAAA,MAAM,EAAEb,KAAK,CAACa;AAFhB,OAFK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,EAiBE,oBAAC,QAAD,CAAU,IAAV;AACE,MAAA,aAAa,EAAET,QAAQ,GAAG,MAAH,GAAY,MADrC;AAEE,MAAA,2BAA2B,EAAEA,QAF/B;AAGE,MAAA,yBAAyB,EAAEA,QAAQ,GAAG,qBAAH,GAA2B,KAHhE;AAIE,MAAA,KAAK,EAAE,CACLK,MAAM,CAACK,oBADF,EAEL;AACEC,QAAAA,OAAO,EAAEX,QAAQ,GAAG,KAAK3B,KAAL,CAAWC,kBAAd,GAAmC;AADtD,OAFK,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAC,yBADT;AAEE,MAAA,KAAK,EAAE6B,UAAU,CAACC,OAAX,CAAmB,CACxBR,KADwB,EAExBS,MAAM,CAACO,WAFiB,EAGxBnB,gBAHwB,CAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGC,kBARH,CAXF,CAjBF,EAwCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBE,QAArB,CAxCF,CADF;AA4CD;;AA7EiC;;AAgFpC,IAAMO,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTO,IAAAA,eAAe,EAAE,aADR;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADE;AAKbJ,EAAAA,oBAAoB,oBACfP,UAAU,CAACY,kBADI,CALP;AAQbH,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE,SADN;AAEXG,IAAAA,UAAU,EAAE,QAFD;AAGXC,IAAAA,cAAc,EAAE;AAHL;AARA,CAAf;AAeA9C,KAAK,CAAC+C,SAAN,mCACKC,WAAW,CAACD,SADjB;AAEErB,EAAAA,cAAc,EAAE9B,SAAS,CAACqD,WAF5B;AAGE1B,EAAAA,kBAAkB,EAAE1B,QAHtB;AAIE2B,EAAAA,cAAc,EAAE1B,aAAa,CAAC2B,KAJhC;AAKEH,EAAAA,gBAAgB,EAAE0B,WAAW,CAACD,SAAZ,CAAsBtB;AAL1C;AAQAzB,KAAK,CAACkD,YAAN,GAAqB;AACnBxB,EAAAA,cAAc,EAAEsB,WADG;AAEnBvB,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,SAASzB,KAAT;AACA,eAAeD,SAAS,CAACC,KAAD,EAAQ,OAAR,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Image as ImageNative,\n  StyleSheet,\n  View,\n  Platform,\n} from 'react-native';\n\nimport { nodeType } from '../helpers';\nimport { ViewPropTypes, withTheme } from '../config';\n\nclass Image extends React.Component {\n  state = {\n    placeholderOpacity: new Animated.Value(1),\n  };\n\n  onLoad = () => {\n    const minimumWait = 100;\n    const staggerNonce = 200 * Math.random();\n\n    setTimeout(\n      () => {\n        Animated.timing(this.state.placeholderOpacity, {\n          toValue: 0,\n          duration: 350,\n          useNativeDriver: Platform.OS === 'android' ? false : true,\n        }).start();\n      },\n      Platform.OS === 'android' ? 0 : Math.floor(minimumWait + staggerNonce)\n    );\n  };\n\n  render() {\n    const {\n      placeholderStyle,\n      PlaceholderContent,\n      containerStyle,\n      style,\n      ImageComponent,\n      children,\n      ...attributes\n    } = this.props;\n    const hasImage = Boolean(attributes.source);\n\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        style={StyleSheet.flatten([styles.container, containerStyle])}\n      >\n        <ImageComponent\n          testID=\"RNE__Image\"\n          {...attributes}\n          onLoad={this.onLoad}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              width: style.width,\n              height: style.height,\n            },\n          ]}\n        />\n\n        <Animated.View\n          pointerEvents={hasImage ? 'none' : 'auto'}\n          accessibilityElementsHidden={hasImage}\n          importantForAccessibility={hasImage ? 'no-hide-descendants' : 'yes'}\n          style={[\n            styles.placeholderContainer,\n            {\n              opacity: hasImage ? this.state.placeholderOpacity : 1,\n            },\n          ]}\n        >\n          <View\n            testID=\"RNE__Image__placeholder\"\n            style={StyleSheet.flatten([\n              style,\n              styles.placeholder,\n              placeholderStyle,\n            ])}\n          >\n            {PlaceholderContent}\n          </View>\n        </Animated.View>\n\n        <View style={style}>{children}</View>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    backgroundColor: 'transparent',\n    position: 'relative',\n  },\n  placeholderContainer: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  placeholder: {\n    backgroundColor: '#bdbdbd',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n\nImage.propTypes = {\n  ...ImageNative.propTypes,\n  ImageComponent: PropTypes.elementType,\n  PlaceholderContent: nodeType,\n  containerStyle: ViewPropTypes.style,\n  placeholderStyle: ImageNative.propTypes.style,\n};\n\nImage.defaultProps = {\n  ImageComponent: ImageNative,\n  style: {},\n};\n\nexport { Image };\nexport default withTheme(Image, 'Image');\n"]},"metadata":{},"sourceType":"module"}