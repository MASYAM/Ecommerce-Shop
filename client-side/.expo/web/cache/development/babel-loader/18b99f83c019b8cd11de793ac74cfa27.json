{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-map-clustering/lib/ClusteredMarker.js\";\nimport React, { memo } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Marker } from \"react-native-maps\";\nimport { returnMarkerStyle } from \"./helpers\";\n\nvar ClusteredMarker = (_ref) => {\n  var {\n    geometry,\n    properties,\n    onPress,\n    clusterColor,\n    clusterTextColor\n  } = _ref;\n  var points = properties.point_count;\n  var {\n    width,\n    height,\n    fontSize,\n    size\n  } = returnMarkerStyle(points);\n  return React.createElement(Marker, {\n    coordinate: {\n      longitude: geometry.coordinates[0],\n      latitude: geometry.coordinates[1]\n    },\n    style: {\n      zIndex: points + 1\n    },\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    activeOpacity: 0.5,\n    style: [styles.container, {\n      width,\n      height\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.wrapper, {\n      backgroundColor: clusterColor,\n      width,\n      height,\n      borderRadius: width / 2\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: [styles.cluster, {\n      backgroundColor: clusterColor,\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      color: clusterTextColor,\n      fontSize\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, points))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    position: \"absolute\",\n    opacity: 0.5,\n    zIndex: 0\n  },\n  cluster: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1\n  },\n  text: {\n    fontWeight: \"bold\"\n  }\n});\nexport default memo(ClusteredMarker);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-map-clustering/lib/ClusteredMarker.js"],"names":["React","memo","Marker","returnMarkerStyle","ClusteredMarker","geometry","properties","onPress","clusterColor","clusterTextColor","points","point_count","width","height","fontSize","size","longitude","coordinates","latitude","zIndex","styles","container","wrapper","backgroundColor","borderRadius","cluster","text","color","StyleSheet","create","display","justifyContent","alignItems","position","opacity","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;;;AAEA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,iBAAT;;AAEA,IAAMC,eAAe,GAAG,UAMlB;AAAA,MANmB;AACvBC,IAAAA,QADuB;AAEvBC,IAAAA,UAFuB;AAGvBC,IAAAA,OAHuB;AAIvBC,IAAAA,YAJuB;AAKvBC,IAAAA;AALuB,GAMnB;AACJ,MAAMC,MAAM,GAAGJ,UAAU,CAACK,WAA1B;AACA,MAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAoCZ,iBAAiB,CAACO,MAAD,CAA3D;AAEA,SACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AACVM,MAAAA,SAAS,EAAEX,QAAQ,CAACY,WAAT,CAAqB,CAArB,CADD;AAEVC,MAAAA,QAAQ,EAAEb,QAAQ,CAACY,WAAT,CAAqB,CAArB;AAFA,KADd;AAKE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAET,MAAM,GAAG;AAAnB,KALT;AAME,IAAA,OAAO,EAAEH,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,KAAK,EAAE,CAACa,MAAM,CAACC,SAAR,EAAmB;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLO,MAAM,CAACE,OADF,EAEL;AACEC,MAAAA,eAAe,EAAEf,YADnB;AAEEI,MAAAA,KAFF;AAGEC,MAAAA,MAHF;AAIEW,MAAAA,YAAY,EAAEZ,KAAK,GAAG;AAJxB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLQ,MAAM,CAACK,OADF,EAEL;AACEF,MAAAA,eAAe,EAAEf,YADnB;AAEEI,MAAAA,KAAK,EAAEG,IAFT;AAGEF,MAAAA,MAAM,EAAEE,IAHV;AAIES,MAAAA,YAAY,EAAET,IAAI,GAAG;AAJvB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACK,MAAM,CAACM,IAAR,EAAc;AAAEC,MAAAA,KAAK,EAAElB,gBAAT;AAA2BK,MAAAA;AAA3B,KAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MADH,CAXF,CAfF,CARF,CADF;AA0CD,CApDD;;AAsDA,IAAMU,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BV,EAAAA,OAAO,EAAE;AACPW,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,OAAO,EAAE,GAFF;AAGPf,IAAAA,MAAM,EAAE;AAHD,GANsB;AAW/BM,EAAAA,OAAO,EAAE;AACPK,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPb,IAAAA,MAAM,EAAE;AAJD,GAXsB;AAiB/BO,EAAAA,IAAI,EAAE;AACJS,IAAAA,UAAU,EAAE;AADR;AAjByB,CAAlB,CAAf;AAsBA,eAAelC,IAAI,CAACG,eAAD,CAAnB","sourcesContent":["import React, { memo } from \"react\";\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Marker } from \"react-native-maps\";\nimport { returnMarkerStyle } from \"./helpers\";\n\nconst ClusteredMarker = ({\n  geometry,\n  properties,\n  onPress,\n  clusterColor,\n  clusterTextColor\n}) => {\n  const points = properties.point_count;\n  const { width, height, fontSize, size } = returnMarkerStyle(points);\n\n  return (\n    <Marker\n      coordinate={{\n        longitude: geometry.coordinates[0],\n        latitude: geometry.coordinates[1]\n      }}\n      style={{ zIndex: points + 1 }}\n      onPress={onPress}\n    >\n      <TouchableOpacity\n        activeOpacity={0.5}\n        style={[styles.container, { width, height }]}\n      >\n        <View\n          style={[\n            styles.wrapper,\n            {\n              backgroundColor: clusterColor,\n              width,\n              height,\n              borderRadius: width / 2\n            }\n          ]}\n        />\n        <View\n          style={[\n            styles.cluster,\n            {\n              backgroundColor: clusterColor,\n              width: size,\n              height: size,\n              borderRadius: size / 2\n            }\n          ]}\n        >\n          <Text style={[styles.text, { color: clusterTextColor, fontSize }]}>\n            {points}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    </Marker>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  wrapper: {\n    position: \"absolute\",\n    opacity: 0.5,\n    zIndex: 0\n  },\n  cluster: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 1\n  },\n  text: {\n    fontWeight: \"bold\"\n  }\n});\n\nexport default memo(ClusteredMarker);\n"]},"metadata":{},"sourceType":"module"}