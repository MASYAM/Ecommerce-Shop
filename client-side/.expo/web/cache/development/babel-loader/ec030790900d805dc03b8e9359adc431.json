{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as appTypes from \"../../constants/appActionTypes\";\nimport { ViewActionStateInfo } from \"../../models/common/ViewActionStateInfo\";\nimport { ActionStatusType } from \"../../constants/actionStatusTypes\";\nvar initialState = {\n  viewBasedRequests: {}\n};\nexport default function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var {\n    viewId,\n    actionId = type,\n    type,\n    payload = {},\n    status,\n    lastRequest\n  } = action;\n\n  if (!type) {\n    return state;\n  }\n\n  var _actionId = actionId || type;\n\n  var _lastRequest = lastRequest || Date.now();\n\n  var {\n    error = null\n  } = payload;\n\n  if (type === appTypes.DISMISS_VIEW) {\n    var _newState = _objectSpread({}, state);\n\n    if (_newState.viewBasedRequests[viewId]) {\n      _newState.viewBasedRequests[viewId] = undefined;\n      delete _newState.viewBasedRequests[viewId];\n    }\n\n    return _newState;\n  }\n\n  if (type === appTypes.RESET_VIEW_ACTION_STATE) {\n    var _newState2 = _objectSpread({}, state);\n\n    if (_newState2.viewBasedRequests[viewId] && _newState2.viewBasedRequests[viewId][_actionId]) {\n      _newState2.viewBasedRequests[viewId][_actionId] = undefined;\n      delete _newState2.viewBasedRequests[viewId][_actionId];\n    }\n\n    return _newState2;\n  }\n\n  if (!status || !viewId) {\n    return state;\n  }\n\n  console.log('[AppReducer] VBR: viewId=%s, actionId=%s, status=%s, ', viewId, _actionId, status);\n\n  var newState = _objectSpread({}, state);\n\n  var prevViewBasedRequests = state.viewBasedRequests || {};\n  newState.viewBasedRequests = _objectSpread({}, prevViewBasedRequests);\n  var map = newState.viewBasedRequests[viewId] || {};\n  map[_actionId] = {\n    viewId,\n    actionId: _actionId,\n    status,\n    lastRequest: _lastRequest,\n    error\n  };\n  newState.viewBasedRequests[viewId] = map;\n  return newState;\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/store/reducers/app.js"],"names":["appTypes","ViewActionStateInfo","ActionStatusType","initialState","viewBasedRequests","appReducer","state","action","viewId","actionId","type","payload","status","lastRequest","_actionId","_lastRequest","Date","now","error","DISMISS_VIEW","newState","undefined","RESET_VIEW_ACTION_STATE","console","log","prevViewBasedRequests","map"],"mappings":";;;;;;AAEA,OAAO,KAAKA,QAAZ;AAEA,SAASC,mBAAT;AACA,SAASC,gBAAT;AASA,IAAMC,YAA8B,GAAG;AACnCC,EAAAA,iBAAiB,EAAE;AADgB,CAAvC;AAIA,eAAe,SAASC,UAAT,GAGb;AAAA,MAFEC,KAEF,uEAF4BH,YAE5B;AAAA,MADEI,MACF;AACE,MAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAQ,GAAGC,IAArB;AAA2BA,IAAAA,IAA3B;AAAiCC,IAAAA,OAAO,GAAG,EAA3C;AAA+CC,IAAAA,MAA/C;AAAuDC,IAAAA;AAAvD,MAAuEN,MAA7E;;AAEA,MAAI,CAACG,IAAL,EAAW;AACP,WAAOJ,KAAP;AACH;;AACD,MAAIQ,SAAS,GAAGL,QAAQ,IAAIC,IAA5B;;AACA,MAAIK,YAAY,GAAGF,WAAW,IAAIG,IAAI,CAACC,GAAL,EAAlC;;AACA,MAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAmBP,OAAzB;;AAGA,MAAID,IAAI,KAAKV,QAAQ,CAACmB,YAAtB,EAAoC;AAEhC,QAAMC,SAAQ,qBAAQd,KAAR,CAAd;;AACA,QAAIc,SAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,CAAJ,EAAwC;AACpCY,MAAAA,SAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,IAAqCa,SAArC;AACA,aAAOD,SAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,CAAP;AACH;;AACD,WAAOY,SAAP;AACH;;AAED,MAAIV,IAAI,KAAKV,QAAQ,CAACsB,uBAAtB,EAA+C;AAC3C,QAAMF,UAAQ,qBAAQd,KAAR,CAAd;;AACA,QAAIc,UAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,KAAsCY,UAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,EAAmCM,SAAnC,CAA1C,EAAyF;AACrFM,MAAAA,UAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,EAAmCM,SAAnC,IAAgDO,SAAhD;AACA,aAAOD,UAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,EAAmCM,SAAnC,CAAP;AACH;;AACD,WAAOM,UAAP;AACH;;AAGD,MAAI,CAACR,MAAD,IAAW,CAACJ,MAAhB,EAAwB;AACpB,WAAOF,KAAP;AACH;;AAEDiB,EAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EAAqEhB,MAArE,EAA6EM,SAA7E,EAAwFF,MAAxF;;AACA,MAAMQ,QAAQ,qBAAQd,KAAR,CAAd;;AACA,MAAMmB,qBAAqB,GAAGnB,KAAK,CAACF,iBAAN,IAA2B,EAAzD;AACAgB,EAAAA,QAAQ,CAAChB,iBAAT,qBACOqB,qBADP;AAIA,MAAMC,GAAG,GAAGN,QAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,KAAsC,EAAlD;AACAkB,EAAAA,GAAG,CAACZ,SAAD,CAAH,GAAiB;AAAEN,IAAAA,MAAF;AAAUC,IAAAA,QAAQ,EAAEK,SAApB;AAA+BF,IAAAA,MAA/B;AAAuCC,IAAAA,WAAW,EAAEE,YAApD;AAAkEG,IAAAA;AAAlE,GAAjB;AAEAE,EAAAA,QAAQ,CAAChB,iBAAT,CAA2BI,MAA3B,IAAqCkB,GAArC;AAGA,SAAON,QAAP;AACH","sourcesContent":["// @flow\n\nimport * as appTypes from '../../constants/appActionTypes';\n\nimport { ViewActionStateInfo } from '../../models/common/ViewActionStateInfo';\nimport { ActionStatusType } from '../../constants/actionStatusTypes';\n\ntype ViewBasedRequestsMapDataProp = {[key: string]: ViewActionStateInfo}\n\ntype ViewBasedRequestsMapProp = {[key: string]: ViewBasedRequestsMapDataProp}\n\nexport type AppReducerStates = {\n    viewBasedRequests: ViewBasedRequestsMapProp,\n};\nconst initialState: AppReducerStates = {\n    viewBasedRequests: {},\n};\n\nexport default function appReducer(\n    state: AppReducerStates = initialState,\n    action,\n) {\n    const { viewId, actionId = type, type, payload = {}, status, lastRequest } = action;\n\n    if (!type) {\n        return state;\n    }\n    let _actionId = actionId || type;\n    let _lastRequest = lastRequest || Date.now();\n    const { error = null } = payload;\n\n    // For Dismiss View\n    if (type === appTypes.DISMISS_VIEW) {\n\n        const newState = { ...state };\n        if (newState.viewBasedRequests[viewId]) {\n            newState.viewBasedRequests[viewId] = undefined;\n            delete newState.viewBasedRequests[viewId];\n        }\n        return newState;\n    }\n    // For Reset action state\n    if (type === appTypes.RESET_VIEW_ACTION_STATE) {\n        const newState = { ...state };\n        if (newState.viewBasedRequests[viewId] && newState.viewBasedRequests[viewId][_actionId]) {\n            newState.viewBasedRequests[viewId][_actionId] = undefined;\n            delete newState.viewBasedRequests[viewId][_actionId];\n        }\n        return newState;\n    }\n\n    // If the request does not have viewId and status, ignore it.\n    if (!status || !viewId) {\n        return state;\n    }\n\n    console.log('[AppReducer] VBR: viewId=%s, actionId=%s, status=%s, ', viewId, _actionId, status);\n    const newState = { ...state };\n    const prevViewBasedRequests = state.viewBasedRequests || {};\n    newState.viewBasedRequests = {\n        ...prevViewBasedRequests,\n    };\n\n    const map = newState.viewBasedRequests[viewId] || {};\n    map[_actionId] = { viewId, actionId: _actionId, status, lastRequest: _lastRequest, error };\n\n    newState.viewBasedRequests[viewId] = map;\n\n\n    return newState;\n}\n"]},"metadata":{},"sourceType":"module"}