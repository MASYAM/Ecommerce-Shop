{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\nexport default function createNavigationAwareScrollable(Component) {\n  var _class, _temp;\n\n  var ComponentWithNavigationScrolling = withNavigation((_temp = _class = class extends React.PureComponent {\n    componentDidMount() {\n      this._subscription = this.props.navigation.addListener('refocus', () => {\n        var scrollableNode = this.getNode();\n\n        if (this.props.navigation.isFocused() && scrollableNode !== null) {\n          if (scrollableNode.scrollToTop != null) {\n            scrollableNode.scrollToTop();\n          } else if (scrollableNode.scrollTo != null) {\n            scrollableNode.scrollTo({\n              y: 0\n            });\n          } else if (scrollableNode.scrollResponderScrollTo != null) {\n            scrollableNode.scrollResponderScrollTo({\n              y: 0\n            });\n          }\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      if (this._subscription != null) {\n        this._subscription.remove();\n      }\n    }\n\n    getNode() {\n      if (this._scrollRef === null) {\n        return null;\n      }\n\n      if (this._scrollRef.getScrollResponder) {\n        return this._scrollRef.getScrollResponder();\n      } else if (this._scrollRef.getNode) {\n        return this._scrollRef.getNode();\n      } else {\n        return this._scrollRef;\n      }\n    }\n\n    render() {\n      return React.createElement(Component, _extends({\n        ref: view => {\n          this._scrollRef = view;\n        }\n      }, this.props));\n    }\n\n  }, _defineProperty(_class, \"displayName\", \"withNavigationScrolling(\".concat(Component.displayName || Component.name, \")\")), _temp));\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    constructor() {\n      var _this;\n\n      super(...arguments);\n      _this = this;\n\n      _defineProperty(this, \"_captureRef\", view => {\n        this._innerRef = view;\n        this.props.onRef && this.props.onRef(view);\n      });\n\n      _defineProperty(this, \"setNativeProps\", function () {\n        return _this._innerRef.getNode().setNativeProps(...arguments);\n      });\n\n      _defineProperty(this, \"getScrollResponder\", function () {\n        return _this._innerRef.getNode().getScrollResponder(...arguments);\n      });\n\n      _defineProperty(this, \"getScrollableNode\", function () {\n        return _this._innerRef.getNode().getScrollableNode(...arguments);\n      });\n\n      _defineProperty(this, \"getInnerViewNode\", function () {\n        return _this._innerRef.getNode().getInnerViewNode(...arguments);\n      });\n\n      _defineProperty(this, \"scrollTo\", function () {\n        return _this._innerRef.getNode().scrollTo(...arguments);\n      });\n\n      _defineProperty(this, \"scrollToEnd\", function () {\n        return _this._innerRef.getNode().scrollToEnd(...arguments);\n      });\n\n      _defineProperty(this, \"scrollWithoutAnimationTo\", function () {\n        return _this._innerRef.getNode().scrollWithoutAnimationTo(...arguments);\n      });\n\n      _defineProperty(this, \"flashScrollIndicators\", function () {\n        return _this._innerRef.getNode().flashScrollIndicators(...arguments);\n      });\n    }\n\n    render() {\n      return React.createElement(ComponentWithNavigationScrolling, _extends({}, this.props, {\n        onRef: this._captureRef\n      }));\n    }\n\n  }\n\n  _defineProperty(NavigationAwareScrollable, \"displayName\", \"NavigationAwareScrollable(\".concat(Component.displayName || Component.name, \")\"));\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}","map":{"version":3,"sources":["createNavigationAwareScrollable.js"],"names":["ComponentWithNavigationScrolling","withNavigation","React","Component","componentDidMount","scrollableNode","y","componentWillUnmount","getNode","render","view","_captureRef","hoistStatics"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AACA,SAAA,cAAA,QAAA,wBAAA;AAEA,eAAe,SAAA,+BAAA,CAAA,SAAA,EAAoD;AAAA,MAAA,MAAA,EAAA,KAAA;;AACjE,MAAMA,gCAAgC,GAAGC,cAAc,EAAA,KAAA,GAAA,MAAA,GACrD,cAAcC,KAAK,CAAnB,aAAA,CAAkC;AAKhCE,IAAAA,iBAAiB,GAAG;AAClB,WAAA,aAAA,GAAqB,KAAA,KAAA,CAAA,UAAA,CAAA,WAAA,CAAA,SAAA,EAEnB,MAAM;AACJ,YAAMC,cAAc,GAAG,KAAvB,OAAuB,EAAvB;;AACA,YAAI,KAAA,KAAA,CAAA,UAAA,CAAA,SAAA,MAAqCA,cAAc,KAAvD,IAAA,EAAkE;AAChE,cAAIA,cAAc,CAAdA,WAAAA,IAAJ,IAAA,EAAwC;AACtCA,YAAAA,cAAc,CAAdA,WAAAA;AADF,WAAA,MAEO,IAAIA,cAAc,CAAdA,QAAAA,IAAJ,IAAA,EAAqC;AAC1CA,YAAAA,cAAc,CAAdA,QAAAA,CAAwB;AAAEC,cAAAA,CAAC,EAAE;AAAL,aAAxBD;AADK,WAAA,MAEA,IAAIA,cAAc,CAAdA,uBAAAA,IAAJ,IAAA,EAAoD;AACzDA,YAAAA,cAAc,CAAdA,uBAAAA,CAAuC;AAAEC,cAAAA,CAAC,EAAE;AAAL,aAAvCD;AACD;AACF;AAZL,OAAqB,CAArB;AAeD;;AAEDE,IAAAA,oBAAoB,GAAG;AACrB,UAAI,KAAA,aAAA,IAAJ,IAAA,EAAgC;AAC9B,aAAA,aAAA,CAAA,MAAA;AACD;AACF;;AAEDC,IAAAA,OAAO,GAAG;AACR,UAAI,KAAA,UAAA,KAAJ,IAAA,EAA8B;AAC5B,eAAA,IAAA;AACD;;AAED,UAAI,KAAA,UAAA,CAAJ,kBAAA,EAAwC;AACtC,eAAO,KAAA,UAAA,CAAP,kBAAO,EAAP;AADF,OAAA,MAEO,IAAI,KAAA,UAAA,CAAJ,OAAA,EAA6B;AAClC,eAAO,KAAA,UAAA,CAAP,OAAO,EAAP;AADK,OAAA,MAEA;AACL,eAAO,KAAP,UAAA;AACD;AACF;;AAEDC,IAAAA,MAAM,GAAG;AACP,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACE,QAAA,GAAG,EAAGC,IAAD,IAAU;AACb,eAAA,UAAA,GAAA,IAAA;AACD;AAHH,OAAA,EAIM,KALR,KACE,CAAA,CADF;AAQD;;AApD+B,GADmB,EAAA,eAAA,CAAA,MAAA,EAAA,aAAA,EAAA,2BAAA,MAAA,CAGjDP,SAAS,CAATA,WAAAA,IAAyBA,SAAS,CAHe,IAAA,EAAA,GAAA,CAAA,CAAA,EAAvD,KAAuD,EAAvD;;AAyDA,QAAA,yBAAA,SAAwCD,KAAK,CAA7C,aAAA,CAA4D;AAAA,IAAA,WAAA,GAAA;AAAA;;AAAA,YAAA,YAAA,CAAA;AAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAK3CQ,IAAD,IAAU;AACtB,aAAA,SAAA,GAAA,IAAA;AACA,aAAA,KAAA,CAAA,KAAA,IAAoB,KAAA,KAAA,CAAA,KAAA,CAApB,IAAoB,CAApB;AAPwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAUzC,YAAa;AAC5B,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,cAAA,CAAP,YAAO,CAAP;AAXwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,EAcrC,YAAa;AAChC,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,kBAAA,CAAP,YAAO,CAAP;AAfwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,EAkBtC,YAAa;AAC/B,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,iBAAA,CAAP,YAAO,CAAP;AAnBwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,EAsBvC,YAAa;AAC9B,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,gBAAA,CAAP,YAAO,CAAP;AAvBwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EA0B/C,YAAa;AACtB,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,QAAA,CAAP,YAAO,CAAP;AA3BwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EA8B5C,YAAa;AACzB,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,WAAA,CAAP,YAAO,CAAP;AA/BwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,0BAAA,EAkC/B,YAAa;AACtC,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,wBAAA,CAAP,YAAO,CAAP;AAnCwD,OAAA,CAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,uBAAA,EAsClC,YAAa;AACnC,eAAO,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,qBAAA,CAAP,YAAO,CAAP;AAvCwD,OAAA,CAAA;AAAA;;AA0C1DD,IAAAA,MAAM,GAAG;AACP,aACE,KAAA,CAAA,aAAA,CAAA,gCAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,KAAA,EAAA;AAEE,QAAA,KAAK,EAAE,KAAKE;AAFd,OAAA,CAAA,CADF;AAMD;;AAjDyD;;AA1DK,EAAA,eAAA,CAAA,yBAAA,EAAA,aAAA,EAAA,6BAAA,MAAA,CA4D7DR,SAAS,CAATA,WAAAA,IAAyBA,SAAS,CA5D2B,IAAA,EAAA,GAAA,CAAA,CAAA;;AA8GjE,SAAOS,YAAY,CAAA,yBAAA,EAAnB,SAAmB,CAAnB;AACD","sourcesContent":["import * as React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\n\nexport default function createNavigationAwareScrollable(Component) {\n  const ComponentWithNavigationScrolling = withNavigation(\n    class extends React.PureComponent {\n      static displayName = `withNavigationScrolling(${\n        Component.displayName || Component.name\n      })`;\n\n      componentDidMount() {\n        this._subscription = this.props.navigation.addListener(\n          'refocus',\n          () => {\n            const scrollableNode = this.getNode();\n            if (this.props.navigation.isFocused() && scrollableNode !== null) {\n              if (scrollableNode.scrollToTop != null) {\n                scrollableNode.scrollToTop();\n              } else if (scrollableNode.scrollTo != null) {\n                scrollableNode.scrollTo({ y: 0 });\n              } else if (scrollableNode.scrollResponderScrollTo != null) {\n                scrollableNode.scrollResponderScrollTo({ y: 0 });\n              }\n            }\n          }\n        );\n      }\n\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.remove();\n        }\n      }\n\n      getNode() {\n        if (this._scrollRef === null) {\n          return null;\n        }\n\n        if (this._scrollRef.getScrollResponder) {\n          return this._scrollRef.getScrollResponder();\n        } else if (this._scrollRef.getNode) {\n          return this._scrollRef.getNode();\n        } else {\n          return this._scrollRef;\n        }\n      }\n\n      render() {\n        return (\n          <Component\n            ref={(view) => {\n              this._scrollRef = view;\n            }}\n            {...this.props}\n          />\n        );\n      }\n    }\n  );\n\n  class NavigationAwareScrollable extends React.PureComponent {\n    static displayName = `NavigationAwareScrollable(${\n      Component.displayName || Component.name\n    })`;\n\n    _captureRef = (view) => {\n      this._innerRef = view;\n      this.props.onRef && this.props.onRef(view);\n    };\n\n    setNativeProps = (...args) => {\n      return this._innerRef.getNode().setNativeProps(...args);\n    };\n\n    getScrollResponder = (...args) => {\n      return this._innerRef.getNode().getScrollResponder(...args);\n    };\n\n    getScrollableNode = (...args) => {\n      return this._innerRef.getNode().getScrollableNode(...args);\n    };\n\n    getInnerViewNode = (...args) => {\n      return this._innerRef.getNode().getInnerViewNode(...args);\n    };\n\n    scrollTo = (...args) => {\n      return this._innerRef.getNode().scrollTo(...args);\n    };\n\n    scrollToEnd = (...args) => {\n      return this._innerRef.getNode().scrollToEnd(...args);\n    };\n\n    scrollWithoutAnimationTo = (...args) => {\n      return this._innerRef.getNode().scrollWithoutAnimationTo(...args);\n    };\n\n    flashScrollIndicators = (...args) => {\n      return this._innerRef.getNode().flashScrollIndicators(...args);\n    };\n\n    render() {\n      return (\n        <ComponentWithNavigationScrolling\n          {...this.props}\n          onRef={this._captureRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}\n"]},"metadata":{},"sourceType":"module"}