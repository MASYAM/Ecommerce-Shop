{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ProfileView/index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Container, Content, Button, Text, Footer, Title, Tabs, Tab } from 'native-base';\nimport { Actions } from 'react-native-router-flux';\nimport styles from \"./style\";\nimport UserDetails from \"../../../components/legacy/UserDetails\";\nimport SideBar from \"../../../components/legacy/DrawerContent\";\nimport { StandardHeader } from \"../../../components/legacy/Header\";\nimport { ThemeSettings, ImageSources, ScreenNames } from \"../../../constants\";\nimport { CloseButton, ButtonImage, MenuButton } from \"../../../components/StandardButtons\";\nimport { RecentProductTab } from \"./Tabs/RecentProductTab\";\nimport { PopularTab } from \"./Tabs/PopularTab\";\nimport { connect } from \"react-redux\";\nimport { profileActions, authActions } from \"../../../store/actions\";\nimport { ActionStatusTypeValues } from \"../../../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../../../store/selectors/app\";\nimport { bindActionCreators } from 'redux';\n\nclass Userprofile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshContent = () => {\n      this.setState({\n        refreshing: true\n      });\n      var {\n        profileActions,\n        navigation\n      } = this.props;\n      profileActions.getProfileViewList(navigation.state.key);\n    };\n\n    this.onPress = productId => {\n      console.log('Product Id >>');\n      console.log(productId);\n      this.props.navigation.navigate(ScreenNames.ClothesDetail, {\n        productId: productId\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      lastRequest: 0,\n      lastSent: 0,\n      isUserWantToSavedLogin: false,\n      isShowAlert: false,\n      isShowingSuccessAlert: false,\n      recentProductList: [],\n      ownedItemList: [],\n      refreshing: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.recentProductList.length == 0) {\n      this.refreshContent();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var {\n      props,\n      state\n    } = this;\n\n    if (state.lastRequest !== props.profileViewRequest.lastRequest) {\n      if (props.profileViewRequest.status === ActionStatusTypeValues.ERROR) {\n        this.setState({\n          refreshing: false,\n          isLoading: false,\n          lastRequest: props.profileViewRequest.lastRequest\n        }, () => {\n          Toast.show({\n            type: \"danger\",\n            text: \"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n          });\n        });\n      } else if (props.profileViewRequest.status === ActionStatusTypeValues.COMPLETED) {\n        console.log(this.props.profileViewStatus);\n        console.log(this.props.profileViewStatusprofileViewErrorMessage);\n\n        if (this.props.profileViewStatus === \"success\") {\n          this.setState({\n            refreshing: false,\n            isLoading: false,\n            lastRequest: props.profileViewRequest.lastRequest,\n            recentProductList: this.props.recentProductList,\n            ownedItemList: this.props.ownedItemList\n          }, () => {});\n        } else {\n          this.setState({\n            refreshing: false,\n            isLoading: false,\n            isShowAlert: true,\n            lastRequest: props.profileViewRequest.lastRequest\n          }, () => {});\n        }\n      }\n    }\n  }\n\n  openDrawer() {\n    this.drawer._root.open();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      style: styles.profilePageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }\n    }, React.createElement(ScrollView, {\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.refreshContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, React.createElement(ImageBackground, {\n      source: require(\"../../../../assets/profileBG.png\"),\n      resizeMode: \"cover\",\n      style: styles.backgroundImage,\n      imageStyle: styles.backgroundImage_imageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 1\n      }\n    }, React.createElement(StandardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 1\n      }\n    }), React.createElement(SafeAreaView, {\n      style: styles.menubuttoncontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 1\n      }\n    }, React.createElement(MenuButton, {\n      bg: true,\n      rounded: true,\n      onPress: () => Actions.drawerOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: styles.profileContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: styles.profileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, this.props.loginProfile.username), React.createElement(Text, {\n      style: styles.profileIntroduce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, \"Last Login: \", this.props.loginProfile.lastLogonTime), React.createElement(Tabs, {\n      tabBarUnderlineStyle: {\n        backgroundColor: ThemeSettings.primaryColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, React.createElement(Tab, {\n      activeTabStyle: {\n        backgroundColor: 'white'\n      },\n      heading: \"Recent\",\n      activeTextStyle: {\n        color: 'black',\n        fontSize: 15\n      },\n      tabStyle: {\n        backgroundColor: 'white'\n      },\n      textStyle: {\n        color: ThemeSettings.inputPlaceholderColor,\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, React.createElement(RecentProductTab, {\n      productList: this.state.recentProductList,\n      navigation: this.props.navigation,\n      navigation1: this.props.navigation1,\n      onPress: this.onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })), React.createElement(Tab, {\n      activeTabStyle: {\n        backgroundColor: 'white'\n      },\n      heading: \"Owned Item\",\n      tabStyle: {\n        backgroundColor: 'white'\n      },\n      textStyle: {\n        color: ThemeSettings.inputPlaceholderColor,\n        fontSize: 12\n      },\n      activeTextStyle: {\n        color: 'black',\n        fontSize: 12\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, React.createElement(PopularTab, {\n      productList: this.state.ownedItemList,\n      navigation: this.props.navigation,\n      navigation1: this.props.navigation1,\n      onPress: this.onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    })))), React.createElement(View, {\n      style: styles.userProfilePicWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: styles.userImage,\n      source: {\n        uri: this.props.loginProfile.profilePicture\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    })))));\n  }\n\n}\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    recentProductList: state.profile.recentProductList,\n    ownedItemList: state.profile.ownedItemList,\n    profileViewStatus: state.profile.profileViewStatus,\n    profileViewErrorMessage: state.profile.profileViewErrorMessage,\n    profileViewRequest: selectViewActionStatus(state, navigation.state.key, profileActions.PROFILE_LIST),\n    loginProfile: state.auth.loginProfile\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    profileActions: bindActionCreators(profileActions, dispatch),\n    authActions: bindActionCreators(authActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Userprofile);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ProfileView/index.js"],"names":["React","Container","Content","Button","Text","Footer","Title","Tabs","Tab","Actions","styles","UserDetails","SideBar","StandardHeader","ThemeSettings","ImageSources","ScreenNames","CloseButton","ButtonImage","MenuButton","RecentProductTab","PopularTab","connect","profileActions","authActions","ActionStatusTypeValues","selectViewActionStatus","bindActionCreators","Userprofile","Component","constructor","props","refreshContent","setState","refreshing","navigation","getProfileViewList","state","key","onPress","productId","console","log","navigate","ClothesDetail","isLoading","lastRequest","lastSent","isUserWantToSavedLogin","isShowAlert","isShowingSuccessAlert","recentProductList","ownedItemList","componentDidMount","length","componentDidUpdate","prevProps","profileViewRequest","status","ERROR","Toast","show","type","text","COMPLETED","profileViewStatus","profileViewStatusprofileViewErrorMessage","openDrawer","drawer","_root","open","render","profilePageStyle","require","backgroundImage","backgroundImage_imageStyle","menubuttoncontainer","drawerOpen","profileContainer","profileName","loginProfile","username","profileIntroduce","lastLogonTime","backgroundColor","primaryColor","color","fontSize","inputPlaceholderColor","navigation1","userProfilePicWrap","userImage","uri","profilePicture","mapStateToProps","ownProps","profile","profileViewErrorMessage","PROFILE_LIST","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    ImageBackground,\n    Image,\n    TouchableOpacity,\n    SafeAreaView,\n    RefreshControl,\n    ScrollView\n} from 'react-native';\nimport { Container, Content, Button, Text, Footer, Title,Tabs, Tab} from 'native-base'\nimport { Actions } from 'react-native-router-flux';\nimport styles from './style'\nimport UserDetails from '../../../components/legacy/UserDetails';\nimport SideBar from '../../../components/legacy/DrawerContent';\nimport { StandardHeader } from '../../../components/legacy/Header';\nimport { ThemeSettings, ImageSources, ScreenNames } from '../../../constants';\nimport { CloseButton, ButtonImage, MenuButton } from '../../../components/StandardButtons';\nimport { RecentProductTab } from './Tabs/RecentProductTab';\nimport { PopularTab } from './Tabs/PopularTab';\nimport { connect } from \"react-redux\";\n\n\nimport { profileActions, authActions } from  '../../../store/actions';\nimport { ActionStatusTypeValues } from '../../../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../../../store/selectors/app';\nimport { bindActionCreators } from 'redux';\n\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    profileViewRequest: ViewActionStateInfo,\n    profileActions: typeof profileActions,\n    authActions: typeof authActions,\n}\nclass Userprofile extends React.Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading: false,\n            lastRequest:0,\n            lastSent: 0,\n            isUserWantToSavedLogin: false,\n            isShowAlert:false,\n            isShowingSuccessAlert: false,\n            recentProductList:[],\n            ownedItemList:[],\n            refreshing: false,\n        };\n    }\n\n    refreshContent = () =>{\n        this.setState({refreshing: true});\n        const { profileActions, navigation } = this.props;\n        profileActions.getProfileViewList(navigation.state.key);\n  \n    }\n\n\n\n    componentDidMount () {\n\n        if(this.state.recentProductList.length == 0){\n            this.refreshContent();\n        }\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        const { props, state } = this;\n        if (state.lastRequest !== props.profileViewRequest.lastRequest) {\n            \n            \n            if (props.profileViewRequest.status === ActionStatusTypeValues.ERROR) {\n                this.setState({\n                    refreshing: false,\n                    isLoading: false,\n                    lastRequest: props.profileViewRequest.lastRequest,\n                }, () => {\n                    Toast.show({\n                        type: \"danger\",\n                        text:\"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n                    })\n                });\n            }\n            else if (props.profileViewRequest.status === ActionStatusTypeValues.COMPLETED) {\n                console.log(this.props.profileViewStatus);\n                console.log(this.props.profileViewStatusprofileViewErrorMessage);\n                if(this.props.profileViewStatus===\"success\"){\n\n                    this.setState({\n                        refreshing: false,\n                        isLoading: false,\n                        lastRequest: props.profileViewRequest.lastRequest,\n                        recentProductList: this.props.recentProductList,\n                        ownedItemList: this.props.ownedItemList,\n                    }, () => {\n\n                    });\n\n                }else{\n                    this.setState({\n                        refreshing: false,\n                        isLoading: false,\n                        isShowAlert:true,\n                        lastRequest: props.profileViewRequest.lastRequest,\n                    }, () => {\n                    });\n                }\n            }\n\n            \n        }\n    }\n\n    \n\n    onPress = (productId) => {\n        console.log('Product Id >>');\n        console.log(productId);\n\n        this.props.navigation.navigate(ScreenNames.ClothesDetail, {\n            productId: productId\n          });\n\n\n    }\n\n\n\n    openDrawer() {\n        this.drawer._root.open()\n    };\n    render() {\n        return (\n<Container style={styles.profilePageStyle}>\n    <ScrollView\n     refreshControl={\n        <RefreshControl\n          refreshing={this.state.refreshing}\n          onRefresh={this.refreshContent}\n        />\n      }\n      >\n<ImageBackground\n        source={require(\"../../../../assets/profileBG.png\")}\n        resizeMode=\"cover\"\n        style={styles.backgroundImage}\n        imageStyle={styles.backgroundImage_imageStyle}\n      >\n<StandardHeader  />\n<SafeAreaView style={styles.menubuttoncontainer}>\n                        <MenuButton bg rounded onPress={() => Actions.drawerOpen()} />\n</SafeAreaView>\n<View style={styles.profileContainer}>\n          <Text style={styles.profileName}>{this.props.loginProfile.username}</Text>\n          <Text style={styles.profileIntroduce}>Last Login: {this.props.loginProfile.lastLogonTime}</Text>\n          <Tabs tabBarUnderlineStyle={{ backgroundColor: ThemeSettings.primaryColor }}>\n                        <Tab\n                            activeTabStyle={{ backgroundColor: 'white' }}\n                            heading=\"Recent\"\n                            activeTextStyle={{ color: 'black', fontSize: 15 }}\n                            tabStyle={{ backgroundColor: 'white' }}\n                            textStyle={{ color: ThemeSettings.inputPlaceholderColor, fontSize: 12 }}\n                        >\n                            <RecentProductTab productList={this.state.recentProductList} navigation={this.props.navigation} navigation1={this.props.navigation1} onPress={this.onPress}/>\n\n\n                        </Tab>\n                        <Tab\n                            activeTabStyle={{ backgroundColor: 'white' }}\n                            heading=\"Owned Item\"\n                            tabStyle={{ backgroundColor: 'white' }}\n                            textStyle={{ color: ThemeSettings.inputPlaceholderColor, fontSize: 12 }}\n                            activeTextStyle={{ color: 'black', fontSize: 12 }}\n                        >\n                            <PopularTab productList={this.state.ownedItemList} navigation={this.props.navigation} navigation1={this.props.navigation1} onPress={this.onPress}/>\n                        </Tab>\n                    </Tabs>\n        </View>\n        <View style={styles.userProfilePicWrap}>\n        <Image style={styles.userImage}  source={{ uri: this.props.loginProfile.profilePicture  }} />\n                        {/* <View style={styles.cameraButton}>\n                            <Icon name=\"camera\" type=\"MaterialCommunityIcons\" style={styles.cameraIcon} />\n                        </View> */}\n        </View>\n</ImageBackground>\n</ScrollView>\n</Container>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        recentProductList: state.profile.recentProductList,\n        ownedItemList: state.profile.ownedItemList,\n        profileViewStatus: state.profile.profileViewStatus,\n        profileViewErrorMessage: state.profile.profileViewErrorMessage,\n        profileViewRequest: selectViewActionStatus(state, navigation.state.key, profileActions.PROFILE_LIST),\n        loginProfile: state.auth.loginProfile,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        profileActions: bindActionCreators(profileActions, dispatch),\n        authActions: bindActionCreators(authActions, dispatch),\n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Userprofile);"]},"metadata":{},"sourceType":"module"}