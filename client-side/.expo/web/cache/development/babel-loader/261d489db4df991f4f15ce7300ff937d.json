{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { INBOX_LIST, INBOX_DETAIL } from \"../actions/inbox\";\nimport { ActionStatusTypeValues } from \"../../constants/actionStatusTypes\";\nvar initialState = {\n  inboxlist: [],\n  inboxDetail: null,\n  inboxListStatus: null,\n  inboxListErrorMessage: null,\n  inboxDetailStatus: null,\n  inboxDetailErrorMessage: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var {\n    type,\n    payload,\n    status\n  } = action;\n\n  switch (action.type) {\n    case INBOX_LIST:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          inboxlist: action.inboxlist,\n          inboxListStatus: action.inboxListStatus,\n          inboxListErrorMessage: action.inboxListErrorMessage\n        });\n      }\n\n      break;\n\n    case INBOX_DETAIL:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          inboxDetail: action.inboxDetail,\n          inboxDetailStatus: action.inboxDetailStatus,\n          inboxDetailErrorMessage: action.inboxDetailErrorMessage\n        });\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/store/reducers/inbox.js"],"names":["INBOX_LIST","INBOX_DETAIL","ActionStatusTypeValues","initialState","inboxlist","inboxDetail","inboxListStatus","inboxListErrorMessage","inboxDetailStatus","inboxDetailErrorMessage","state","action","type","payload","status","COMPLETED"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,YAFF;AAIA,SAASC,sBAAT;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAC,EADS;AAEnBC,EAAAA,WAAW,EAAC,IAFO;AAGnBC,EAAAA,eAAe,EAAE,IAHE;AAInBC,EAAAA,qBAAqB,EAAC,IAJH;AAKnBC,EAAAA,iBAAiB,EAAC,IALC;AAMnBC,EAAAA,uBAAuB,EAAC;AANL,CAArB;AAUA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;AAC/C,MAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA4BH,MAAlC;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,UAAL;AACE,UAAIc,MAAM,KAAKZ,sBAAsB,CAACa,SAAtC,EAAiD;AAC/C,+CACKL,KADL;AAEEN,UAAAA,SAAS,EAACO,MAAM,CAACP,SAFnB;AAGEE,UAAAA,eAAe,EAAEK,MAAM,CAACL,eAH1B;AAIEC,UAAAA,qBAAqB,EAAEI,MAAM,CAACJ;AAJhC;AAMD;;AACD;;AACA,SAAKN,YAAL;AACE,UAAIa,MAAM,KAAKZ,sBAAsB,CAACa,SAAtC,EAAiD;AAC/C,+CACKL,KADL;AAEEL,UAAAA,WAAW,EAACM,MAAM,CAACN,WAFrB;AAGEG,UAAAA,iBAAiB,EAAEG,MAAM,CAACH,iBAH5B;AAIEC,UAAAA,uBAAuB,EAAEE,MAAM,CAACF;AAJlC;AAMD;;AACD;;AACJ;AACE,aAAOC,KAAP;AAtBJ;;AAwBA,SAAOA,KAAP;AACD,CA3BD","sourcesContent":["import { \n  INBOX_LIST,\n  INBOX_DETAIL\n} from '../actions/inbox';\nimport { ActionStatusTypeValues } from '../../constants/actionStatusTypes';\n\nconst initialState = {\n  inboxlist:[],\n  inboxDetail:null,\n  inboxListStatus: null,\n  inboxListErrorMessage:null,\n  inboxDetailStatus:null,\n  inboxDetailErrorMessage:null\n\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload, status } = action;\n  switch (action.type) {\n    case INBOX_LIST:\n      if (status === ActionStatusTypeValues.COMPLETED) {\n        return {\n          ...state,\n          inboxlist:action.inboxlist,\n          inboxListStatus: action.inboxListStatus,\n          inboxListErrorMessage: action.inboxListErrorMessage,\n        };\n      }\n      break;\n      case INBOX_DETAIL:\n        if (status === ActionStatusTypeValues.COMPLETED) {\n          return {\n            ...state,\n            inboxDetail:action.inboxDetail,\n            inboxDetailStatus: action.inboxDetailStatus,\n            inboxDetailErrorMessage: action.inboxDetailErrorMessage,\n          };\n        }\n        break;\n    default:\n      return state;\n  }\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}