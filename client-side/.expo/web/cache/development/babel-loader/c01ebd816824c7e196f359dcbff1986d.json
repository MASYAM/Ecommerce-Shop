{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/searchbar/SearchBar-default.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes } from \"../config\";\nimport { renderNode, nodeType } from \"../helpers\";\nimport Input from \"../input/Input\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultSearchIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'search',\n  color: theme.colors.grey3\n});\n\nvar defaultClearIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'clear',\n  color: theme.colors.grey3\n});\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.focus = () => {\n      this.input.focus();\n    };\n\n    this.blur = () => {\n      this.input.blur();\n    };\n\n    this.clear = () => {\n      this.input.clear();\n      this.onChangeText('');\n      this.props.onClear();\n    };\n\n    this.onFocus = () => {\n      this.props.onFocus();\n      this.setState({\n        isEmpty: this.props.value === ''\n      });\n    };\n\n    this.onBlur = () => {\n      this.props.onBlur();\n    };\n\n    this.onChangeText = text => {\n      this.props.onChangeText(text);\n      this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    var {\n      value\n    } = props;\n    this.state = {\n      isEmpty: value ? value === '' : true\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      theme\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"theme\"]);\n\n    var {\n      lightTheme,\n      round,\n      clearIcon = defaultClearIcon(theme),\n      containerStyle,\n      searchIcon = defaultSearchIcon(theme),\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      showLoading,\n      loadingProps,\n      placeholderTextColor = theme.colors.grey3\n    } = rest,\n        attributes = _objectWithoutProperties(rest, [\"lightTheme\", \"round\", \"clearIcon\", \"containerStyle\", \"searchIcon\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"showLoading\", \"loadingProps\", \"placeholderTextColor\"]);\n\n    var {\n      isEmpty\n    } = this.state;\n\n    var {\n      style: loadingStyle\n    } = loadingProps,\n        otherLoadingProps = _objectWithoutProperties(loadingProps, [\"style\"]);\n\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.container(theme), lightTheme && styles.containerLight(theme), containerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, _extends({\n      testID: \"searchInput\"\n    }, attributes, {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onChangeText: this.onChangeText,\n      ref: input => {\n        this.input = input;\n      },\n      placeholderTextColor: placeholderTextColor,\n      inputStyle: StyleSheet.flatten([styles.inputStyle(theme), inputStyle]),\n      inputContainerStyle: StyleSheet.flatten([styles.inputContentContainer(theme), lightTheme && styles.inputContentContainerLight(theme), round && styles.round, inputContainerStyle]),\n      containerStyle: styles.inputContainer,\n      leftIcon: renderNode(Icon, searchIcon, defaultSearchIcon(theme)),\n      leftIconContainerStyle: StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n      rightIcon: React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, showLoading && React.createElement(ActivityIndicator, _extends({\n        key: \"loading\",\n        style: StyleSheet.flatten([{\n          marginRight: 5\n        }, loadingStyle])\n      }, otherLoadingProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      })), !isEmpty && renderNode(Icon, clearIcon, _objectSpread(_objectSpread({}, defaultClearIcon(theme)), {}, {\n        key: 'cancel',\n        onPress: this.clear\n      }))),\n      rightIconContainerStyle: StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholderTextColor: PropTypes.string,\n  lightTheme: PropTypes.bool,\n  round: PropTypes.bool,\n  theme: PropTypes.object\n};\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null\n};\nvar styles = {\n  container: theme => ({\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderBottomColor: '#000',\n    borderTopColor: '#000',\n    padding: 8,\n    backgroundColor: theme.colors.grey0\n  }),\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  },\n  containerLight: theme => ({\n    borderTopColor: '#e1e1e1',\n    borderBottomColor: '#e1e1e1',\n    backgroundColor: theme.colors.grey5\n  }),\n  inputContainer: {\n    paddingHorizontal: 0\n  },\n  inputStyle: theme => ({\n    color: theme.colors.grey3,\n    marginLeft: 10\n  }),\n  inputContentContainer: theme => ({\n    borderBottomWidth: 0,\n    borderRadius: 3,\n    overflow: 'hidden',\n    minHeight: 30,\n    backgroundColor: theme.colors.searchBg\n  }),\n  inputContentContainerLight: theme => ({\n    backgroundColor: theme.colors.grey4\n  }),\n  round: {\n    borderRadius: 15\n  }\n};\nexport default SearchBar;","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/searchbar/SearchBar-default.js"],"names":["React","PropTypes","ViewPropTypes","renderNode","nodeType","Input","Icon","defaultSearchIcon","theme","type","size","name","color","colors","grey3","defaultClearIcon","SearchBar","Component","constructor","props","focus","input","blur","clear","onChangeText","onClear","onFocus","setState","isEmpty","value","onBlur","text","state","render","rest","lightTheme","round","clearIcon","containerStyle","searchIcon","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","showLoading","loadingProps","placeholderTextColor","attributes","style","loadingStyle","otherLoadingProps","StyleSheet","flatten","styles","container","containerLight","inputContentContainer","inputContentContainerLight","inputContainer","flexDirection","marginRight","key","onPress","propTypes","string","object","bool","Text","func","defaultProps","borderTopWidth","borderBottomWidth","borderBottomColor","borderTopColor","padding","backgroundColor","grey0","marginLeft","grey5","paddingHorizontal","borderRadius","overflow","minHeight","searchBg","grey4"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ActivityIndicator, View, Text, StyleSheet } from 'react-native';\n\nimport { ViewPropTypes } from '../config';\nimport { renderNode, nodeType } from '../helpers';\n\nimport Input from '../input/Input';\nimport Icon from '../icons/Icon';\n\nconst defaultSearchIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'search',\n  color: theme.colors.grey3,\n});\n\nconst defaultClearIcon = theme => ({\n  type: 'material',\n  size: 18,\n  name: 'clear',\n  color: theme.colors.grey3,\n});\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      isEmpty: value ? value === '' : true,\n    };\n  }\n\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClear();\n  };\n\n  onFocus = () => {\n    this.props.onFocus();\n    this.setState({ isEmpty: this.props.value === '' });\n  };\n\n  onBlur = () => {\n    this.props.onBlur();\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  render() {\n    const { theme, ...rest } = this.props;\n\n    const {\n      lightTheme,\n      round,\n      clearIcon = defaultClearIcon(theme),\n      containerStyle,\n      searchIcon = defaultSearchIcon(theme),\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      showLoading,\n      loadingProps,\n      placeholderTextColor = theme.colors.grey3,\n      ...attributes\n    } = rest;\n\n    const { isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          lightTheme && styles.containerLight(theme),\n          containerStyle,\n        ])}\n      >\n        <Input\n          testID=\"searchInput\"\n          {...attributes}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => {\n            this.input = input;\n          }}\n          placeholderTextColor={placeholderTextColor}\n          inputStyle={StyleSheet.flatten([\n            styles.inputStyle(theme),\n            inputStyle,\n          ])}\n          inputContainerStyle={StyleSheet.flatten([\n            styles.inputContentContainer(theme),\n            lightTheme && styles.inputContentContainerLight(theme),\n            round && styles.round,\n            inputContainerStyle,\n          ])}\n          containerStyle={styles.inputContainer}\n          leftIcon={renderNode(Icon, searchIcon, defaultSearchIcon(theme))}\n          leftIconContainerStyle={StyleSheet.flatten([\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ])}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  key=\"loading\"\n                  style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])}\n                  {...otherLoadingProps}\n                />\n              )}\n\n              {!isEmpty &&\n                renderNode(Icon, clearIcon, {\n                  ...defaultClearIcon(theme),\n                  key: 'cancel',\n                  onPress: this.clear,\n                })}\n            </View>\n          }\n          rightIconContainerStyle={StyleSheet.flatten([\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ])}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholderTextColor: PropTypes.string,\n  lightTheme: PropTypes.bool,\n  round: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n};\n\nconst styles = {\n  container: theme => ({\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderBottomColor: '#000',\n    borderTopColor: '#000',\n    padding: 8,\n    backgroundColor: theme.colors.grey0,\n  }),\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n  containerLight: theme => ({\n    borderTopColor: '#e1e1e1',\n    borderBottomColor: '#e1e1e1',\n    backgroundColor: theme.colors.grey5,\n  }),\n  inputContainer: {\n    paddingHorizontal: 0,\n  },\n  inputStyle: theme => ({\n    color: theme.colors.grey3,\n    marginLeft: 10,\n  }),\n  inputContentContainer: theme => ({\n    borderBottomWidth: 0,\n    borderRadius: 3,\n    overflow: 'hidden',\n    minHeight: 30,\n    backgroundColor: theme.colors.searchBg,\n  }),\n  inputContentContainerLight: theme => ({\n    backgroundColor: theme.colors.grey4,\n  }),\n  round: {\n    borderRadius: 15,\n  },\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}