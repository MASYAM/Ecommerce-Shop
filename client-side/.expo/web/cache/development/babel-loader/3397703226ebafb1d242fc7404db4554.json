{"ast":null,"code":"export var isnan = v => Number.isNaN(v);\nexport var isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\nexport var TEST_MIN_IF_NOT_NAN = (value, limit) => !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\nexport var VEC_LEN_SQ = function VEC_LEN_SQ() {\n  var {\n    x = 0,\n    y = 0\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return x * x + y * y;\n};\nexport var TEST_MAX_IF_NOT_NAN = (value, max) => !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n\n  return setTimeout(() => method(), interval);\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-gesture-handler/web/utils.js"],"names":["isnan","v","Number","isNaN","isValidNumber","TEST_MIN_IF_NOT_NAN","value","limit","VEC_LEN_SQ","x","y","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","method","interval","setTimeout"],"mappings":"AAAA,OAAO,IAAMA,KAAK,GAAGC,CAAC,IAAIC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAAnB;AAEP,OAAO,IAAMG,aAAa,GAAGH,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyB,CAACC,MAAM,CAACC,KAAP,CAAaF,CAAb,CAArD;AAEP,OAAO,IAAMI,mBAAmB,GAAG,CAACC,KAAD,EAAQC,KAAR,KACjC,CAACP,KAAK,CAACO,KAAD,CAAN,KACEA,KAAK,GAAG,CAAR,IAAaD,KAAK,IAAIC,KAAvB,IAAkCA,KAAK,IAAI,CAAT,IAAcD,KAAK,IAAIC,KAD1D,CADK;AAGP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAC;AAAEC,IAAAA,CAAC,GAAG,CAAN;AAASC,IAAAA,CAAC,GAAG;AAAb,GAAD,uEAAoB,EAApB;AAAA,SAA2BD,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAvC;AAAA,CAAnB;AACP,OAAO,IAAMC,mBAAmB,GAAG,CAACL,KAAD,EAAQM,GAAR,KACjC,CAACZ,KAAK,CAACY,GAAD,CAAN,KAAiBA,GAAG,GAAG,CAAN,IAAWN,KAAK,GAAGM,GAApB,IAA6BA,GAAG,IAAI,CAAP,IAAYN,KAAK,GAAGM,GAAjE,CADK;AAGP,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,QAAnC,EAA6C;AAClD,MAAI,CAACA,QAAL,EAAe;AACbD,IAAAA,MAAM;AACN,WAAO,IAAP;AACD;;AACD,SAAOE,UAAU,CAAC,MAAMF,MAAM,EAAb,EAAiBC,QAAjB,CAAjB;AACD","sourcesContent":["export const isnan = v => Number.isNaN(v);\n\nexport const isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value, limit) =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value, max) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval);\n}\n"]},"metadata":{},"sourceType":"module"}