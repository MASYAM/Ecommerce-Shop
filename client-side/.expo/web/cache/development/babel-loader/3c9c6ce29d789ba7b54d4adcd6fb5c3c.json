{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext } from 'react-navigation';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar DEFAULT_KEYBOARD_ANIMATION_CONFIG = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150\n    }\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100\n    }\n  }\n};\n\nclass TouchableWithoutFeedbackWrapper extends React.Component {\n  render() {\n    var _this$props = this.props,\n        {\n      route,\n      focused,\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"route\", \"focused\", \"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: onPress,\n      onLongPress: onLongPress,\n      testID: testID,\n      hitSlop: {\n        left: 15,\n        right: 15,\n        top: 0,\n        bottom: 5\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: accessibilityRole,\n      accessibilityStates: accessibilityStates\n    }, React.createElement(View, rest));\n  }\n\n}\n\nclass TabBarBottom extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"state\", {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    });\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"_getKeyboardAnimationConfigByType\", type => {\n      var {\n        keyboardHidesTabBarAnimationConfig\n      } = this.props;\n      var defaultKeyboardAnimationConfig = DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n      var keyboardAnimationConfig = (keyboardHidesTabBarAnimationConfig === null || keyboardHidesTabBarAnimationConfig === void 0 ? void 0 : keyboardHidesTabBarAnimationConfig[type]) || defaultKeyboardAnimationConfig;\n\n      if (keyboardAnimationConfig && keyboardAnimationConfig.animation === 'timing') {\n        return _objectSpread({}, defaultKeyboardAnimationConfig, {}, keyboardAnimationConfig, {\n          config: _objectSpread({}, defaultKeyboardAnimationConfig.config, {}, keyboardAnimationConfig.config)\n        });\n      }\n\n      return keyboardAnimationConfig;\n    });\n\n    _defineProperty(this, \"_handleKeyboardShow\", () => {\n      this.setState({\n        keyboard: true\n      }, () => {\n        var {\n          animation,\n          config\n        } = this._getKeyboardAnimationConfigByType('show');\n\n        Animated[animation](this.state.visible, _objectSpread({\n          toValue: 0\n        }, config)).start();\n      });\n    });\n\n    _defineProperty(this, \"_handleKeyboardHide\", () => {\n      var {\n        animation,\n        config\n      } = this._getKeyboardAnimationConfigByType('hide');\n\n      Animated[animation](this.state.visible, _objectSpread({\n        toValue: 1\n      }, config)).start(() => {\n        this.setState({\n          keyboard: false\n        });\n      });\n    });\n\n    _defineProperty(this, \"_handleLayout\", e => {\n      var {\n        layout\n      } = this.state;\n      var {\n        height,\n        width\n      } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      this.setState({\n        layout: {\n          height,\n          width\n        }\n      });\n    });\n\n    _defineProperty(this, \"_getActiveTintColor\", () => {\n      var {\n        activeTintColor\n      } = this.props;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[this.context];\n    });\n\n    _defineProperty(this, \"_getInactiveTintColor\", () => {\n      var {\n        inactiveTintColor\n      } = this.props;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[this.context];\n    });\n\n    _defineProperty(this, \"_getActiveBackgroundColor\", () => {\n      var {\n        activeBackgroundColor\n      } = this.props;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[this.context];\n    });\n\n    _defineProperty(this, \"_getInactiveBackgroundColor\", () => {\n      var {\n        inactiveBackgroundColor\n      } = this.props;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[this.context];\n    });\n\n    _defineProperty(this, \"_renderLabel\", (_ref) => {\n      var {\n        route,\n        focused\n      } = _ref;\n      var {\n        labelStyle,\n        showLabel,\n        showIcon,\n        allowFontScaling\n      } = this.props;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = this._getActiveTintColor();\n\n      var inactiveTintColor = this._getInactiveTintColor();\n\n      var label = this.props.getLabelText({\n        route\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      var horizontal = this._shouldUseHorizontalLabels();\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          focused,\n          tintColor,\n          orientation: horizontal ? 'horizontal' : 'vertical'\n        });\n      }\n\n      return label;\n    });\n\n    _defineProperty(this, \"_renderIcon\", (_ref2) => {\n      var {\n        route,\n        focused\n      } = _ref2;\n      var {\n        renderIcon,\n        showIcon,\n        showLabel\n      } = this.props;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = this._shouldUseHorizontalLabels();\n\n      var activeTintColor = this._getActiveTintColor();\n\n      var inactiveTintColor = this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel]\n      });\n    });\n\n    _defineProperty(this, \"_shouldUseHorizontalLabels\", () => {\n      var {\n        routes\n      } = this.props.navigation.state;\n      var {\n        isLandscape,\n        dimensions,\n        adaptive,\n        tabStyle,\n        labelPosition\n      } = this.props;\n\n      if (labelPosition) {\n        var position;\n\n        if (typeof labelPosition === 'string') {\n          position = labelPosition;\n        } else {\n          position = labelPosition({\n            deviceOrientation: isLandscape ? 'horizontal' : 'vertical'\n          });\n        }\n\n        if (position) {\n          return position === 'beside-icon';\n        }\n      }\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  render() {\n    var {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle\n    } = this.props;\n    var {\n      routes\n    } = navigation.state;\n    var isDark = this.context === 'dark';\n\n    var activeBackgroundColor = this._getActiveBackgroundColor();\n\n    var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    var _StyleSheet$flatten = StyleSheet.flatten(style || {}),\n        {\n      position,\n      top,\n      left = 0,\n      bottom = 0,\n      right = 0,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical\n    } = _StyleSheet$flatten,\n        innerStyle = _objectWithoutProperties(_StyleSheet$flatten, [\"position\", \"top\", \"left\", \"bottom\", \"right\", \"margin\", \"marginTop\", \"marginLeft\", \"marginBottom\", \"marginRight\", \"marginHorizontal\", \"marginVertical\"]);\n\n    var containerStyle = {\n      position,\n      top,\n      left,\n      bottom,\n      right,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical\n    };\n    var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, innerStyle];\n    return React.createElement(Animated.View, {\n      style: [styles.container, containerStyle, keyboardHidesTabBar ? {\n        transform: [{\n          translateY: this.state.visible.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.state.layout.height, 0]\n          })\n        }],\n        position: this.state.keyboard ? 'absolute' : position\n      } : null],\n      pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n      onLayout: this._handleLayout\n    }, React.createElement(SafeAreaView, {\n      style: tabBarStyle,\n      forceInset: safeAreaInset\n    }, routes.map((route, index) => {\n      var focused = index === navigation.state.index;\n      var scene = {\n        route,\n        focused\n      };\n      var accessibilityLabel = this.props.getAccessibilityLabel({\n        route\n      });\n      var accessibilityRole = this.props.getAccessibilityRole({\n        route\n      });\n      var accessibilityStates = this.props.getAccessibilityStates(scene);\n      var testID = this.props.getTestID({\n        route\n      });\n      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n      var ButtonComponent = this.props.getButtonComponent({\n        route\n      }) || TouchableWithoutFeedbackWrapper;\n      return React.createElement(ButtonComponent, {\n        key: route.key,\n        route: route,\n        focused: focused,\n        onPress: () => onTabPress({\n          route\n        }),\n        onLongPress: () => onTabLongPress({\n          route\n        }),\n        testID: testID,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        style: [styles.tab, {\n          backgroundColor\n        }, this._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle]\n      }, this._renderIcon(scene), this._renderLabel(scene));\n    })));\n  }\n\n}\n\n_defineProperty(TabBarBottom, \"defaultProps\", {\n  keyboardHidesTabBar: true,\n  keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n});\n\n_defineProperty(TabBarBottom, \"contextType\", ThemeContext);\n\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["BottomTabBar.tsx"],"names":["majorVersion","parseInt","Platform","isIos","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","DEFAULT_KEYBOARD_ANIMATION_CONFIG","show","animation","config","useNativeDriver","duration","hide","React","render","accessibilityStates","rest","left","right","top","bottom","TabBarBottom","keyboardHidesTabBar","keyboardHidesTabBarAnimationConfig","activeTintColor","light","dark","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","showIcon","allowFontScaling","adaptive","safeAreaInset","ThemeContext","layout","height","width","keyboard","visible","Animated","componentDidMount","Keyboard","componentWillUnmount","type","defaultKeyboardAnimationConfig","keyboardAnimationConfig","toValue","e","focused","label","route","tintColor","horizontal","styles","color","orientation","activeOpacity","inactiveOpacity","routes","labelPosition","position","deviceOrientation","isLandscape","maxTabItemWidth","flattenedStyle","StyleSheet","dimensions","tabStyle","navigation","isDark","marginVertical","innerStyle","style","containerStyle","tabBarStyle","transform","translateY","inputRange","outputRange","_handleLayout","index","scene","accessibilityLabel","accessibilityRole","testID","backgroundColor","ButtonComponent","onTabPress","onTabLongPress","DEFAULT_HEIGHT","COMPACT_HEIGHT","tabBar","borderTopWidth","flexDirection","tabBarLight","ThemeColors","borderTopColor","headerBorder","tabBarDark","container","elevation","tabBarCompact","tabBarRegular","tab","flex","alignItems","tabPortrait","justifyContent","tabLandscape","iconWithoutLabel","iconWithLabel","iconWithExplicitHeight","textAlign","labelBeneath","fontSize","marginBottom","labelBeside","marginLeft","withDimensions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { ThemeColors, ThemeContext, NavigationRoute } from 'react-navigation';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\nimport {\n  BottomTabBarProps,\n  ButtonComponentProps,\n  KeyboardHidesTabBarAnimationConfig,\n  KeyboardAnimationConfig,\n} from '../types';\n\ntype State = {\n  layout: { height: number; width: number };\n  keyboard: boolean;\n  visible: Animated.Value;\n};\n\nconst majorVersion = parseInt(Platform.Version as string, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst DEFAULT_KEYBOARD_ANIMATION_CONFIG: KeyboardHidesTabBarAnimationConfig = {\n  show: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 150,\n    },\n  },\n  hide: {\n    animation: 'timing',\n    config: {\n      useNativeDriver: true,\n      duration: 100,\n    },\n  },\n};\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<\n  ButtonComponentProps\n> {\n  render() {\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      route,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      focused,\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...rest\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...rest} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<BottomTabBarProps, State> {\n  static defaultProps = {\n    keyboardHidesTabBar: true,\n    keyboardHidesTabBarAnimationConfig: DEFAULT_KEYBOARD_ANIMATION_CONFIG,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' } as React.ComponentProps<\n      typeof SafeAreaView\n    >['forceInset'],\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  static contextType = ThemeContext;\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  // @ts-ignore\n  context: 'light' | 'dark';\n\n  _getKeyboardAnimationConfigByType = (\n    type: keyof KeyboardHidesTabBarAnimationConfig\n  ): KeyboardAnimationConfig => {\n    const { keyboardHidesTabBarAnimationConfig } = this.props;\n    const defaultKeyboardAnimationConfig =\n      DEFAULT_KEYBOARD_ANIMATION_CONFIG[type];\n    const keyboardAnimationConfig =\n      keyboardHidesTabBarAnimationConfig?.[type] ||\n      defaultKeyboardAnimationConfig;\n\n    // merge config only `timing` animation\n    if (\n      keyboardAnimationConfig &&\n      keyboardAnimationConfig.animation === 'timing'\n    ) {\n      return {\n        ...defaultKeyboardAnimationConfig,\n        ...keyboardAnimationConfig,\n        config: {\n          ...defaultKeyboardAnimationConfig.config,\n          ...keyboardAnimationConfig.config,\n        },\n      };\n    }\n\n    return keyboardAnimationConfig as KeyboardAnimationConfig;\n  };\n\n  _handleKeyboardShow = () => {\n    this.setState({ keyboard: true }, () => {\n      const { animation, config } = this._getKeyboardAnimationConfigByType(\n        'show'\n      );\n      Animated[animation](this.state.visible, {\n        toValue: 0,\n        ...config,\n      }).start();\n    });\n  };\n\n  _handleKeyboardHide = () => {\n    const { animation, config } = this._getKeyboardAnimationConfigByType(\n      'hide'\n    );\n    Animated[animation](this.state.visible, {\n      toValue: 1,\n      ...config,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n  };\n\n  _handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({\n        focused,\n        tintColor,\n        orientation: horizontal ? 'horizontal' : 'vertical',\n      });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    const { renderIcon, showIcon, showLabel } = this.props;\n\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const {\n      isLandscape,\n      dimensions,\n      adaptive,\n      tabStyle,\n      labelPosition,\n    } = this.props;\n\n    if (labelPosition) {\n      let position;\n      if (typeof labelPosition === 'string') {\n        position = labelPosition;\n      } else {\n        position = labelPosition({\n          deviceOrientation: isLandscape ? 'horizontal' : 'vertical',\n        });\n      }\n\n      if (position) {\n        return position === 'beside-icon';\n      }\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    // @ts-ignore\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const {\n      position,\n      top,\n      left = 0,\n      bottom = 0,\n      right = 0,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n      ...innerStyle\n    } = StyleSheet.flatten(style || {});\n\n    const containerStyle = {\n      position,\n      top,\n      left,\n      bottom,\n      right,\n      margin,\n      marginTop,\n      marginLeft,\n      marginBottom,\n      marginRight,\n      marginHorizontal,\n      marginVertical,\n    };\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      // @ts-ignore\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      innerStyle,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          containerStyle,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : position,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                route={route}\n                focused={focused}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    // @ts-ignore\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 20,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}