{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-snap-carousel/src/parallaximage/ParallaxImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport PropTypes from 'prop-types';\nimport styles from \"./ParallaxImage.style\";\nexport default class ParallaxImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      offset: 0,\n      width: 0,\n      height: 0,\n      status: 1,\n      animOpacity: new Animated.Value(0)\n    };\n    this._onLoad = this._onLoad.bind(this);\n    this._onError = this._onError.bind(this);\n    this._measureLayout = this._measureLayout.bind(this);\n  }\n\n  setNativeProps(nativeProps) {\n    this._container.setNativeProps(nativeProps);\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n    setTimeout(() => {\n      this._measureLayout();\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _measureLayout() {\n    if (this._container) {\n      var {\n        dimensions,\n        vertical,\n        carouselRef,\n        sliderWidth,\n        sliderHeight,\n        itemWidth,\n        itemHeight\n      } = this.props;\n\n      if (carouselRef) {\n        this._container.measureLayout(findNodeHandle(carouselRef), (x, y, width, height, pageX, pageY) => {\n          var offset = vertical ? y - (sliderHeight - itemHeight) / 2 : x - (sliderWidth - itemWidth) / 2;\n          this.setState({\n            offset: offset,\n            width: dimensions && dimensions.width ? dimensions.width : Math.ceil(width),\n            height: dimensions && dimensions.height ? dimensions.height : Math.ceil(height)\n          });\n        });\n      }\n    }\n  }\n\n  _onLoad(event) {\n    var {\n      animOpacity\n    } = this.state;\n    var {\n      fadeDuration,\n      onLoad\n    } = this.props;\n\n    if (!this._mounted) {\n      return;\n    }\n\n    this.setState({\n      status: 2\n    });\n\n    if (onLoad) {\n      onLoad(event);\n    }\n\n    Animated.timing(animOpacity, {\n      toValue: 1,\n      duration: fadeDuration,\n      easing: Easing.out(Easing.quad),\n      isInteraction: false,\n      useNativeDriver: true\n    }).start(() => {\n      this.setState({\n        status: 3\n      });\n    });\n  }\n\n  _onError(event) {\n    var {\n      onError\n    } = this.props;\n    this.setState({\n      status: 4\n    });\n\n    if (onError) {\n      onError(event);\n    }\n  }\n\n  get image() {\n    var {\n      status,\n      animOpacity,\n      offset,\n      width,\n      height\n    } = this.state;\n\n    var _this$props = this.props,\n        {\n      scrollPosition,\n      dimensions,\n      vertical,\n      sliderWidth,\n      sliderHeight,\n      parallaxFactor,\n      style,\n      AnimatedImageComponent\n    } = _this$props,\n        other = _objectWithoutProperties(_this$props, [\"scrollPosition\", \"dimensions\", \"vertical\", \"sliderWidth\", \"sliderHeight\", \"parallaxFactor\", \"style\", \"AnimatedImageComponent\"]);\n\n    var parallaxPadding = (vertical ? height : width) * parallaxFactor;\n    var requiredStyles = {\n      position: 'relative'\n    };\n    var dynamicStyles = {\n      width: vertical ? width : width + parallaxPadding * 2,\n      height: vertical ? height + parallaxPadding * 2 : height,\n      opacity: animOpacity,\n      transform: scrollPosition ? [{\n        translateX: !vertical ? scrollPosition.interpolate({\n          inputRange: [offset - sliderWidth, offset + sliderWidth],\n          outputRange: [-parallaxPadding, parallaxPadding],\n          extrapolate: 'clamp'\n        }) : 0\n      }, {\n        translateY: vertical ? scrollPosition.interpolate({\n          inputRange: [offset - sliderHeight, offset + sliderHeight],\n          outputRange: [-parallaxPadding, parallaxPadding],\n          extrapolate: 'clamp'\n        }) : 0\n      }] : []\n    };\n    return React.createElement(AnimatedImageComponent, _extends({}, other, {\n      style: [styles.image, style, requiredStyles, dynamicStyles],\n      onLoad: this._onLoad,\n      onError: status !== 3 ? this._onError : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  get spinner() {\n    var {\n      status\n    } = this.state;\n    var {\n      showSpinner,\n      spinnerColor\n    } = this.props;\n    return status === 1 && showSpinner ? React.createElement(View, {\n      style: styles.loaderContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: 'small',\n      color: spinnerColor,\n      animating: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })) : false;\n  }\n\n  render() {\n    var {\n      containerStyle\n    } = this.props;\n    return React.createElement(View, {\n      ref: c => {\n        this._container = c;\n      },\n      pointerEvents: 'none',\n      style: [containerStyle, styles.container],\n      onLayout: this._measureLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, this.image, this.spinner);\n  }\n\n}\nParallaxImage.propTypes = _objectSpread(_objectSpread({}, Image.propTypes), {}, {\n  carouselRef: PropTypes.object,\n  itemHeight: PropTypes.number,\n  itemWidth: PropTypes.number,\n  scrollPosition: PropTypes.object,\n  sliderHeight: PropTypes.number,\n  sliderWidth: PropTypes.number,\n  vertical: PropTypes.bool,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  dimensions: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  fadeDuration: PropTypes.number,\n  parallaxFactor: PropTypes.number,\n  showSpinner: PropTypes.bool,\n  spinnerColor: PropTypes.string,\n  AnimatedImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n});\nParallaxImage.defaultProps = {\n  containerStyle: {},\n  fadeDuration: 500,\n  parallaxFactor: 0.3,\n  showSpinner: true,\n  spinnerColor: 'rgba(0, 0, 0, 0.4)',\n  AnimatedImageComponent: Animated.Image\n};","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-snap-carousel/src/parallaximage/ParallaxImage.js"],"names":["React","Component","PropTypes","styles","ParallaxImage","constructor","props","state","offset","width","height","status","animOpacity","Animated","Value","_onLoad","bind","_onError","_measureLayout","setNativeProps","nativeProps","_container","componentDidMount","_mounted","setTimeout","componentWillUnmount","dimensions","vertical","carouselRef","sliderWidth","sliderHeight","itemWidth","itemHeight","measureLayout","findNodeHandle","x","y","pageX","pageY","setState","Math","ceil","event","fadeDuration","onLoad","timing","toValue","duration","easing","Easing","out","quad","isInteraction","useNativeDriver","start","onError","image","scrollPosition","parallaxFactor","style","AnimatedImageComponent","other","parallaxPadding","requiredStyles","position","dynamicStyles","opacity","transform","translateX","interpolate","inputRange","outputRange","extrapolate","translateY","undefined","spinner","showSpinner","spinnerColor","loaderContainer","render","containerStyle","c","container","propTypes","Image","object","number","bool","ViewPropTypes","View","shape","string","oneOfType","func","defaultProps"],"mappings":"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","sourcesContent":["// Parallax effect inspired by https://github.com/oblador/react-native-parallax/\n\nimport React, { Component } from 'react';\nimport { View, ViewPropTypes, Image, Animated, Easing, ActivityIndicator, findNodeHandle } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './ParallaxImage.style';\n\nexport default class ParallaxImage extends Component {\n\n    static propTypes = {\n        ...Image.propTypes,\n        carouselRef: PropTypes.object, // passed from <Carousel />\n        itemHeight: PropTypes.number, // passed from <Carousel />\n        itemWidth: PropTypes.number, // passed from <Carousel />\n        scrollPosition: PropTypes.object, // passed from <Carousel />\n        sliderHeight: PropTypes.number, // passed from <Carousel />\n        sliderWidth: PropTypes.number, // passed from <Carousel />\n        vertical: PropTypes.bool, // passed from <Carousel />\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        dimensions: PropTypes.shape({\n            width: PropTypes.number,\n            height: PropTypes.number\n        }),\n        fadeDuration: PropTypes.number,\n        parallaxFactor: PropTypes.number,\n        showSpinner: PropTypes.bool,\n        spinnerColor: PropTypes.string,\n        AnimatedImageComponent: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.object\n        ])\n    };\n\n    static defaultProps = {\n        containerStyle: {},\n        fadeDuration: 500,\n        parallaxFactor: 0.3,\n        showSpinner: true,\n        spinnerColor: 'rgba(0, 0, 0, 0.4)',\n        AnimatedImageComponent: Animated.Image\n    }\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            offset: 0,\n            width: 0,\n            height: 0,\n            status: 1, // 1 -> loading; 2 -> loaded // 3 -> transition finished; 4 -> error\n            animOpacity: new Animated.Value(0)\n        };\n        this._onLoad = this._onLoad.bind(this);\n        this._onError = this._onError.bind(this);\n        this._measureLayout = this._measureLayout.bind(this);\n    }\n\n    setNativeProps (nativeProps) {\n        this._container.setNativeProps(nativeProps);\n    }\n\n    componentDidMount () {\n        this._mounted = true;\n\n        setTimeout(() => {\n            this._measureLayout();\n        }, 0);\n    }\n\n    componentWillUnmount () {\n        this._mounted = false;\n    }\n\n    _measureLayout () {\n        if (this._container) {\n            const {\n                dimensions,\n                vertical,\n                carouselRef,\n                sliderWidth,\n                sliderHeight,\n                itemWidth,\n                itemHeight\n            } = this.props;\n\n            if (carouselRef) {\n                this._container.measureLayout(\n                    findNodeHandle(carouselRef),\n                    (x, y, width, height, pageX, pageY) => {\n                        const offset = vertical ?\n                            y - ((sliderHeight - itemHeight) / 2) :\n                            x - ((sliderWidth - itemWidth) / 2);\n\n                        this.setState({\n                            offset: offset,\n                            width: dimensions && dimensions.width ?\n                                dimensions.width :\n                                Math.ceil(width),\n                            height: dimensions && dimensions.height ?\n                                dimensions.height :\n                                Math.ceil(height)\n                        });\n                    }\n                );\n            }\n        }\n    }\n\n    _onLoad (event) {\n        const { animOpacity } = this.state;\n        const { fadeDuration, onLoad } = this.props;\n\n        if (!this._mounted) {\n            return;\n        }\n\n        this.setState({ status: 2 });\n\n        if (onLoad) {\n            onLoad(event);\n        }\n\n        Animated.timing(animOpacity, {\n            toValue: 1,\n            duration: fadeDuration,\n            easing: Easing.out(Easing.quad),\n            isInteraction: false,\n            useNativeDriver: true\n        }).start(() => {\n            this.setState({ status: 3 });\n        });\n    }\n\n    // If arg is missing from method signature, it just won't be called\n    _onError (event) {\n        const { onError } = this.props;\n\n        this.setState({ status: 4 });\n\n        if (onError) {\n            onError(event);\n        }\n    }\n\n    get image () {\n        const { status, animOpacity, offset, width, height } = this.state;\n        const {\n            scrollPosition,\n            dimensions,\n            vertical,\n            sliderWidth,\n            sliderHeight,\n            parallaxFactor,\n            style,\n            AnimatedImageComponent,\n            ...other\n        } = this.props;\n\n        const parallaxPadding = (vertical ? height : width) * parallaxFactor;\n        const requiredStyles = { position: 'relative' };\n        const dynamicStyles = {\n            width: vertical ? width : width + parallaxPadding * 2,\n            height: vertical ? height + parallaxPadding * 2 : height,\n            opacity: animOpacity,\n            transform: scrollPosition ? [\n                {\n                    translateX: !vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderWidth, offset + sliderWidth],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                },\n                {\n                    translateY: vertical ? scrollPosition.interpolate({\n                        inputRange: [offset - sliderHeight, offset + sliderHeight],\n                        outputRange: [-parallaxPadding, parallaxPadding],\n                        extrapolate: 'clamp'\n                    }) : 0\n                }\n            ] : []\n        };\n\n        return (\n            <AnimatedImageComponent\n              {...other}\n              style={[styles.image, style, requiredStyles, dynamicStyles]}\n              onLoad={this._onLoad}\n              onError={status !== 3 ? this._onError : undefined} // prevent infinite-loop bug\n            />\n        );\n    }\n\n    get spinner () {\n        const { status } = this.state;\n        const { showSpinner, spinnerColor } = this.props;\n\n        return status === 1 && showSpinner ? (\n            <View style={styles.loaderContainer}>\n                <ActivityIndicator\n                  size={'small'}\n                  color={spinnerColor}\n                  animating={true}\n                />\n            </View>\n        ) : false;\n    }\n\n    render () {\n        const { containerStyle } = this.props;\n\n        return (\n            <View\n              ref={(c) => { this._container = c; }}\n              pointerEvents={'none'}\n              style={[containerStyle, styles.container]}\n              onLayout={this._measureLayout}\n            >\n                { this.image }\n                { this.spinner }\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}