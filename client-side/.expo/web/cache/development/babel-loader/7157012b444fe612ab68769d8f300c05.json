{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/buttons/Button.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme, ViewPropTypes } from \"../config\";\nimport { renderNode, nodeType, conditionalStyle, color } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultLoadingProps = (type, theme) => ({\n  color: type === 'solid' ? 'white' : theme.colors.primary,\n  size: 'small'\n});\n\nclass Button extends Component {\n  componentDidMount() {\n    var {\n      linearGradientProps,\n      ViewComponent\n    } = this.props;\n\n    if (linearGradientProps && !global.Expo && !ViewComponent) {\n      console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n    }\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      type,\n      loading,\n      loadingStyle,\n      loadingProps: passedLoadingProps,\n      title,\n      titleProps,\n      titleStyle,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      disabled,\n      disabledStyle,\n      disabledTitleStyle,\n      raised,\n      linearGradientProps,\n      ViewComponent = !disabled && linearGradientProps && global.Expo ? global.Expo.LinearGradient : View,\n      theme\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n\n    if (Platform.OS === 'android' && buttonStyle.borderRadius && !attributes.background) {\n      if (Platform.Version >= 21) {\n        attributes.background = TouchableNativeFeedback.Ripple(undefined, false);\n      } else {\n        attributes.background = TouchableNativeFeedback.SelectableBackground();\n      }\n    }\n\n    var loadingProps = _objectSpread(_objectSpread({}, defaultLoadingProps(type, theme)), passedLoadingProps);\n\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.container, {\n        borderRadius: buttonStyle.borderRadius || styles.container.borderRadius\n      }, containerStyle, raised && !disabled && styles.raised(type)]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableComponent, _extends({\n      onPress: onPress,\n      activeOpacity: 0.3,\n      disabled: disabled\n    }, attributes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), React.createElement(ViewComponent, _extends({}, linearGradientProps, {\n      style: StyleSheet.flatten([styles.button(type, theme), buttonStyle, disabled && styles.disabled(type, theme), disabled && disabledStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), loading && React.createElement(ActivityIndicator, _extends({\n      style: StyleSheet.flatten([styles.loading, loadingStyle]),\n      color: loadingProps.color,\n      size: loadingProps.size\n    }, loadingProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })), !loading && icon && !iconRight && renderNode(Icon, icon, {\n      containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n    }), !loading && !!title && React.createElement(Text, _extends({\n      style: StyleSheet.flatten([styles.title(type, theme), titleStyle, disabled && styles.disabledTitle(theme), disabled && disabledTitleStyle])\n    }, titleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), title), !loading && icon && iconRight && renderNode(Icon, icon, {\n      containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n    }))));\n  }\n\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  titleProps: PropTypes.object,\n  buttonStyle: ViewPropTypes.style,\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: ViewPropTypes.style,\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  icon: nodeType,\n  iconContainerStyle: ViewPropTypes.style,\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.elementType,\n  ViewComponent: PropTypes.elementType,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  disabledTitleStyle: Text.propTypes.style,\n  raised: PropTypes.bool,\n  theme: PropTypes.object\n};\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: () => console.log('Please attach a method to this component'),\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3\n  },\n  disabled: false,\n  raised: false,\n  loading: false\n};\nvar styles = {\n  button: (type, theme) => ({\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n    padding: 8,\n    borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n    borderColor: theme.colors.primary\n  }),\n  container: {\n    borderRadius: 3\n  },\n  disabled: (type, theme) => _objectSpread(_objectSpread({}, conditionalStyle(type === 'solid', {\n    backgroundColor: theme.colors.disabled\n  })), conditionalStyle(type === 'outline', {\n    borderColor: color(theme.colors.disabled).darken(0.3)\n  })),\n  disabledTitle: theme => ({\n    color: color(theme.colors.disabled).darken(0.3)\n  }),\n  title: (type, theme) => _objectSpread({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 2,\n    paddingBottom: 1\n  }, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium'\n    },\n    default: {\n      fontSize: 18\n    }\n  })),\n  iconContainer: {\n    marginHorizontal: 5\n  },\n  raised: type => type !== 'clear' && _objectSpread({\n    backgroundColor: '#fff'\n  }, Platform.select({\n    android: {\n      elevation: 4\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  loading: {\n    marginVertical: 2\n  }\n};\nexport { Button };\nexport default withTheme(Button, 'Button');","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-elements/src/buttons/Button.js"],"names":["PropTypes","React","Component","withTheme","ViewPropTypes","renderNode","nodeType","conditionalStyle","color","Icon","defaultLoadingProps","type","theme","colors","primary","size","Button","componentDidMount","linearGradientProps","ViewComponent","props","global","Expo","console","error","render","TouchableComponent","containerStyle","onPress","buttonStyle","loading","loadingStyle","loadingProps","passedLoadingProps","title","titleProps","titleStyle","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTitleStyle","raised","LinearGradient","View","attributes","Platform","OS","borderRadius","background","Version","TouchableNativeFeedback","Ripple","undefined","SelectableBackground","StyleSheet","flatten","styles","container","button","iconContainer","disabledTitle","propTypes","string","Text","style","object","oneOf","bool","func","elementType","defaultProps","select","android","default","TouchableOpacity","log","flexDirection","justifyContent","alignItems","backgroundColor","padding","borderWidth","hairlineWidth","borderColor","darken","fontSize","textAlign","paddingTop","paddingBottom","fontFamily","marginHorizontal","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","marginVertical"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { withTheme, ViewPropTypes } from '../config';\nimport { renderNode, nodeType, conditionalStyle, color } from '../helpers';\nimport Icon from '../icons/Icon';\n\nconst defaultLoadingProps = (type, theme) => ({\n  color: type === 'solid' ? 'white' : theme.colors.primary,\n  size: 'small',\n});\n\nclass Button extends Component {\n  componentDidMount() {\n    const { linearGradientProps, ViewComponent } = this.props;\n    if (linearGradientProps && !global.Expo && !ViewComponent) {\n      console.error(\n        \"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\"\n      );\n    }\n  }\n\n  render() {\n    const {\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      type,\n      loading,\n      loadingStyle,\n      loadingProps: passedLoadingProps,\n      title,\n      titleProps,\n      titleStyle,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      disabled,\n      disabledStyle,\n      disabledTitleStyle,\n      raised,\n      linearGradientProps,\n      ViewComponent = !disabled && linearGradientProps && global.Expo\n        ? global.Expo.LinearGradient\n        : View,\n      theme,\n      ...attributes\n    } = this.props;\n\n    if (\n      Platform.OS === 'android' &&\n      (buttonStyle.borderRadius && !attributes.background)\n    ) {\n      if (Platform.Version >= 21) {\n        attributes.background = TouchableNativeFeedback.Ripple(\n          undefined,\n          false\n        );\n      } else {\n        attributes.background = TouchableNativeFeedback.SelectableBackground();\n      }\n    }\n\n    const loadingProps = {\n      ...defaultLoadingProps(type, theme),\n      ...passedLoadingProps,\n    };\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container,\n          {\n            borderRadius:\n              buttonStyle.borderRadius || styles.container.borderRadius,\n          },\n          containerStyle,\n          raised && !disabled && styles.raised(type),\n        ])}\n      >\n        <TouchableComponent\n          onPress={onPress}\n          activeOpacity={0.3}\n          disabled={disabled}\n          {...attributes}\n        >\n          <ViewComponent\n            {...linearGradientProps}\n            style={StyleSheet.flatten([\n              styles.button(type, theme),\n              buttonStyle,\n              disabled && styles.disabled(type, theme),\n              disabled && disabledStyle,\n            ])}\n          >\n            {loading && (\n              <ActivityIndicator\n                style={StyleSheet.flatten([styles.loading, loadingStyle])}\n                color={loadingProps.color}\n                size={loadingProps.size}\n                {...loadingProps}\n              />\n            )}\n\n            {!loading &&\n              icon &&\n              !iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n\n            {!loading && !!title && (\n              <Text\n                style={StyleSheet.flatten([\n                  styles.title(type, theme),\n                  titleStyle,\n                  disabled && styles.disabledTitle(theme),\n                  disabled && disabledTitleStyle,\n                ])}\n                {...titleProps}\n              >\n                {title}\n              </Text>\n            )}\n\n            {!loading &&\n              icon &&\n              iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n          </ViewComponent>\n        </TouchableComponent>\n      </View>\n    );\n  }\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: Text.propTypes.style,\n  titleProps: PropTypes.object,\n  buttonStyle: ViewPropTypes.style,\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: ViewPropTypes.style,\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  icon: nodeType,\n  iconContainerStyle: ViewPropTypes.style,\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.elementType,\n  ViewComponent: PropTypes.elementType,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  disabledTitleStyle: Text.propTypes.style,\n  raised: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => console.log('Please attach a method to this component'),\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3,\n  },\n  disabled: false,\n  raised: false,\n  loading: false,\n};\n\nconst styles = {\n  button: (type, theme) => ({\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n    padding: 8,\n    borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n    borderColor: theme.colors.primary,\n  }),\n  container: {\n    borderRadius: 3,\n  },\n  disabled: (type, theme) => ({\n    ...conditionalStyle(type === 'solid', {\n      backgroundColor: theme.colors.disabled,\n    }),\n    ...conditionalStyle(type === 'outline', {\n      borderColor: color(theme.colors.disabled).darken(0.3),\n    }),\n  }),\n  disabledTitle: theme => ({\n    color: color(theme.colors.disabled).darken(0.3),\n  }),\n  title: (type, theme) => ({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 2,\n    paddingBottom: 1,\n    ...Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium',\n      },\n      default: {\n        fontSize: 18,\n      },\n    }),\n  }),\n  iconContainer: {\n    marginHorizontal: 5,\n  },\n  raised: type =>\n    type !== 'clear' && {\n      backgroundColor: '#fff',\n      ...Platform.select({\n        android: {\n          elevation: 4,\n        },\n        default: {\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n        },\n      }),\n    },\n  loading: {\n    marginVertical: 2,\n  },\n};\n\nexport { Button };\nexport default withTheme(Button, 'Button');\n"]},"metadata":{},"sourceType":"module"}