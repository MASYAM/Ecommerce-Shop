{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { PermissionStatus } from \"./Permissions.types\";\n\nfunction _getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var error = new Error('Permission unimplemented');\n    error.code = 0;\n    error.name = 'NotAllowedError';\n    throw error;\n  };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction askForMediaPermissionAsync(_x) {\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMediaPermissionAsync() {\n  _askForMediaPermissionAsync = _asyncToGenerator(function* (options) {\n    try {\n      yield _getUserMedia(options);\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true\n      };\n    } catch ({\n      message\n    }) {\n      if (message === 'Permission dismissed') {\n        return {\n          status: PermissionStatus.UNDETERMINED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false\n        };\n      } else {\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false\n        };\n      }\n    }\n  });\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction askForMicrophonePermissionAsync() {\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMicrophonePermissionAsync() {\n  _askForMicrophonePermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      audio: true\n    });\n  });\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction askForCameraPermissionAsync() {\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForCameraPermissionAsync() {\n  _askForCameraPermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      video: true\n    });\n  });\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction askForLocationPermissionAsync() {\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForLocationPermissionAsync() {\n  _askForLocationPermissionAsync = _asyncToGenerator(function* () {\n    return new Promise(resolve => {\n      navigator.geolocation.getCurrentPosition(() => resolve({\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true\n      }), (_ref2) => {\n        var {\n          code\n        } = _ref2;\n\n        if (code === 1) {\n          resolve({\n            status: PermissionStatus.DENIED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          });\n        } else {\n          resolve({\n            status: PermissionStatus.UNDETERMINED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          });\n        }\n      });\n    });\n  });\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction getPermissionWithQueryAsync(_x2) {\n  return _getPermissionWithQueryAsync.apply(this, arguments);\n}\n\nfunction _getPermissionWithQueryAsync() {\n  _getPermissionWithQueryAsync = _asyncToGenerator(function* (name) {\n    if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n    var {\n      state\n    } = yield navigator.permissions.query({\n      name\n    });\n\n    if (state === 'prompt') {\n      return PermissionStatus.UNDETERMINED;\n    } else if (state === 'granted') {\n      return PermissionStatus.GRANTED;\n    } else if (state === 'denied') {\n      return PermissionStatus.DENIED;\n    }\n\n    return null;\n  });\n  return _getPermissionWithQueryAsync.apply(this, arguments);\n}\n\nfunction enumerateDevices() {\n  return _enumerateDevices.apply(this, arguments);\n}\n\nfunction _enumerateDevices() {\n  _enumerateDevices = _asyncToGenerator(function* () {\n    if (navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n      return yield navigator.mediaDevices.enumerateDevices();\n    }\n\n    if (window.MediaStreamTrack && typeof window.MediaStreamTrack.getSources === 'function') {\n      return yield MediaStreamTrack.getSources();\n    }\n\n    return null;\n  });\n  return _enumerateDevices.apply(this, arguments);\n}\n\nfunction askSensorPermissionAsync() {\n  return _askSensorPermissionAsync.apply(this, arguments);\n}\n\nfunction _askSensorPermissionAsync() {\n  _askSensorPermissionAsync = _asyncToGenerator(function* () {\n    var requestPermission = getRequestMotionPermission();\n    if (!requestPermission) return PermissionStatus.GRANTED;\n    var status = yield requestPermission();\n\n    switch (status) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n\n      case 'denied':\n        return PermissionStatus.DENIED;\n\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  });\n  return _askSensorPermissionAsync.apply(this, arguments);\n}\n\nfunction getMediaMaybeGrantedAsync(_x3) {\n  return _getMediaMaybeGrantedAsync.apply(this, arguments);\n}\n\nfunction _getMediaMaybeGrantedAsync() {\n  _getMediaMaybeGrantedAsync = _asyncToGenerator(function* (targetKind) {\n    var devices = yield enumerateDevices();\n\n    if (!devices) {\n      return false;\n    }\n\n    var result = yield devices.filter((_ref3) => {\n      var {\n        kind\n      } = _ref3;\n      return kind === targetKind;\n    }).some((_ref4) => {\n      var {\n        label\n      } = _ref4;\n      return label !== '';\n    });\n    return result;\n  });\n  return _getMediaMaybeGrantedAsync.apply(this, arguments);\n}\n\nfunction getPermissionAsync(_x4, _x5) {\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nfunction _getPermissionAsync() {\n  _getPermissionAsync = _asyncToGenerator(function* (permission, shouldAsk) {\n    switch (permission) {\n      case 'userFacingNotifications':\n      case 'notifications':\n        {\n          if (!shouldAsk) {\n            var status = yield getPermissionWithQueryAsync('notifications');\n\n            if (status) {\n              return {\n                status,\n                expires: 'never',\n                granted: status === PermissionStatus.GRANTED,\n                canAskAgain: true\n              };\n            }\n          }\n\n          var {\n            Notification = {}\n          } = window;\n\n          if (Notification.requestPermission) {\n            var _status = Notification.permission;\n\n            if (shouldAsk) {\n              _status = yield Notification.requestPermission();\n            }\n\n            if (!_status || _status === 'default') {\n              return {\n                status: PermissionStatus.UNDETERMINED,\n                expires: 'never',\n                canAskAgain: true,\n                granted: false\n              };\n            }\n\n            return {\n              status: _status,\n              expires: 'never',\n              canAskAgain: true,\n              granted: _status === PermissionStatus.GRANTED\n            };\n          }\n        }\n        break;\n\n      case 'motion':\n        {\n          if (shouldAsk) {\n            var _status2 = yield askSensorPermissionAsync();\n\n            return {\n              status: yield askSensorPermissionAsync(),\n              expires: 'never',\n              granted: _status2 === PermissionStatus.GRANTED,\n              canAskAgain: false\n            };\n          }\n\n          var hasInsecureSensors = !isIOS() && !getRequestMotionPermission();\n          return {\n            status: hasInsecureSensors ? PermissionStatus.GRANTED : PermissionStatus.UNDETERMINED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false\n          };\n        }\n\n      case 'location':\n        {\n          var maybeStatus = yield getPermissionWithQueryAsync('geolocation');\n\n          if (maybeStatus) {\n            if (maybeStatus === PermissionStatus.UNDETERMINED && shouldAsk) {\n              return yield askForLocationPermissionAsync();\n            }\n\n            return {\n              status: maybeStatus,\n              expires: 'never',\n              canAskAgain: true,\n              granted: maybeStatus === PermissionStatus.GRANTED\n            };\n          } else if (shouldAsk) {\n            return yield askForLocationPermissionAsync();\n          }\n        }\n        break;\n\n      case 'audioRecording':\n        {\n          var _maybeStatus = yield getPermissionWithQueryAsync('microphone');\n\n          if (_maybeStatus) {\n            if (_maybeStatus === PermissionStatus.UNDETERMINED && shouldAsk) {\n              return yield askForMicrophonePermissionAsync();\n            }\n\n            return {\n              status: _maybeStatus,\n              expires: 'never',\n              canAskAgain: true,\n              granted: _maybeStatus === PermissionStatus.GRANTED\n            };\n          } else if (shouldAsk) {\n            return yield askForMicrophonePermissionAsync();\n          } else {\n            var maybeGranted = yield getMediaMaybeGrantedAsync('audioinput');\n\n            if (maybeGranted) {\n              return {\n                status: PermissionStatus.GRANTED,\n                expires: 'never',\n                canAskAgain: true,\n                granted: true\n              };\n            }\n          }\n        }\n        break;\n\n      case 'camera':\n        {\n          var _maybeStatus2 = yield getPermissionWithQueryAsync('camera');\n\n          if (_maybeStatus2) {\n            if (_maybeStatus2 === PermissionStatus.UNDETERMINED && shouldAsk) {\n              return yield askForCameraPermissionAsync();\n            }\n\n            return {\n              status: _maybeStatus2,\n              expires: 'never',\n              canAskAgain: true,\n              granted: _maybeStatus2 === PermissionStatus.GRANTED\n            };\n          } else if (shouldAsk) {\n            return yield askForCameraPermissionAsync();\n          } else {\n            var _maybeGranted = yield getMediaMaybeGrantedAsync('videoinput');\n\n            if (_maybeGranted) {\n              return {\n                status: PermissionStatus.GRANTED,\n                expires: 'never',\n                canAskAgain: true,\n                granted: true\n              };\n            }\n          }\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      status: PermissionStatus.UNDETERMINED,\n      expires: 'never',\n      canAskAgain: true,\n      granted: false\n    };\n  });\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nexport default {\n  get name() {\n    return 'ExpoPermissions';\n  },\n\n  getAsync(permissionTypes) {\n    return _asyncToGenerator(function* () {\n      var results = {};\n\n      for (var permissionType of new Set(permissionTypes)) {\n        results[permissionType] = yield getPermissionAsync(permissionType, false);\n      }\n\n      return results;\n    })();\n  },\n\n  askAsync(permissionTypes) {\n    return _asyncToGenerator(function* () {\n      var results = {};\n\n      for (var permissionType of new Set(permissionTypes)) {\n        results[permissionType] = yield getPermissionAsync(permissionType, true);\n      }\n\n      return results;\n    })();\n  }\n\n};\nexport function getRequestMotionPermission() {\n  var _ref, _DeviceMotionEvent$re, _DeviceMotionEvent, _DeviceOrientationEve;\n\n  return (_ref = (_DeviceMotionEvent$re = (_DeviceMotionEvent = DeviceMotionEvent) == null ? void 0 : _DeviceMotionEvent.requestPermission) != null ? _DeviceMotionEvent$re : (_DeviceOrientationEve = DeviceOrientationEvent) == null ? void 0 : _DeviceOrientationEve.requestPermission) != null ? _ref : null;\n}\n\nfunction isIOS() {\n  var isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  var isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}","map":{"version":3,"sources":["../src/ExpoPermissions.web.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionMap,\n  PermissionType,\n  PermissionStatus,\n  PermissionInfo,\n} from './Permissions.types';\n\n/*\n * TODO: Bacon: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Permissions\n * Add messages to manifest like we do with iOS info.plist\n */\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Using_the_new_API_in_older_browsers\n// Older browsers might not implement mediaDevices at all, so we set an empty object first\nfunction _getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia ||\n    function() {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nasync function askForMediaPermissionAsync(\n  options: MediaStreamConstraints\n): Promise<PermissionInfo> {\n  try {\n    await _getUserMedia(options);\n    return {\n      status: PermissionStatus.GRANTED,\n      expires: 'never',\n      canAskAgain: true,\n      granted: true,\n    };\n  } catch ({ message }) {\n    // name: NotAllowedError\n    // code: 0\n    if (message === 'Permission dismissed') {\n      // message: Permission dismissed\n      return {\n        status: PermissionStatus.UNDETERMINED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    } else {\n      // TODO: Bacon: [OSX] The system could deny access to chrome.\n      // TODO: Bacon: add: { status: 'unimplemented' }\n      // message: Permission denied\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n  }\n}\n\nasync function askForMicrophonePermissionAsync(): Promise<PermissionInfo> {\n  return await askForMediaPermissionAsync({ audio: true });\n}\n\nasync function askForCameraPermissionAsync(): Promise<PermissionInfo> {\n  return await askForMediaPermissionAsync({ video: true });\n}\n\nasync function askForLocationPermissionAsync(): Promise<PermissionInfo> {\n  return new Promise(resolve => {\n    navigator.geolocation.getCurrentPosition(\n      () =>\n        resolve({\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        }),\n      ({ code }: PositionError) => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/PositionError/code\n        if (code === 1) {\n          resolve({\n            status: PermissionStatus.DENIED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false,\n          });\n        } else {\n          resolve({\n            status: PermissionStatus.UNDETERMINED,\n            expires: 'never',\n            canAskAgain: true,\n            granted: false,\n          });\n        }\n      }\n    );\n  });\n}\n\nasync function getPermissionWithQueryAsync(name: PermissionName): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  const { state } = await navigator.permissions.query({ name });\n  if (state === 'prompt') {\n    return PermissionStatus.UNDETERMINED;\n  } else if (state === 'granted') {\n    return PermissionStatus.GRANTED;\n  } else if (state === 'denied') {\n    return PermissionStatus.DENIED;\n  }\n  return null;\n}\n\nasync function enumerateDevices(): Promise<MediaDeviceInfo[] | null> {\n  if (navigator && navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n    return await navigator.mediaDevices.enumerateDevices();\n  }\n\n  // @ts-ignore: This is deprecated but we should still attempt to use it.\n  if (window.MediaStreamTrack && typeof window.MediaStreamTrack.getSources === 'function') {\n    // @ts-ignore\n    return await MediaStreamTrack.getSources();\n  }\n  return null;\n}\n\nasync function askSensorPermissionAsync(): Promise<PermissionStatus> {\n  const requestPermission = getRequestMotionPermission();\n  // Technically this is incorrect because it doesn't account for iOS 12.2 Safari.\n  // But unfortunately we can only abstract so much.\n  if (!requestPermission) return PermissionStatus.GRANTED;\n\n  // If this isn't invoked in a touch-event then it never resolves.\n  // Safari probably should throw an error but because it doesn't we have no way of informing the developer.\n  const status = await requestPermission();\n  switch (status) {\n    case 'granted':\n      return PermissionStatus.GRANTED;\n    case 'denied':\n      return PermissionStatus.DENIED;\n    default:\n      return PermissionStatus.UNDETERMINED;\n  }\n}\n\nasync function getMediaMaybeGrantedAsync(targetKind: MediaDeviceKind): Promise<boolean> {\n  const devices = await enumerateDevices();\n  if (!devices) {\n    return false;\n  }\n  const result = await devices\n    .filter(({ kind }) => kind === targetKind)\n    .some(({ label }) => label !== '');\n  // Granted or denied or undetermined or no devices\n  return result;\n}\n\nasync function getPermissionAsync(\n  permission: PermissionType,\n  shouldAsk: boolean\n): Promise<PermissionInfo> {\n  switch (permission) {\n    case 'userFacingNotifications':\n    case 'notifications':\n      {\n        if (!shouldAsk) {\n          const status = await getPermissionWithQueryAsync('notifications');\n          if (status) {\n            return {\n              status,\n              expires: 'never',\n              granted: status === PermissionStatus.GRANTED,\n              canAskAgain: true,\n            };\n          }\n        }\n\n        const { Notification = {} } = window as any;\n        if (Notification.requestPermission) {\n          let status = Notification.permission;\n          if (shouldAsk) {\n            status = await Notification.requestPermission();\n          }\n          if (!status || status === 'default') {\n            return {\n              status: PermissionStatus.UNDETERMINED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: false,\n            };\n          }\n          return {\n            status,\n            expires: 'never',\n            canAskAgain: true,\n            granted: status === PermissionStatus.GRANTED,\n          };\n        }\n      }\n      break;\n    case 'motion': {\n      if (shouldAsk) {\n        const status = await askSensorPermissionAsync();\n        return {\n          status: await askSensorPermissionAsync(),\n          expires: 'never',\n          granted: status === PermissionStatus.GRANTED,\n          canAskAgain: false,\n        };\n      }\n      // We can infer from the requestor if this is an older browser.\n      const hasInsecureSensors = !isIOS() && !getRequestMotionPermission();\n      return {\n        status: hasInsecureSensors ? PermissionStatus.GRANTED : PermissionStatus.UNDETERMINED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n    case 'location':\n      {\n        const maybeStatus = await getPermissionWithQueryAsync('geolocation');\n        if (maybeStatus) {\n          if (maybeStatus === PermissionStatus.UNDETERMINED && shouldAsk) {\n            return await askForLocationPermissionAsync();\n          }\n          return {\n            status: maybeStatus,\n            expires: 'never',\n            canAskAgain: true,\n            granted: maybeStatus === PermissionStatus.GRANTED,\n          };\n        } else if (shouldAsk) {\n          // TODO: Bacon: should this function as ask async when not in chrome?\n          return await askForLocationPermissionAsync();\n        }\n      }\n      break;\n    case 'audioRecording':\n      {\n        const maybeStatus = await getPermissionWithQueryAsync('microphone');\n        if (maybeStatus) {\n          if (maybeStatus === PermissionStatus.UNDETERMINED && shouldAsk) {\n            return await askForMicrophonePermissionAsync();\n          }\n          return {\n            status: maybeStatus,\n            expires: 'never',\n            canAskAgain: true,\n            granted: maybeStatus === PermissionStatus.GRANTED,\n          };\n        } else if (shouldAsk) {\n          return await askForMicrophonePermissionAsync();\n        } else {\n          const maybeGranted = await getMediaMaybeGrantedAsync('audioinput');\n          if (maybeGranted) {\n            return {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true,\n            };\n          }\n          // TODO: Bacon: Get denied or undetermined...\n        }\n      }\n      break;\n    case 'camera':\n      {\n        const maybeStatus = await getPermissionWithQueryAsync('camera');\n        if (maybeStatus) {\n          if (maybeStatus === PermissionStatus.UNDETERMINED && shouldAsk) {\n            return await askForCameraPermissionAsync();\n          }\n          return {\n            status: maybeStatus,\n            expires: 'never',\n            canAskAgain: true,\n            granted: maybeStatus === PermissionStatus.GRANTED,\n          };\n        } else if (shouldAsk) {\n          return await askForCameraPermissionAsync();\n        } else {\n          const maybeGranted = await getMediaMaybeGrantedAsync('videoinput');\n          if (maybeGranted) {\n            return {\n              status: PermissionStatus.GRANTED,\n              expires: 'never',\n              canAskAgain: true,\n              granted: true,\n            };\n          }\n          // TODO: Bacon: Get denied or undetermined...\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return {\n    status: PermissionStatus.UNDETERMINED,\n    expires: 'never',\n    canAskAgain: true,\n    granted: false,\n  };\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoPermissions';\n  },\n\n  async getAsync(permissionTypes: PermissionType[]): Promise<PermissionMap> {\n    const results = {};\n    for (const permissionType of new Set(permissionTypes)) {\n      results[permissionType] = await getPermissionAsync(permissionType, /* shouldAsk */ false);\n    }\n    return results;\n  },\n\n  async askAsync(permissionTypes: PermissionType[]): Promise<PermissionMap> {\n    const results = {};\n    for (const permissionType of new Set(permissionTypes)) {\n      results[permissionType] = await getPermissionAsync(permissionType, /* shouldAsk */ true);\n    }\n    return results;\n  },\n};\n\nexport function getRequestMotionPermission(): () => Promise<PermissionState> | null {\n  // @ts-ignore: requestPermission does not exist\n  return DeviceMotionEvent?.requestPermission ?? DeviceOrientationEvent?.requestPermission ?? null;\n}\n\n// https://stackoverflow.com/a/9039885/4047926\nfunction isIOS(): boolean {\n  const isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  const isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}