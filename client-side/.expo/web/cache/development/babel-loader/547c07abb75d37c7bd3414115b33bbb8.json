{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-easy-grid/Components/Col.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport computeProps from \"../Utils/computeProps\";\nexport default class ColumnNB extends Component {\n  prepareRootProps() {\n    var flattenedStyle = StyleSheet.flatten(this.props.style);\n    var type = {\n      flexDirection: 'column',\n      flex: this.props.size ? this.props.size : flattenedStyle && flattenedStyle.width ? 0 : 1\n    };\n    var defaultProps = {\n      style: type\n    };\n    return computeProps(this.props, defaultProps);\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  render() {\n    if (this.props.onPress) {\n      return React.createElement(TouchableOpacity, _extends({\n        onPress: this.props.onPress\n      }, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(View, _extends({\n        ref: component => this._root = component\n      }, this.props, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }\n      }), this.props.children));\n    } else {\n      return React.createElement(View, _extends({\n        ref: component => this._root = component\n      }, this.props, this.prepareRootProps(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), this.props.children);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-easy-grid/Components/Col.js"],"names":["React","Component","computeProps","ColumnNB","prepareRootProps","flattenedStyle","StyleSheet","flatten","props","style","type","flexDirection","flex","size","width","defaultProps","setNativeProps","nativeProps","_root","render","onPress","component","children"],"mappings":"AAAA;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;AAEA,OAAOC,YAAP;AAGA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,gBAAgB,GAAG;AAEf,QAAIC,cAAc,GAAGC,UAAU,CAACC,OAAX,CAAmB,KAAKC,KAAL,CAAWC,KAA9B,CAArB;AAEA,QAAIC,IAAI,GAAG;AACVC,MAAAA,aAAa,EAAE,QADL;AAEVC,MAAAA,IAAI,EAAG,KAAKJ,KAAL,CAAWK,IAAZ,GAAoB,KAAKL,KAAL,CAAWK,IAA/B,GAAuCR,cAAc,IAAIA,cAAc,CAACS,KAAlC,GAA2C,CAA3C,GAA+C;AAFjF,KAAX;AAKA,QAAIC,YAAY,GAAG;AACfN,MAAAA,KAAK,EAAEC;AADQ,KAAnB;AAGA,WAAOR,YAAY,CAAC,KAAKM,KAAN,EAAaO,YAAb,CAAnB;AAEH;;AAEDC,EAAAA,cAAc,CAACC,WAAD,EAAc;AAC1B,SAAKC,KAAL,CAAWF,cAAX,CAA0BC,WAA1B;AACD;;AAEHE,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKX,KAAL,CAAWY,OAAd,EAAsB;AACpB,aACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWY;AAAtC,SACI,KAAKhB,gBAAL,EADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEJ,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEiB,SAAS,IAAI,KAAKH,KAAL,GAAaG;AADjC,SAEM,KAAKb,KAFX,EAGM,KAAKJ,gBAAL,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIE,KAAKI,KAAL,CAAWc,QAJb,CAFI,CADF;AAUD,KAXD,MAYI;AACF,aACE,oBAAC,IAAD;AACF,QAAA,GAAG,EAAED,SAAS,IAAI,KAAKH,KAAL,GAAaG;AAD7B,SAEE,KAAKb,KAFP,EAGE,KAAKJ,gBAAL,EAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIF,KAAKI,KAAL,CAAWc,QAJT,CADF;AAOD;AACF;;AA3C6C","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity, StyleSheet} from 'react-native';\nimport computeProps from '../Utils/computeProps';\n\n\nexport default class ColumnNB extends Component {\n    prepareRootProps() {\n\n        var flattenedStyle = StyleSheet.flatten(this.props.style)\n\n        var type = {\n        \tflexDirection: 'column',\n        \tflex: (this.props.size) ? this.props.size : (flattenedStyle && flattenedStyle.width) ? 0 : 1,\n        }\n\n        var defaultProps = {\n            style: type\n        }\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}\n        {...this.prepareRootProps()}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}