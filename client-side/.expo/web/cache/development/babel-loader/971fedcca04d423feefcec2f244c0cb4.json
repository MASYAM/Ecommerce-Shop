{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/toggle-switch-react-native/ToggleSwitch.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PropTypes from \"prop-types\";\nexport default class ToggleSwitch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.offsetX = new Animated.Value(0);\n    this.dimensions = ToggleSwitch.calculateDimensions(this.props.size);\n\n    this.createToggleSwitchStyle = () => [{\n      justifyContent: \"center\",\n      width: this.dimensions.width,\n      borderRadius: 20,\n      padding: this.dimensions.padding,\n      backgroundColor: this.props.isOn ? this.props.onColor : this.props.offColor\n    }, this.props.isOn ? this.props.trackOnStyle : this.props.trackOffStyle];\n\n    this.createInsideCircleStyle = () => [{\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      margin: Platform.OS === \"web\" ? 0 : 4,\n      left: Platform.OS === \"web\" ? 4 : 0,\n      position: \"absolute\",\n      backgroundColor: this.props.circleColor,\n      transform: [{\n        translateX: this.offsetX\n      }],\n      width: this.dimensions.circleWidth,\n      height: this.dimensions.circleHeight,\n      borderRadius: this.dimensions.circleWidth / 2,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.2,\n      shadowRadius: 2.5,\n      elevation: 1.5\n    }, this.props.isOn ? this.props.thumbOnStyle : this.props.thumbOffStyle];\n  }\n\n  static calculateDimensions(size) {\n    switch (size) {\n      case \"small\":\n        return {\n          width: 40,\n          padding: 10,\n          circleWidth: 15,\n          circleHeight: 15,\n          translateX: 22\n        };\n\n      case \"large\":\n        return {\n          width: 70,\n          padding: 20,\n          circleWidth: 30,\n          circleHeight: 30,\n          translateX: 38\n        };\n\n      default:\n        return {\n          width: 46,\n          padding: 12,\n          circleWidth: 18,\n          circleHeight: 18,\n          translateX: 26\n        };\n    }\n  }\n\n  render() {\n    var {\n      isOn,\n      onToggle,\n      disabled,\n      labelStyle,\n      label,\n      icon\n    } = this.props;\n    var toValue = isOn ? this.dimensions.width - this.dimensions.translateX : 0;\n    Animated.timing(this.offsetX, {\n      toValue,\n      duration: this.props.animationSpeed,\n      useNativeDriver: this.props.useNativeDriver\n    }).start();\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, label ? React.createElement(Text, {\n      style: [styles.labelStyle, labelStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, label) : null, React.createElement(TouchableOpacity, {\n      style: this.createToggleSwitchStyle(),\n      activeOpacity: 0.8,\n      onPress: () => disabled ? null : onToggle(!isOn),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, React.createElement(Animated.View, {\n      style: this.createInsideCircleStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, icon)));\n  }\n\n}\nToggleSwitch.propTypes = {\n  isOn: PropTypes.bool.isRequired,\n  label: PropTypes.string,\n  onColor: PropTypes.string,\n  offColor: PropTypes.string,\n  size: PropTypes.string,\n  labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  thumbOnStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  thumbOffStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  trackOnStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  trackOffStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  onToggle: PropTypes.func,\n  icon: PropTypes.object,\n  disabled: PropTypes.bool,\n  animationSpeed: PropTypes.number,\n  useNativeDriver: PropTypes.bool,\n  circleColor: PropTypes.string\n};\nToggleSwitch.defaultProps = {\n  isOn: false,\n  onColor: \"#4cd137\",\n  offColor: \"#ecf0f1\",\n  size: \"medium\",\n  labelStyle: {},\n  thumbOnStyle: {},\n  thumbOffStyle: {},\n  trackOnStyle: {},\n  trackOffStyle: {},\n  icon: null,\n  disabled: false,\n  animationSpeed: 300,\n  useNativeDriver: true,\n  circleColor: 'white'\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  labelStyle: {\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/toggle-switch-react-native/ToggleSwitch.js"],"names":["React","PropTypes","ToggleSwitch","Component","offsetX","Animated","Value","dimensions","calculateDimensions","props","size","createToggleSwitchStyle","justifyContent","width","borderRadius","padding","backgroundColor","isOn","onColor","offColor","trackOnStyle","trackOffStyle","createInsideCircleStyle","alignItems","margin","Platform","OS","left","position","circleColor","transform","translateX","circleWidth","height","circleHeight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","thumbOnStyle","thumbOffStyle","render","onToggle","disabled","labelStyle","label","icon","toValue","timing","duration","animationSpeed","useNativeDriver","start","styles","container","propTypes","bool","isRequired","string","oneOfType","object","number","func","defaultProps","StyleSheet","create","flexDirection","marginHorizontal"],"mappings":";AASA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAUA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SAkExDC,OAlEwD,GAkE9C,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAlE8C;AAAA,SAmExDC,UAnEwD,GAmE3CL,YAAY,CAACM,mBAAb,CAAiC,KAAKC,KAAL,CAAWC,IAA5C,CAnE2C;;AAAA,SAqExDC,uBArEwD,GAqE9B,MAAM,CAC9B;AACEC,MAAAA,cAAc,EAAE,QADlB;AAEEC,MAAAA,KAAK,EAAE,KAAKN,UAAL,CAAgBM,KAFzB;AAGEC,MAAAA,YAAY,EAAE,EAHhB;AAIEC,MAAAA,OAAO,EAAE,KAAKR,UAAL,CAAgBQ,OAJ3B;AAKEC,MAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ,IAAX,GAAkB,KAAKR,KAAL,CAAWS,OAA7B,GAAuC,KAAKT,KAAL,CAAWU;AALrE,KAD8B,EAQ9B,KAAKV,KAAL,CAAWQ,IAAX,GAAkB,KAAKR,KAAL,CAAWW,YAA7B,GAA4C,KAAKX,KAAL,CAAWY,aARzB,CArEwB;;AAAA,SAgFxDC,uBAhFwD,GAgF9B,MAAM,CAC9B;AACEC,MAAAA,UAAU,EAAE,QADd;AAEEX,MAAAA,cAAc,EAAE,QAFlB;AAGEY,MAAAA,MAAM,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAHtC;AAIEC,MAAAA,IAAI,EAAEF,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAJpC;AAKEE,MAAAA,QAAQ,EAAE,UALZ;AAMEZ,MAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWoB,WAN9B;AAOEC,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAE,KAAK3B;AAAnB,OAAD,CAPb;AAQES,MAAAA,KAAK,EAAE,KAAKN,UAAL,CAAgByB,WARzB;AASEC,MAAAA,MAAM,EAAE,KAAK1B,UAAL,CAAgB2B,YAT1B;AAUEpB,MAAAA,YAAY,EAAE,KAAKP,UAAL,CAAgByB,WAAhB,GAA8B,CAV9C;AAWEG,MAAAA,WAAW,EAAE,MAXf;AAYEC,MAAAA,YAAY,EAAE;AACZvB,QAAAA,KAAK,EAAE,CADK;AAEZoB,QAAAA,MAAM,EAAE;AAFI,OAZhB;AAgBEI,MAAAA,aAAa,EAAE,GAhBjB;AAiBEC,MAAAA,YAAY,EAAE,GAjBhB;AAkBEC,MAAAA,SAAS,EAAE;AAlBb,KAD8B,EAqB9B,KAAK9B,KAAL,CAAWQ,IAAX,GAAkB,KAAKR,KAAL,CAAW+B,YAA7B,GAA4C,KAAK/B,KAAL,CAAWgC,aArBzB,CAhFwB;AAAA;;AACxD,SAAOjC,mBAAP,CAA2BE,IAA3B,EAAiC;AAC/B,YAAQA,IAAR;AACE,WAAK,OAAL;AACE,eAAO;AACLG,UAAAA,KAAK,EAAE,EADF;AAELE,UAAAA,OAAO,EAAE,EAFJ;AAGLiB,UAAAA,WAAW,EAAE,EAHR;AAILE,UAAAA,YAAY,EAAE,EAJT;AAKLH,UAAAA,UAAU,EAAE;AALP,SAAP;;AAOF,WAAK,OAAL;AACE,eAAO;AACLlB,UAAAA,KAAK,EAAE,EADF;AAELE,UAAAA,OAAO,EAAE,EAFJ;AAGLiB,UAAAA,WAAW,EAAE,EAHR;AAILE,UAAAA,YAAY,EAAE,EAJT;AAKLH,UAAAA,UAAU,EAAE;AALP,SAAP;;AAOF;AACE,eAAO;AACLlB,UAAAA,KAAK,EAAE,EADF;AAELE,UAAAA,OAAO,EAAE,EAFJ;AAGLiB,UAAAA,WAAW,EAAE,EAHR;AAILE,UAAAA,YAAY,EAAE,EAJT;AAKLH,UAAAA,UAAU,EAAE;AALP,SAAP;AAlBJ;AA0BD;;AA4EDW,EAAAA,MAAM,GAAG;AACP,QAAM;AAAEzB,MAAAA,IAAF;AAAQ0B,MAAAA,QAAR;AAAkBC,MAAAA,QAAlB;AAA4BC,MAAAA,UAA5B;AAAwCC,MAAAA,KAAxC;AAA+CC,MAAAA;AAA/C,QAAwD,KAAKtC,KAAnE;AAEA,QAAMuC,OAAO,GAAG/B,IAAI,GAChB,KAAKV,UAAL,CAAgBM,KAAhB,GAAwB,KAAKN,UAAL,CAAgBwB,UADxB,GAEhB,CAFJ;AAIA1B,IAAAA,QAAQ,CAAC4C,MAAT,CAAgB,KAAK7C,OAArB,EAA8B;AAC5B4C,MAAAA,OAD4B;AAE5BE,MAAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C,cAFO;AAG5BC,MAAAA,eAAe,EAAE,KAAK3C,KAAL,CAAW2C;AAHA,KAA9B,EAIGC,KAJH;AAMA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,KAAK,GACJ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACQ,MAAM,CAACT,UAAR,EAAoBA,UAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+CC,KAA/C,CADI,GAEF,IAHN,EAIE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAE,KAAKnC,uBAAL,EADT;AAEE,MAAA,aAAa,EAAE,GAFjB;AAGE,MAAA,OAAO,EAAE,MAAOiC,QAAQ,GAAG,IAAH,GAAUD,QAAQ,CAAC,CAAC1B,IAAF,CAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE,KAAKK,uBAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyB,IADH,CALF,CAJF,CADF;AAgBD;;AArIuD;AAArC7C,Y,CA8BZsD,S,GAAY;AACjBvC,EAAAA,IAAI,EAAEhB,SAAS,CAACwD,IAAV,CAAeC,UADJ;AAEjBZ,EAAAA,KAAK,EAAE7C,SAAS,CAAC0D,MAFA;AAGjBzC,EAAAA,OAAO,EAAEjB,SAAS,CAAC0D,MAHF;AAIjBxC,EAAAA,QAAQ,EAAElB,SAAS,CAAC0D,MAJH;AAKjBjD,EAAAA,IAAI,EAAET,SAAS,CAAC0D,MALC;AAMjBd,EAAAA,UAAU,EAAE5C,SAAS,CAAC2D,SAAV,CAAoB,CAAC3D,SAAS,CAAC4D,MAAX,EAAmB5D,SAAS,CAAC6D,MAA7B,CAApB,CANK;AAOjBtB,EAAAA,YAAY,EAAEvC,SAAS,CAAC2D,SAAV,CAAoB,CAAC3D,SAAS,CAAC4D,MAAX,EAAmB5D,SAAS,CAAC6D,MAA7B,CAApB,CAPG;AAQjBrB,EAAAA,aAAa,EAAExC,SAAS,CAAC2D,SAAV,CAAoB,CAAC3D,SAAS,CAAC4D,MAAX,EAAmB5D,SAAS,CAAC6D,MAA7B,CAApB,CARE;AASjB1C,EAAAA,YAAY,EAAEnB,SAAS,CAAC2D,SAAV,CAAoB,CAAC3D,SAAS,CAAC4D,MAAX,EAAmB5D,SAAS,CAAC6D,MAA7B,CAApB,CATG;AAUjBzC,EAAAA,aAAa,EAAEpB,SAAS,CAAC2D,SAAV,CAAoB,CAAC3D,SAAS,CAAC4D,MAAX,EAAmB5D,SAAS,CAAC6D,MAA7B,CAApB,CAVE;AAWjBnB,EAAAA,QAAQ,EAAE1C,SAAS,CAAC8D,IAXH;AAYjBhB,EAAAA,IAAI,EAAE9C,SAAS,CAAC4D,MAZC;AAajBjB,EAAAA,QAAQ,EAAE3C,SAAS,CAACwD,IAbH;AAcjBN,EAAAA,cAAc,EAAElD,SAAS,CAAC6D,MAdT;AAejBV,EAAAA,eAAe,EAAEnD,SAAS,CAACwD,IAfV;AAgBjB5B,EAAAA,WAAW,EAAE5B,SAAS,CAAC0D;AAhBN,C;AA9BAzD,Y,CAiDZ8D,Y,GAAe;AACpB/C,EAAAA,IAAI,EAAE,KADc;AAEpBC,EAAAA,OAAO,EAAE,SAFW;AAGpBC,EAAAA,QAAQ,EAAE,SAHU;AAIpBT,EAAAA,IAAI,EAAE,QAJc;AAKpBmC,EAAAA,UAAU,EAAE,EALQ;AAMpBL,EAAAA,YAAY,EAAE,EANM;AAOpBC,EAAAA,aAAa,EAAE,EAPK;AAQpBrB,EAAAA,YAAY,EAAE,EARM;AASpBC,EAAAA,aAAa,EAAE,EATK;AAUpB0B,EAAAA,IAAI,EAAE,IAVc;AAWpBH,EAAAA,QAAQ,EAAE,KAXU;AAYpBO,EAAAA,cAAc,EAAE,GAZI;AAapBC,EAAAA,eAAe,EAAE,IAbG;AAcpBvB,EAAAA,WAAW,EAAE;AAdO,C;AAuFxB,IAAMyB,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,aAAa,EAAE,KADN;AAET5C,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BsB,EAAAA,UAAU,EAAE;AACVuB,IAAAA,gBAAgB,EAAE;AADR;AALmB,CAAlB,CAAf","sourcesContent":["/**\n * toggle-switch-react-native\n * Toggle Switch component for react native, it works on iOS and Android\n * https://github.com/aminebenkeroum/toggle-switch-react-native\n * Email:amine.benkeroum@gmail.com\n * Blog: https://medium.com/@aminebenkeroum/\n * @benkeroumamine\n */\n\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated,\n  Platform\n} from \"react-native\";\n\nimport PropTypes from \"prop-types\";\n\nexport default class ToggleSwitch extends React.Component {\n  static calculateDimensions(size) {\n    switch (size) {\n      case \"small\":\n        return {\n          width: 40,\n          padding: 10,\n          circleWidth: 15,\n          circleHeight: 15,\n          translateX: 22\n        };\n      case \"large\":\n        return {\n          width: 70,\n          padding: 20,\n          circleWidth: 30,\n          circleHeight: 30,\n          translateX: 38\n        };\n      default:\n        return {\n          width: 46,\n          padding: 12,\n          circleWidth: 18,\n          circleHeight: 18,\n          translateX: 26\n        };\n    }\n  }\n\n  static propTypes = {\n    isOn: PropTypes.bool.isRequired,\n    label: PropTypes.string,\n    onColor: PropTypes.string,\n    offColor: PropTypes.string,\n    size: PropTypes.string,\n    labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    thumbOnStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    thumbOffStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    trackOnStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    trackOffStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onToggle: PropTypes.func,\n    icon: PropTypes.object,\n    disabled: PropTypes.bool,\n    animationSpeed: PropTypes.number,\n    useNativeDriver: PropTypes.bool,\n    circleColor: PropTypes.string,\n  };\n\n  static defaultProps = {\n    isOn: false,\n    onColor: \"#4cd137\",\n    offColor: \"#ecf0f1\",\n    size: \"medium\",\n    labelStyle: {},\n    thumbOnStyle: {},\n    thumbOffStyle: {},\n    trackOnStyle: {},\n    trackOffStyle: {},\n    icon: null,\n    disabled: false,\n    animationSpeed: 300,\n    useNativeDriver: true,\n    circleColor: 'white'\n  };\n\n  offsetX = new Animated.Value(0);\n  dimensions = ToggleSwitch.calculateDimensions(this.props.size);\n\n  createToggleSwitchStyle = () => [\n    {\n      justifyContent: \"center\",\n      width: this.dimensions.width,\n      borderRadius: 20,\n      padding: this.dimensions.padding,\n      backgroundColor: this.props.isOn ? this.props.onColor : this.props.offColor\n    },\n    this.props.isOn ? this.props.trackOnStyle : this.props.trackOffStyle\n  ];\n\n  createInsideCircleStyle = () => [\n    {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      margin: Platform.OS === \"web\" ? 0 : 4,\n      left: Platform.OS === \"web\" ? 4 : 0,\n      position: \"absolute\",\n      backgroundColor: this.props.circleColor,\n      transform: [{ translateX: this.offsetX }],\n      width: this.dimensions.circleWidth,\n      height: this.dimensions.circleHeight,\n      borderRadius: this.dimensions.circleWidth / 2,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.2,\n      shadowRadius: 2.5,\n      elevation: 1.5\n    },\n    this.props.isOn ? this.props.thumbOnStyle : this.props.thumbOffStyle\n  ];\n\n  render() {\n    const { isOn, onToggle, disabled, labelStyle, label, icon } = this.props;\n\n    const toValue = isOn\n      ? this.dimensions.width - this.dimensions.translateX\n      : 0;\n\n    Animated.timing(this.offsetX, {\n      toValue,\n      duration: this.props.animationSpeed,\n      useNativeDriver: this.props.useNativeDriver,\n    }).start();\n\n    return (\n      <View style={styles.container}>\n        {label ? (\n          <Text style={[styles.labelStyle, labelStyle]}>{label}</Text>\n        ) : null}\n        <TouchableOpacity\n          style={this.createToggleSwitchStyle()}\n          activeOpacity={0.8}\n          onPress={() => (disabled ? null : onToggle(!isOn))}\n        >\n          <Animated.View style={this.createInsideCircleStyle()}>\n            {icon}\n          </Animated.View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  labelStyle: {\n    marginHorizontal: 10\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}