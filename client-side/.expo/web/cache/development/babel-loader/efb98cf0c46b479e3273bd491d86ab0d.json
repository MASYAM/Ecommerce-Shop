{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-reanimated/src/Transitioning.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ReanimatedModule from \"./ReanimatedModule\";\nvar TransitioningContext = React.createContext();\n\nfunction configFromProps(type, props) {\n  var config = {\n    type\n  };\n\n  if ('durationMs' in props) {\n    config.durationMs = props.durationMs;\n  }\n\n  if ('interpolation' in props) {\n    config.interpolation = props.interpolation;\n  }\n\n  if ('type' in props) {\n    config.animation = props.type;\n  }\n\n  if ('delayMs' in props) {\n    config.delayMs = props.delayMs;\n  }\n\n  if ('propagation' in props) {\n    config.propagation = props.propagation;\n  }\n\n  return config;\n}\n\nfunction wrapTransitioningContext(Comp) {\n  return props => {\n    return React.createElement(TransitioningContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, context => React.createElement(Comp, _extends({\n      context: context\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    })));\n  };\n}\n\nclass In extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('in', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n\n}\n\nclass Change extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('change', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n\n}\n\nclass Out extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('out', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n\n}\n\nclass Together extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.transitions = [];\n  }\n\n  componentDidMount() {\n    var config = configFromProps('group', this.props);\n    config.transitions = this.transitions;\n    this.props.context.push(config);\n  }\n\n  render() {\n    return React.createElement(TransitioningContext.Provider, {\n      value: this.transitions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nclass Sequence extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.transitions = [];\n  }\n\n  componentDidMount() {\n    var config = configFromProps('group', this.props);\n    config.sequence = true;\n    config.transitions = this.transitions;\n    this.props.context.push(config);\n  }\n\n  render() {\n    return React.createElement(TransitioningContext.Provider, {\n      value: this.transitions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nfunction createTransitioningComponent(Component) {\n  class Wrapped extends React.Component {\n    constructor() {\n      super(...arguments);\n      this.propTypes = Component.propTypes;\n      this.transitions = [];\n      this.viewRef = React.createRef();\n    }\n\n    componentDidMount() {\n      if (this.props.animateMount) {\n        this.animateNextTransition();\n      }\n    }\n\n    setNativeProps(props) {\n      this.viewRef.current.setNativeProps(props);\n    }\n\n    animateNextTransition() {\n      var viewTag = findNodeHandle(this.viewRef.current);\n      ReanimatedModule.animateNextTransition(viewTag, {\n        transitions: this.transitions\n      });\n    }\n\n    render() {\n      var _this$props = this.props,\n          {\n        transition\n      } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"transition\"]);\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, React.createElement(TransitioningContext.Provider, {\n        value: this.transitions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, transition), React.createElement(Component, _extends({}, rest, {\n        ref: this.viewRef,\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }\n\n  return Wrapped;\n}\n\nvar Transitioning = {\n  View: createTransitioningComponent(View)\n};\nvar Transition = {\n  Sequence: wrapTransitioningContext(Sequence),\n  Together: wrapTransitioningContext(Together),\n  In: wrapTransitioningContext(In),\n  Out: wrapTransitioningContext(Out),\n  Change: wrapTransitioningContext(Change)\n};\nexport { Transitioning, Transition, createTransitioningComponent };","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-reanimated/src/Transitioning.js"],"names":["React","ReanimatedModule","TransitioningContext","createContext","configFromProps","type","props","config","durationMs","interpolation","animation","delayMs","propagation","wrapTransitioningContext","Comp","context","In","Component","componentDidMount","push","render","children","Change","Out","Together","transitions","Sequence","sequence","createTransitioningComponent","Wrapped","propTypes","viewRef","createRef","animateMount","animateNextTransition","setNativeProps","current","viewTag","findNodeHandle","transition","rest","Transitioning","View","Transition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, findNodeHandle } from 'react-native';\nimport ReanimatedModule from './ReanimatedModule';\n\nconst TransitioningContext = React.createContext();\n\nfunction configFromProps(type, props) {\n  const config = { type };\n  if ('durationMs' in props) {\n    config.durationMs = props.durationMs;\n  }\n  if ('interpolation' in props) {\n    config.interpolation = props.interpolation;\n  }\n  if ('type' in props) {\n    config.animation = props.type;\n  }\n  if ('delayMs' in props) {\n    config.delayMs = props.delayMs;\n  }\n  if ('propagation' in props) {\n    config.propagation = props.propagation;\n  }\n  return config;\n}\n\n/**\n * The below wrapper is used to support legacy context API with Context.Consumer\n * render prop. We need it as we want to access `context` from within\n * `componentDidMount` callback. If we decided to drop support for older\n * react native we could rewrite it using hooks or `static contextType` API.\n */\nfunction wrapTransitioningContext(Comp) {\n  return props => {\n    return (\n      <TransitioningContext.Consumer>\n        {context => <Comp context={context} {...props} />}\n      </TransitioningContext.Consumer>\n    );\n  };\n}\n\nclass In extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('in', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n}\n\nclass Change extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('change', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n}\n\nclass Out extends React.Component {\n  componentDidMount() {\n    this.props.context.push(configFromProps('out', this.props));\n  }\n\n  render() {\n    return this.props.children || null;\n  }\n}\n\nclass Together extends React.Component {\n  transitions = [];\n  componentDidMount() {\n    const config = configFromProps('group', this.props);\n    config.transitions = this.transitions;\n    this.props.context.push(config);\n  }\n\n  render() {\n    return (\n      <TransitioningContext.Provider value={this.transitions}>\n        {this.props.children}\n      </TransitioningContext.Provider>\n    );\n  }\n}\n\nclass Sequence extends React.Component {\n  transitions = [];\n  componentDidMount() {\n    const config = configFromProps('group', this.props);\n    config.sequence = true;\n    config.transitions = this.transitions;\n    this.props.context.push(config);\n  }\n\n  render() {\n    return (\n      <TransitioningContext.Provider value={this.transitions}>\n        {this.props.children}\n      </TransitioningContext.Provider>\n    );\n  }\n}\n\nfunction createTransitioningComponent(Component) {\n  class Wrapped extends React.Component {\n    propTypes = Component.propTypes;\n    transitions = [];\n    viewRef = React.createRef();\n\n    componentDidMount() {\n      if (this.props.animateMount) {\n        this.animateNextTransition();\n      }\n    }\n\n    setNativeProps(props) {\n      this.viewRef.current.setNativeProps(props);\n    }\n\n    animateNextTransition() {\n      const viewTag = findNodeHandle(this.viewRef.current);\n      ReanimatedModule.animateNextTransition(viewTag, {\n        transitions: this.transitions,\n      });\n    }\n\n    render() {\n      const { transition, ...rest } = this.props;\n      return (\n        <React.Fragment>\n          <TransitioningContext.Provider value={this.transitions}>\n            {transition}\n          </TransitioningContext.Provider>\n          <Component {...rest} ref={this.viewRef} collapsable={false} />\n        </React.Fragment>\n      );\n    }\n  }\n  return Wrapped;\n}\n\nconst Transitioning = {\n  View: createTransitioningComponent(View),\n};\n\nconst Transition = {\n  Sequence: wrapTransitioningContext(Sequence),\n  Together: wrapTransitioningContext(Together),\n  In: wrapTransitioningContext(In),\n  Out: wrapTransitioningContext(Out),\n  Change: wrapTransitioningContext(Change),\n};\n\nexport { Transitioning, Transition, createTransitioningComponent };\n"]},"metadata":{},"sourceType":"module"}