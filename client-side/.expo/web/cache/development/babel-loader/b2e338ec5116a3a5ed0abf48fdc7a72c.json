{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/InboxDetail/index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport styles from \"./style\";\nimport MapView from \"react-native-map-clustering\";\nimport { Container, Tab, Tabs, Content, Form, Item, Picker, Button, Toast } from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { ThemeSettings, Colors, ImageSources, ScreenNames } from \"../../../constants\";\nimport { Basement } from \"../../../components/Basement\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from \"../../../components/legacy/ClothesDetailSlide\";\nimport ShoppingCartPriceRow from \"../../../components/legacy/ShoppingCartPriceRow\";\nimport InobxMessageItem from \"../../../components/legacy/InobxMessageItem\";\nimport { StandardHeader } from \"../../../components/legacy/Header\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { CloseButton, ButtonImage, MenuButton } from \"../../../components/StandardButtons\";\nimport { WebView } from 'react-native-webview';\nimport { inboxActions } from \"../../../store/actions\";\nimport { ActionStatusTypeValues } from \"../../../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../../../store/selectors/app\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nvar {\n  width: viewportWidth,\n  height: viewportHeight\n} = Dimensions.get('window');\n\nclass InboxDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.goCheckoutScreen = () => {\n      this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n    };\n\n    this._onError = evt => {\n      console.log('_onError', evt);\n    };\n\n    this._onShouldStartLoadWithRequest = evt => {\n      var {\n        openUrlFailure\n      } = this;\n      var {\n        url\n      } = evt;\n      var isExternalBrowserAllowed = ['mailto:', 'http://', 'https://'].filter(whitelistUrl => {\n        return String(url).substr(0, whitelistUrl.length) === whitelistUrl;\n      }).length > 0;\n      var isAppBrowserAllowed = [].filter(whitelistUrl => {\n        return String(url).substr(0, whitelistUrl.length) === whitelistUrl;\n      }).length > 0;\n\n      if (isAppBrowserAllowed) {\n        return true;\n      }\n\n      if (isExternalBrowserAllowed) {\n        if (Linking.canOpenURL(url)) {\n          Linking.openURL(url).then(() => {}).catch(error => {\n            openUrlFailure();\n          });\n          return false;\n        }\n      }\n\n      openUrlFailure();\n      return false;\n    };\n\n    this.openUrlFailure = () => {\n      Alert.alert('Sorry', 'We cannot open this link from this device.\\nPress okay to open our enquiry form details.', [{\n        text: I18n.t('okay_button'),\n        style: 'default'\n      }, {\n        text: I18n.t('cancel_button'),\n        style: 'cancel'\n      }]);\n    };\n\n    this.state = {\n      isLoading: false,\n      lastRequest: 0,\n      lastSent: 0,\n      isUserWantToSavedLogin: false,\n      isShowAlert: false,\n      isShowingSuccessAlert: false,\n      inboxDetail: null\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    var {\n      props,\n      state\n    } = this;\n\n    if (state.lastRequest !== props.inboxDetailRequest.lastRequest) {\n      if (props.inboxDetailRequest.status === ActionStatusTypeValues.ERROR) {\n        this.setState({\n          isLoading: false,\n          lastRequest: props.inboxDetailRequest.lastRequest\n        }, () => {\n          Toast.show({\n            type: \"danger\",\n            text: \"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n          });\n        });\n      } else if (props.inboxDetailRequest.status === ActionStatusTypeValues.COMPLETED) {\n        if (this.props.inboxDetailStatus === \"success\") {\n          this.setState({\n            isLoading: false,\n            lastRequest: props.inboxDetailRequest.lastRequest,\n            inboxDetail: this.props.inboxDetail\n          }, () => {});\n        } else {\n          this.setState({\n            isLoading: false,\n            isShowAlert: true,\n            lastRequest: props.inboxDetailRequest.lastRequest\n          }, () => {});\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.inboxDetail == null) {\n      var {\n        inboxActions: _inboxActions,\n        navigation\n      } = this.props;\n      var id = this.props.navigation.getParam('id');\n\n      _inboxActions.getInboxDetail(navigation.state.key, id);\n    }\n  }\n\n  onValueChangeColor(value) {\n    this.setState({\n      selectedColor: value\n    });\n  }\n\n  render() {\n    return React.createElement(Basement, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, React.createElement(StandardHeader, {\n      back: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 2\n      }\n    }), React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.shoppingCartContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 24\n      }\n    }, React.createElement(Text, {\n      style: styles.titleStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 28\n      }\n    }, \"Inbox Detail\")), this.props.inboxDetail ? React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: styles.pageTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 1\n      }\n    }, this.props.inboxDetail.title, \" \"), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 1\n      }\n    }, this.props.inboxDetail.content)) : null)));\n  }\n\n}\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    inboxDetail: state.inbox.inboxDetail,\n    inboxDetailStatus: state.inbox.inboxDetailStatus,\n    inboxDetailErrorMessage: state.inbox.inboxDetailErrorMessage,\n    inboxDetailRequest: selectViewActionStatus(state, navigation.state.key, inboxActions.INBOX_DETAIL)\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    inboxActions: bindActionCreators(inboxActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxDetail);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/InboxDetail/index.js"],"names":["React","styles","MapView","Container","Tab","Tabs","Content","Form","Item","Picker","Button","Toast","Actions","Icon","ThemeSettings","Colors","ImageSources","ScreenNames","Basement","Carousel","Pagination","ClothesDetailSlide","ShoppingCartPriceRow","InobxMessageItem","StandardHeader","ScrollView","CloseButton","ButtonImage","MenuButton","WebView","inboxActions","ActionStatusTypeValues","selectViewActionStatus","bindActionCreators","connect","width","viewportWidth","height","viewportHeight","Dimensions","get","InboxDetail","Component","constructor","props","goCheckoutScreen","navigation","navigate","CheckoutScreen","_onError","evt","console","log","_onShouldStartLoadWithRequest","openUrlFailure","url","isExternalBrowserAllowed","filter","whitelistUrl","String","substr","length","isAppBrowserAllowed","Linking","canOpenURL","openURL","then","catch","error","Alert","alert","text","I18n","t","style","state","isLoading","lastRequest","lastSent","isUserWantToSavedLogin","isShowAlert","isShowingSuccessAlert","inboxDetail","componentDidUpdate","prevProps","inboxDetailRequest","status","ERROR","setState","show","type","COMPLETED","inboxDetailStatus","componentDidMount","id","getParam","getInboxDetail","key","onValueChangeColor","value","selectedColor","render","shoppingCartContainer","titleContainer","titleStyle","pageTitle","title","content","mapStateToProps","ownProps","inbox","inboxDetailErrorMessage","INBOX_DETAIL","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    Image,\n    Platform,\n    InteractionManager,\n    SafeAreaView,\n    Dimensions,\n    Linking\n    \n} from 'react-native';\nimport styles from './style';\nimport MapView from \"react-native-map-clustering\";\nimport {\n    Container,\n    Tab,\n    Tabs,\n    Content, Form, Item, Picker, Button,\n    Toast\n} from 'native-base';\nimport { Actions } from \"react-native-router-flux\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { ThemeSettings, Colors, ImageSources, ScreenNames } from '../../../constants';\nimport { Basement } from '../../../components/Basement';\n// import Carousel from 'react-native-carousel-view';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport ClothesDetailSlide from '../../../components/legacy/ClothesDetailSlide';\nimport ShoppingCartPriceRow from '../../../components/legacy/ShoppingCartPriceRow';\nimport InobxMessageItem from '../../../components/legacy/InobxMessageItem';\nimport { StandardHeader } from '../../../components/legacy/Header';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { CloseButton, ButtonImage, MenuButton } from '../../../components/StandardButtons';\n\n\n\nimport { WebView } from 'react-native-webview';\n\n\n\nimport { inboxActions } from  '../../../store/actions';\nimport { ActionStatusTypeValues } from '../../../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../../../store/selectors/app';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\n\nconst { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    inboxDetailRequest: ViewActionStateInfo,\n    inboxActions: typeof inboxActions\n}\nclass InboxDetail extends React.Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading: false,\n            lastRequest:0,\n            lastSent: 0,\n            isUserWantToSavedLogin: false,\n            isShowAlert:false,\n            isShowingSuccessAlert: false,\n            inboxDetail:null,\n        };\n    }\n\n\n\n    componentDidUpdate(prevProps: Props) {\n        const { props, state } = this;\n        if (state.lastRequest !== props.inboxDetailRequest.lastRequest) {\n            \n            \n            if (props.inboxDetailRequest.status === ActionStatusTypeValues.ERROR) {\n                this.setState({\n                    isLoading: false,\n                    lastRequest: props.inboxDetailRequest.lastRequest,\n                }, () => {\n                    Toast.show({\n                        type: \"danger\",\n                        text:\"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n                    })\n                });\n            }\n            else if (props.inboxDetailRequest.status === ActionStatusTypeValues.COMPLETED) {\n                if(this.props.inboxDetailStatus===\"success\"){\n\n                    this.setState({\n                        isLoading: false,\n                        lastRequest: props.inboxDetailRequest.lastRequest,\n                        inboxDetail: this.props.inboxDetail,\n                    }, () => {\n\n                    });\n\n                }else{\n                    this.setState({\n                        isLoading: false,\n                        isShowAlert:true,\n                        lastRequest: props.inboxDetailRequest.lastRequest,\n                    }, () => {\n                    });\n                }\n            }\n\n            \n        }\n    }\n\n\n    \n    componentDidMount () {\n        if(this.state.inboxDetail == null){\n            const { inboxActions, navigation } = this.props;\n            const id =  this.props.navigation.getParam('id');\n            inboxActions.getInboxDetail(navigation.state.key, id);\n        }\n    }\n\n    onValueChangeColor(value: string) {\n        this.setState({\n          selectedColor: value\n        });\n      }\n\n\n    goCheckoutScreen = () => {\n        this.props.navigation.navigate(ScreenNames.CheckoutScreen);\n    }\n\n    \n\n\n    _onError = evt => {\n        console.log('_onError', evt);\n      };\n      _onShouldStartLoadWithRequest = evt => {\n        const { openUrlFailure } = this;\n    \n        const { url } = evt;\n\n        const isExternalBrowserAllowed =\n          [\n            'mailto:',\n            'http://',\n            'https://',\n          ].filter(whitelistUrl => {\n            return String(url).substr(0, whitelistUrl.length) === whitelistUrl;\n          }).length > 0;\n    \n        const isAppBrowserAllowed =\n          [\n          ].filter(whitelistUrl => {\n            return String(url).substr(0, whitelistUrl.length) === whitelistUrl;\n          }).length > 0;\n    \n        if (isAppBrowserAllowed) {\n          return true;\n        }\n    \n        if (isExternalBrowserAllowed) {\n          if (Linking.canOpenURL(url)) {\n            Linking.openURL(url)\n              .then(() => { })\n              .catch(error => {\n                openUrlFailure();\n              });\n            return false;\n          }\n        }\n    \n        openUrlFailure();\n        return false;\n      };\n    \n      openUrlFailure = () => {\n        Alert.alert(\n          'Sorry',\n          'We cannot open this link from this device.\\nPress okay to open our enquiry form details.',\n          [\n            {\n              text: I18n.t('okay_button'),\n              style: 'default',\n            },\n            { text: I18n.t('cancel_button'), style: 'cancel' },\n          ],\n        );\n      };\n\n\n\n\n    render() {\n\n\n\n        return (\n            <Basement>\n <StandardHeader back />\n\n                  <ScrollView>\n                  \n                  <View style={styles.shoppingCartContainer}>\n                       <View style={styles.titleContainer}>\n                           <Text style={styles.titleStyle}>Inbox Detail</Text>\n                       </View>\n                   \n\n           \n{ this.props.inboxDetail  ? (\n<View >\n<Text style={styles.pageTitle}>{this.props.inboxDetail.title} </Text>  \n{/* <WebView\n        originWhitelist={['*']}\nonError={this._onError}\nstyle={{ flex: 1, backgroundColor: Colors.supportingBgColor }}\nsource={{html: this.props.inboxDetail.htmlContent}}\n/> */}\n\n<Text>{this.props.inboxDetail.content}</Text>\n</View>\n) : null}\n\n                    \n                      \n\n                    </View>\n                  </ScrollView>\n\n                     \n\n\n\n            </Basement> \n        );\n    }\n}\n\n\n\n\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        inboxDetail: state.inbox.inboxDetail,\n        inboxDetailStatus: state.inbox.inboxDetailStatus,\n        inboxDetailErrorMessage: state.inbox.inboxDetailErrorMessage,\n        inboxDetailRequest: selectViewActionStatus(state, navigation.state.key, inboxActions.INBOX_DETAIL),\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        inboxActions: bindActionCreators(inboxActions, dispatch),\n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(InboxDetail);"]},"metadata":{},"sourceType":"module"}