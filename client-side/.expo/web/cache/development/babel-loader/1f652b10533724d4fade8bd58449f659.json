{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ExploreShop/index.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Drawer, Container, Content, Button, Text, Footer, Title, Toast } from 'native-base';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport PomortionSlideItem from \"../../../components/legacy/PomortionSlideItem\";\nimport CollectionListingItemStyleOne from \"../../../components/legacy/CollectionListingItemStyleOne\";\nimport { Actions } from 'react-native-router-flux';\nimport styles from \"./style\";\nimport { ScreenNames } from \"../../../constants/Screens\";\nimport { ImageSources } from \"../../../constants\";\nimport { CloseButton, ButtonImage, MenuButton } from \"../../../components/StandardButtons\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { NavigationActions, StackActions, NavigationProp } from 'react-navigation';\nimport { productsActions } from \"../../../store/actions\";\nimport { ActionStatusTypeValues } from \"../../../constants/actionStatusTypes\";\nimport { selectViewActionStatus } from \"../../../store/selectors/app\";\nvar {\n  width: viewportWidth,\n  height: viewportHeight\n} = Dimensions.get('window');\n\nclass ExploreShop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshContent = () => {\n      this.setState({\n        refreshing: true\n      });\n      var {\n        productsActions,\n        navigation\n      } = this.props;\n      productsActions.getHomePageBanner(navigation.state.key);\n    };\n\n    this.onPress = productId => {\n      console.log('Product Id >>');\n      console.log(productId);\n      this.props.navigation.navigate(ScreenNames.ClothesDetail, {\n        productId: productId\n      });\n    };\n\n    this.goListing = () => {\n      this.props.navigation.navigate(ScreenNames.ClothesListing);\n    };\n\n    this.setModalVisible = visible => {\n      this.setState({\n        modalVisible: visible\n      });\n    };\n\n    this.onModalRequestClose = () => {\n      this.setModalVisible(false);\n      this.setState({\n        modalVisible: false\n      });\n    };\n\n    this._renderPromotionItem001 = (_ref) => {\n      var {\n        item,\n        index\n      } = _ref;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, React.createElement(PomortionSlideItem, {\n        Adimage: item.image,\n        firstText: item.firstText,\n        secondText: item.secondText,\n        thirdText: item.secondText,\n        onPress: this.goListing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }));\n    };\n\n    this.renderDesignCollection = () => {\n      return this.state.designerCollectionList.map((item, key) => {\n        return React.createElement(View, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }, React.createElement(CollectionListingItemStyleOne, {\n          Adimage: item.thumbail,\n          name: item.name,\n          price: item.price,\n          isNewArrive: item.isNewArrive,\n          productId: item.id,\n          onPress: this.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }\n        }));\n      });\n    };\n\n    this.renderHolidaySale = () => {\n      return this.state.holidaySaleList.map((item, key) => {\n        return React.createElement(View, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }\n        }, React.createElement(CollectionListingItemStyleOne, {\n          Adimage: item.thumbail,\n          name: item.name,\n          price: item.price,\n          isNewArrive: item.isNewArrive,\n          productId: item.id,\n          onPress: this.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }\n        }));\n      });\n    };\n\n    this.renderTopTrendList = () => {\n      return this.state.topTrendsList.map((item, key) => {\n        return React.createElement(View, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }\n        }, React.createElement(CollectionListingItemStyleOne, {\n          Adimage: item.thumbail,\n          name: item.name,\n          price: item.price,\n          isNewArrive: item.isNewArrive,\n          productId: item.id,\n          onPress: this.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }\n        }));\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      lastRequest: 0,\n      lastSent: 0,\n      modalVisible: true,\n      slider1ActiveSlide: 1,\n      promotionEntries001: [],\n      designerCollectionList: [],\n      holidaySaleList: [],\n      topTrendsList: [],\n      isShowAlert: false,\n      refreshing: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.promotionEntries001.length == 0) {\n      this.refreshContent();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var {\n      props,\n      state\n    } = this;\n\n    if (state.lastRequest !== props.homeBannerRequest.lastRequest) {\n      if (props.homeBannerRequest.status === ActionStatusTypeValues.ERROR) {\n        this.setState({\n          refreshing: false,\n          isLoading: false,\n          lastRequest: props.homeBannerRequest.lastRequest\n        }, () => {\n          Toast.show({\n            type: \"danger\",\n            text: \"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n          });\n        });\n      } else if (props.homeBannerRequest.status === ActionStatusTypeValues.COMPLETED) {\n        console.log(this.props.homeBannerStatus);\n        console.log(this.props.homeBannerErrorMessage);\n\n        if (this.props.homeBannerStatus === \"success\") {\n          this.setState({\n            refreshing: false,\n            isLoading: false,\n            lastRequest: props.homeBannerRequest.lastRequest,\n            promotionEntries001: this.props.homeBanner,\n            designerCollectionList: this.props.designerCollectionList,\n            holidaySaleList: this.props.holidaySaleList,\n            topTrendsList: this.props.topTrendsList\n          }, () => {});\n        } else {\n          this.setState({\n            refreshing: false,\n            isLoading: false,\n            isShowAlert: true,\n            lastRequest: props.homeBannerRequest.lastRequest\n          }, () => {});\n        }\n      }\n    }\n  }\n\n  render() {\n    var {\n      props\n    } = this;\n    var isCompleteSubmit = props.homeBannerRequest.status === ActionStatusTypeValues.COMPLETED;\n    var homeBannerStatus = props.homeBannerStatus;\n    var homeBannerErrorMessage = props.homeBannerErrorMessage;\n    return React.createElement(Container, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, React.createElement(StatusBar, {\n      barStyle: \"light-content\",\n      translucent: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }), React.createElement(ScrollView, {\n      horizontal: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      decelerationRate: \"fast\",\n      refreshControl: React.createElement(RefreshControl, {\n        refreshing: this.state.refreshing,\n        onRefresh: this.refreshContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 5\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: styles.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 4\n      }\n    }, React.createElement(View, {\n      style: styles.promotionBannerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 1\n      }\n    }, React.createElement(Carousel, {\n      ref: c => this._slider1Ref = c,\n      data: this.state.promotionEntries001,\n      renderItem: this._renderPromotionItem001,\n      sliderWidth: viewportWidth,\n      itemWidth: viewportWidth,\n      hasParallaxImages: true,\n      loop: true,\n      firstItem: 0,\n      autoplay: true,\n      loopClonesPerSide: 2,\n      containerCustomStyle: styles.slider,\n      autoplayInterval: 2000,\n      onSnapToItem: index => this.setState({\n        slider1ActiveSlide: index\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 4\n      }\n    }), React.createElement(Pagination, {\n      dotsLength: this.state.promotionEntries001.length,\n      activeDotIndex: this.state.slider1ActiveSlide,\n      containerStyle: styles.paginationContainer,\n      dotColor: 'rgba(255, 255, 255, 0.92)',\n      dotStyle: styles.paginationDot,\n      inactiveDotColor: '#F2F2F2',\n      inactiveDotOpacity: 0.4,\n      inactiveDotScale: 0.6,\n      carouselRef: this._slider1Ref,\n      tappableDots: !!this._slider1Ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 1\n      }\n    }))), React.createElement(View, {\n      style: styles.mainContentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: styles.headline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 1\n      }\n    }, \"Designer Collection\"), React.createElement(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      decelerationRate: \"fast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 1\n      }\n    }, this.renderDesignCollection())), React.createElement(View, {\n      style: styles.mainContentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: styles.headline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 1\n      }\n    }, \"Holiday Sale\"), React.createElement(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      decelerationRate: \"fast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 1\n      }\n    }, this.renderHolidaySale())), React.createElement(View, {\n      style: styles.mainContentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 1\n      }\n    }, React.createElement(Text, {\n      style: styles.headline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 1\n      }\n    }, \"Top Trends\"), React.createElement(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      decelerationRate: \"fast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 1\n      }\n    }, this.renderTopTrendList()))), React.createElement(SafeAreaView, {\n      style: styles.menubuttoncontainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }\n    }, React.createElement(MenuButton, {\n      bg: true,\n      rounded: true,\n      onPress: () => Actions.drawerOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 25\n      }\n    })), this.state.isShowAlert ? React.createElement(View, {\n      style: styles.registerSuccessDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.sucessWordingsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 22\n      }\n    }, React.createElement(Text, {\n      style: styles.errorHeading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    }, \"Error\"), React.createElement(Text, {\n      style: styles.sucessDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 29\n      }\n    }, homeBannerErrorMessage), React.createElement(Button, {\n      transparent: true,\n      full: true,\n      style: styles.btnLogonNow,\n      onPress: this.closeDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: styles.btnLogonNowTextStyle,\n      large: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 33\n      }\n    }, \"Close\")))) : null);\n  }\n\n}\n\nDrawer.defaultProps.styles.mainOverlay.elevation = 0;\n\nvar mapStateToProps = (state, ownProps) => {\n  var {\n    navigation\n  } = ownProps;\n  return {\n    homeBanner: state.products.homeBanner,\n    designerCollectionList: state.products.designerCollectionList,\n    holidaySaleList: state.products.holidaySaleList,\n    topTrendsList: state.products.topTrendsList,\n    homeBannerStatus: state.products.homeBannerStatus,\n    homeBannerErrorMessage: state.products.homeBannerErrorMessage,\n    homeBannerRequest: selectViewActionStatus(state, navigation.state.key, productsActions.HOME_PAGE_BANNER)\n  };\n};\n\nvar mapDispatchToProps = dispatch => {\n  return {\n    productsActions: bindActionCreators(productsActions, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreShop);","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/src/screens/legacy/ExploreShop/index.js"],"names":["React","Drawer","Container","Content","Button","Text","Footer","Title","Toast","Carousel","Pagination","PomortionSlideItem","CollectionListingItemStyleOne","Actions","styles","ScreenNames","ImageSources","CloseButton","ButtonImage","MenuButton","bindActionCreators","connect","NavigationActions","StackActions","NavigationProp","productsActions","ActionStatusTypeValues","selectViewActionStatus","width","viewportWidth","height","viewportHeight","Dimensions","get","ExploreShop","Component","constructor","props","refreshContent","setState","refreshing","navigation","getHomePageBanner","state","key","onPress","productId","console","log","navigate","ClothesDetail","goListing","ClothesListing","setModalVisible","visible","modalVisible","onModalRequestClose","_renderPromotionItem001","item","index","image","firstText","secondText","renderDesignCollection","designerCollectionList","map","thumbail","name","price","isNewArrive","id","renderHolidaySale","holidaySaleList","renderTopTrendList","topTrendsList","isLoading","lastRequest","lastSent","slider1ActiveSlide","promotionEntries001","isShowAlert","componentDidMount","length","componentDidUpdate","prevProps","homeBannerRequest","status","ERROR","show","type","text","COMPLETED","homeBannerStatus","homeBannerErrorMessage","homeBanner","render","isCompleteSubmit","container","body","promotionBannerContainer","c","_slider1Ref","slider","paginationContainer","paginationDot","mainContentContainer","headline","menubuttoncontainer","drawerOpen","registerSuccessDialog","sucessWordingsContainer","errorHeading","sucessDescription","btnLogonNow","closeDialog","btnLogonNowTextStyle","defaultProps","mainOverlay","elevation","mapStateToProps","ownProps","products","HOME_PAGE_BANNER","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    View,\n    TouchableOpacity,\n    StatusBar,\n    ImageBackground,\n    ActivityIndicator,\n    Image,\n    Keyboard,\n    SafeAreaView,\n    ScrollView,\n    Dimensions,\n    Modal,\n    RefreshControl\n} from 'react-native'\nimport { Drawer,Container, Content, Button, Text, Footer, Title,Toast } from 'native-base'\n// import Carousel from 'react-native-carousel-view';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport PomortionSlideItem from '../../../components/legacy/PomortionSlideItem';\nimport CollectionListingItemStyleOne from '../../../components/legacy/CollectionListingItemStyleOne';\nimport { Actions } from 'react-native-router-flux'\nimport styles from './style'\nimport { ScreenNames } from '../../../constants/Screens'\nimport { ImageSources } from '../../../constants'\nimport { CloseButton, ButtonImage, MenuButton } from '../../../components/StandardButtons';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { NavigationActions, StackActions, NavigationProp } from 'react-navigation';\nimport { productsActions } from  '../../../store/actions';\nimport { ActionStatusTypeValues } from '../../../constants/actionStatusTypes';\nimport { selectViewActionStatus } from '../../../store/selectors/app';\n\n\n\n\nconst { width: viewportWidth, height: viewportHeight } = Dimensions.get('window');\n\n\n\ntype OwnProps = {\n    navigation: NavigationProp;\n}\n\ntype Props = OwnProps & {\n    homeBannerRequest: ViewActionStateInfo,\n    productsActions: typeof productsActions,\n}\nclass ExploreShop extends React.Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            isLoading:false,\n            lastRequest:0,\n            lastSent: 0,\n            modalVisible:true,\n            slider1ActiveSlide:1,\n            promotionEntries001:[],\n            designerCollectionList:[],\n            holidaySaleList:[],\n            topTrendsList:[],\n            isShowAlert:false,\n            refreshing: false,\n \n         };\n    }\n\n\n\n    refreshContent = () =>{\n        this.setState({refreshing: true});\n        const { productsActions, navigation } = this.props;\n        productsActions.getHomePageBanner(navigation.state.key);\n    }\n\n\n    componentDidMount () {\n        if(this.state.promotionEntries001.length == 0){\n            this.refreshContent();\n        }\n    }\n    \n    \n    componentDidUpdate(prevProps: Props) {\n        const { props, state } = this;\n        if (state.lastRequest !== props.homeBannerRequest.lastRequest) {\n            \n            \n            if (props.homeBannerRequest.status === ActionStatusTypeValues.ERROR) {\n                this.setState({\n                    refreshing: false,\n                    isLoading: false,\n                    lastRequest: props.homeBannerRequest.lastRequest,\n                }, () => {\n                    Toast.show({\n                        type: \"danger\",\n                        text:\"Sorry, it seems you are facing some technical problem. Please contact IT Support.\"\n                    })\n                });\n            }\n            else if (props.homeBannerRequest.status === ActionStatusTypeValues.COMPLETED) {\n                console.log(this.props.homeBannerStatus);\n                console.log(this.props.homeBannerErrorMessage);\n                if(this.props.homeBannerStatus===\"success\"){\n\n                    this.setState({\n                        refreshing: false,\n                        isLoading: false,\n                        lastRequest: props.homeBannerRequest.lastRequest,\n                        promotionEntries001: this.props.homeBanner,\n                        designerCollectionList: this.props.designerCollectionList,\n                        holidaySaleList: this.props.holidaySaleList,\n                        topTrendsList: this.props.topTrendsList,\n                    }, () => {\n\n                    });\n\n                }else{\n                    this.setState({\n                        refreshing: false,\n                        isLoading: false,\n                        isShowAlert:true,\n                        lastRequest: props.homeBannerRequest.lastRequest,\n                    }, () => {\n                    });\n                }\n            }\n\n            \n        }\n    }\n    \n\n\n    onPress = (productId) => {\n            console.log('Product Id >>');\n            console.log(productId);\n\n            this.props.navigation.navigate(ScreenNames.ClothesDetail, {\n                productId: productId\n              });\n\n\n    }\n\n    \n    goListing = () => {\n            this.props.navigation.navigate(ScreenNames.ClothesListing);\n    }\n\n\n\n    setModalVisible = (visible) => {\n        this.setState({ modalVisible: visible });\n    }\n\n    onModalRequestClose = () => {\n        this.setModalVisible(false);\n        this.setState({ modalVisible: false });\n    }\n\n\n    _renderPromotionItem001 = ({item, index}) => {\n        return (\n                    <View>\n                            <PomortionSlideItem\n                                Adimage={item.image}\n                                firstText={item.firstText}\n                                secondText={item.secondText}\n                                thirdText={item.secondText}\n                                onPress={this.goListing}\n                            />\n                     </View>\n        );\n    }\n\n\n    renderDesignCollection =()=> {\n        return this.state.designerCollectionList.map((item, key) => {\n            return (\n                <View  key={key}>\n                    <CollectionListingItemStyleOne\n                        Adimage={item.thumbail}\n                        name={item.name}\n                        price={item.price}\n                        isNewArrive={item.isNewArrive}\n                        productId={item.id}\n                        onPress={this.onPress}\n                    />\n                </View>\n            );\n        });\n    }\n\n\n\n    renderHolidaySale =()=> {\n        return this.state.holidaySaleList.map((item, key) => {\n            return (\n                <View  key={key}>\n                    <CollectionListingItemStyleOne\n                        Adimage={item.thumbail}\n                        name={item.name}\n                        price={item.price}\n                        isNewArrive={item.isNewArrive}\n                        productId={item.id}\n                        onPress={this.onPress}\n                    />\n                </View>\n            );\n        });\n    }\n    \n    renderTopTrendList =()=> {\n        return this.state.topTrendsList.map((item, key) => {\n            return (\n                <View  key={key}>\n                    <CollectionListingItemStyleOne\n                        Adimage={item.thumbail}\n                        name={item.name}\n                        price={item.price}\n                        isNewArrive={item.isNewArrive}\n                        productId={item.id}\n                        onPress={this.onPress}\n                    />\n                </View>\n            );\n        });\n    }\n    \n\n\n    render() {\n\n        const { props } = this;\n        const isCompleteSubmit = props.homeBannerRequest.status === ActionStatusTypeValues.COMPLETED;\n        const homeBannerStatus = props.homeBannerStatus;\n        const homeBannerErrorMessage = props.homeBannerErrorMessage;\n\n\n        \n        return (\n            <Container style={styles.container}>\n                <StatusBar\n                    barStyle=\"light-content\"\n                    translucent={true}\n                />\n   <ScrollView\n horizontal={false}\n showsHorizontalScrollIndicator={false}\n scrollEventThrottle={200}\n decelerationRate=\"fast\"\n refreshControl={\n    <RefreshControl\n      refreshing={this.state.refreshing}\n      onRefresh={this.refreshContent}\n    />\n  }\n>\n\n\n   <View style={styles.body}>\n\n<View style={styles.promotionBannerContainer}>\n   <Carousel\n                    ref={c => this._slider1Ref = c}\n                            data={this.state.promotionEntries001}\n                            renderItem={this._renderPromotionItem001}\n                            sliderWidth={viewportWidth}\n                            itemWidth={viewportWidth}\n                            hasParallaxImages={true}\n                            loop={true}\n                            firstItem={0}\n                            autoplay={true}\n                            loopClonesPerSide={2}        \n                            containerCustomStyle={styles.slider}\n                            autoplayInterval={2000}\n                            onSnapToItem={(index) => this.setState({ slider1ActiveSlide: index }) }\n                            />\n\n<Pagination\n                  dotsLength={this.state.promotionEntries001.length}\n                  activeDotIndex={this.state.slider1ActiveSlide}\n                  containerStyle={styles.paginationContainer}\n                  dotColor={'rgba(255, 255, 255, 0.92)'}\n                  dotStyle={styles.paginationDot}\n                  inactiveDotColor={'#F2F2F2'}\n                  inactiveDotOpacity={0.4}\n                  inactiveDotScale={0.6}\n                  carouselRef={this._slider1Ref}\n                  tappableDots={!!this._slider1Ref}\n                />\n</View>\n\n                \n                </View>\n\n\n\n\n\n<View style={styles.mainContentContainer}>\n<Text style={styles.headline}>Designer Collection</Text>\n<ScrollView\n  horizontal={true}\n  showsHorizontalScrollIndicator={false}\n  scrollEventThrottle={200}\n  decelerationRate=\"fast\"\n>\n{\n    this.renderDesignCollection()\n}\n\n\n\n\n</ScrollView>\n</View>\n\n\n\n\n\n\n\n<View style={styles.mainContentContainer}>\n<Text style={styles.headline}>Holiday Sale</Text>\n<ScrollView\n  horizontal={true}\n  showsHorizontalScrollIndicator={false}\n  scrollEventThrottle={200}\n  decelerationRate=\"fast\"\n>\n{\n    this.renderHolidaySale()\n}\n\n</ScrollView>\n</View>\n\n\n\n\n\n\n\n\n\n\n<View style={styles.mainContentContainer}>\n<Text style={styles.headline}>Top Trends</Text>\n<ScrollView\n  horizontal={true}\n  showsHorizontalScrollIndicator={false}\n  scrollEventThrottle={200}\n  decelerationRate=\"fast\"\n>\n{\n    this.renderTopTrendList()\n}\n\n\n</ScrollView>\n</View>\n\n\n\n\n\n</ScrollView>\n\n\n\n        <SafeAreaView style={styles.menubuttoncontainer}>\n                        <MenuButton bg rounded onPress={() => Actions.drawerOpen()} />\n                    </SafeAreaView>\n                \n\n       { this.state.isShowAlert  ? (\n            <View style={styles.registerSuccessDialog} >\n                     <View style={styles.sucessWordingsContainer}>\n                            <Text style={styles.errorHeading}>Error</Text>\n                            <Text style={styles.sucessDescription}>{homeBannerErrorMessage}</Text>\n                            <Button transparent full style={styles.btnLogonNow} onPress={this.closeDialog}>\n                                <Text style={styles.btnLogonNowTextStyle} large>Close</Text>\n                            </Button> \n                     </View>\n               \n            </View>\n        ) : null}\n\n\n\n            </Container>\n        )\n    }\n}\n\nDrawer.defaultProps.styles.mainOverlay.elevation = 0;\n\n\n\n\n\n\nconst mapStateToProps = (state, ownProps: OwnProps) => {\n    const { navigation } = ownProps;\n    return {\n        homeBanner: state.products.homeBanner,\n        designerCollectionList: state.products.designerCollectionList,\n        holidaySaleList: state.products.holidaySaleList,\n        topTrendsList: state.products.topTrendsList,\n        homeBannerStatus: state.products.homeBannerStatus,\n        homeBannerErrorMessage: state.products.homeBannerErrorMessage,\n        homeBannerRequest: selectViewActionStatus(state, navigation.state.key, productsActions.HOME_PAGE_BANNER),\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        productsActions: bindActionCreators(productsActions, dispatch),\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExploreShop);"]},"metadata":{},"sourceType":"module"}