{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createHandler from \"./createHandler\";\nimport GestureHandlerPropTypes from \"./GestureHandlerPropTypes\";\nimport PlatformConstants from \"./PlatformConstants\";\nexport var TapGestureHandler = createHandler('TapGestureHandler', _objectSpread(_objectSpread({}, GestureHandlerPropTypes), {}, {\n  maxDurationMs: PropTypes.number,\n  maxDelayMs: PropTypes.number,\n  numberOfTaps: PropTypes.number,\n  maxDeltaX: PropTypes.number,\n  maxDeltaY: PropTypes.number,\n  maxDist: PropTypes.number,\n  minPointers: PropTypes.number\n}), {});\nexport var FlingGestureHandler = createHandler('FlingGestureHandler', _objectSpread(_objectSpread({}, GestureHandlerPropTypes), {}, {\n  numberOfPointers: PropTypes.number,\n  direction: PropTypes.number\n}), {});\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nexport var ForceTouchGestureHandler = PlatformConstants && PlatformConstants.forceTouchAvailable ? createHandler('ForceTouchGestureHandler', _objectSpread(_objectSpread({}, GestureHandlerPropTypes), {}, {\n  minForce: PropTypes.number,\n  maxForce: PropTypes.number,\n  feedbackOnActivation: PropTypes.bool\n}), {}) : ForceTouchFallback;\nForceTouchGestureHandler.forceTouchAvailable = PlatformConstants && PlatformConstants.forceTouchAvailable || false;\nexport var LongPressGestureHandler = createHandler('LongPressGestureHandler', _objectSpread(_objectSpread({}, GestureHandlerPropTypes), {}, {\n  minDurationMs: PropTypes.number,\n  maxDist: PropTypes.number\n}), {});\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n\nexport var PanGestureHandler = createHandler('PanGestureHandler', _objectSpread(_objectSpread({}, GestureHandlerPropTypes), {}, {\n  activeOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  activeOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  minDist: PropTypes.number,\n  minVelocity: PropTypes.number,\n  minVelocityX: PropTypes.number,\n  minVelocityY: PropTypes.number,\n  minPointers: PropTypes.number,\n  maxPointers: PropTypes.number,\n  avgTouches: PropTypes.bool\n}), {}, managePanProps, {\n  activeOffsetYStart: true,\n  activeOffsetYEnd: true,\n  activeOffsetXStart: true,\n  activeOffsetXEnd: true,\n  failOffsetYStart: true,\n  failOffsetYEnd: true,\n  failOffsetXStart: true,\n  failOffsetXEnd: true\n});\nexport var PinchGestureHandler = createHandler('PinchGestureHandler', GestureHandlerPropTypes, {});\nexport var RotationGestureHandler = createHandler('RotationGestureHandler', GestureHandlerPropTypes, {});","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-gesture-handler/Gestures.js"],"names":["PropTypes","React","createHandler","GestureHandlerPropTypes","PlatformConstants","TapGestureHandler","maxDurationMs","number","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","minPointers","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","Component","componentDidMount","console","warn","render","props","children","ForceTouchGestureHandler","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","bool","LongPressGestureHandler","minDurationMs","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","Error","failOffsetX","minDeltaY","activeOffsetY","failOffsetY","Array","isArray","transformPanGestureHandlerProps","res","undefined","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","oneOfType","arrayOf","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\nimport PlatformConstants from './PlatformConstants';\n\nexport const TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nexport const FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport const ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nexport const LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport const PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nexport const PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nexport const RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n"]},"metadata":{},"sourceType":"module"}