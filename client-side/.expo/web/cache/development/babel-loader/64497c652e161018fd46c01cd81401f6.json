{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/toggle-switch-react-native/ToggleSwitch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PropTypes from \"prop-types\";\nexport default class ToggleSwitch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.offsetX = new Animated.Value(0);\n    this.dimensions = ToggleSwitch.calculateDimensions(this.props.size);\n\n    this.createToggleSwitchStyle = () => _objectSpread({\n      justifyContent: \"center\",\n      width: this.dimensions.width,\n      borderRadius: 20,\n      padding: this.dimensions.padding,\n      backgroundColor: this.props.isOn ? this.props.onColor : this.props.offColor\n    }, this.props.isOn ? this.props.trackOnStyle : this.props.trackOffStyle);\n\n    this.createInsideCircleStyle = () => _objectSpread({\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      margin: 4,\n      position: \"absolute\",\n      backgroundColor: \"white\",\n      transform: [{\n        translateX: this.offsetX\n      }],\n      width: this.dimensions.circleWidth,\n      height: this.dimensions.circleHeight,\n      borderRadius: this.dimensions.circleWidth / 2,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2\n      },\n      shadowOpacity: 0.2,\n      shadowRadius: 2.5,\n      elevation: 1.5\n    }, this.props.isOn ? this.props.thumbOnStyle : this.props.thumbOffStyle);\n  }\n\n  static calculateDimensions(size) {\n    switch (size) {\n      case \"small\":\n        return {\n          width: 40,\n          padding: 10,\n          circleWidth: 15,\n          circleHeight: 15,\n          translateX: 22\n        };\n\n      case \"large\":\n        return {\n          width: 70,\n          padding: 20,\n          circleWidth: 30,\n          circleHeight: 30,\n          translateX: 38\n        };\n\n      default:\n        return {\n          width: 46,\n          padding: 12,\n          circleWidth: 18,\n          circleHeight: 18,\n          translateX: 26\n        };\n    }\n  }\n\n  render() {\n    var {\n      isOn,\n      onToggle,\n      disabled,\n      labelStyle,\n      label,\n      icon\n    } = this.props;\n    var toValue = isOn ? this.dimensions.width - this.dimensions.translateX : 0;\n    Animated.timing(this.offsetX, {\n      toValue,\n      duration: 300\n    }).start();\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, label ? React.createElement(Text, {\n      style: [styles.labelStyle, labelStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, label) : null, React.createElement(TouchableOpacity, {\n      style: this.createToggleSwitchStyle(),\n      activeOpacity: 0.8,\n      onPress: () => disabled ? null : onToggle(!isOn),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, React.createElement(Animated.View, {\n      style: this.createInsideCircleStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, icon)));\n  }\n\n}\nToggleSwitch.propTypes = {\n  isOn: PropTypes.bool.isRequired,\n  label: PropTypes.string,\n  onColor: PropTypes.string.isRequired,\n  offColor: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  labelStyle: PropTypes.object,\n  onToggle: PropTypes.func,\n  icon: PropTypes.object,\n  disabled: PropTypes.bool\n};\nToggleSwitch.defaultProps = {\n  isOn: false,\n  onColor: \"#4cd137\",\n  offColor: \"#ecf0f1\",\n  size: \"medium\",\n  labelStyle: {},\n  thumbOnStyle: {},\n  thumbOffStyle: {},\n  trackOnStyle: {},\n  trackOffStyle: {},\n  icon: null,\n  disabled: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  labelStyle: {\n    marginHorizontal: 10\n  }\n});","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/toggle-switch-react-native/ToggleSwitch.js"],"names":["React","PropTypes","ToggleSwitch","Component","offsetX","Animated","Value","dimensions","calculateDimensions","props","size","createToggleSwitchStyle","justifyContent","width","borderRadius","padding","backgroundColor","isOn","onColor","offColor","trackOnStyle","trackOffStyle","createInsideCircleStyle","alignItems","margin","position","transform","translateX","circleWidth","height","circleHeight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","thumbOnStyle","thumbOffStyle","render","onToggle","disabled","labelStyle","label","icon","toValue","timing","duration","start","styles","container","propTypes","bool","isRequired","string","object","func","defaultProps","StyleSheet","create","flexDirection","marginHorizontal"],"mappings":"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","sourcesContent":["/**\n * toggle-switch-react-native\n * Toggle Switch component for react native, it works on iOS and Android\n * https://github.com/aminebenkeroum/toggle-switch-react-native\n * Email:amine.benkeroum@gmail.com\n * Blog: https://medium.com/@aminebenkeroum/\n * @benkeroumamine\n */\n\nimport React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Animated\n} from \"react-native\";\n\nimport PropTypes from \"prop-types\";\n\nexport default class ToggleSwitch extends React.Component {\n  static calculateDimensions(size) {\n    switch (size) {\n      case \"small\":\n        return {\n          width: 40,\n          padding: 10,\n          circleWidth: 15,\n          circleHeight: 15,\n          translateX: 22\n        };\n      case \"large\":\n        return {\n          width: 70,\n          padding: 20,\n          circleWidth: 30,\n          circleHeight: 30,\n          translateX: 38\n        };\n      default:\n        return {\n          width: 46,\n          padding: 12,\n          circleWidth: 18,\n          circleHeight: 18,\n          translateX: 26\n        };\n    }\n  }\n\n  static propTypes = {\n    isOn: PropTypes.bool.isRequired,\n    label: PropTypes.string,\n    onColor: PropTypes.string.isRequired,\n    offColor: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    labelStyle: PropTypes.object,\n    onToggle: PropTypes.func,\n    icon: PropTypes.object,\n    disabled: PropTypes.bool\n  };\n\n  static defaultProps = {\n    isOn: false,\n    onColor: \"#4cd137\",\n    offColor: \"#ecf0f1\",\n    size: \"medium\",\n    labelStyle: {},\n    thumbOnStyle: {},\n    thumbOffStyle: {},\n    trackOnStyle: {},\n    trackOffStyle: {},\n    icon: null,\n    disabled: false\n  };\n\n  offsetX = new Animated.Value(0);\n  dimensions = ToggleSwitch.calculateDimensions(this.props.size);\n\n  createToggleSwitchStyle = () => ({\n    justifyContent: \"center\",\n    width: this.dimensions.width,\n    borderRadius: 20,\n    padding: this.dimensions.padding,\n    backgroundColor: this.props.isOn ? this.props.onColor : this.props.offColor,\n    ...(this.props.isOn ? this.props.trackOnStyle : this.props.trackOffStyle)\n  });\n\n  createInsideCircleStyle = () => ({\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 4,\n    position: \"absolute\",\n    backgroundColor: \"white\",\n    transform: [{ translateX: this.offsetX }],\n    width: this.dimensions.circleWidth,\n    height: this.dimensions.circleHeight,\n    borderRadius: this.dimensions.circleWidth / 2,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2.5,\n    elevation: 1.5,\n    ...(this.props.isOn ? this.props.thumbOnStyle : this.props.thumbOffStyle)\n  });\n\n  render() {\n    const { isOn, onToggle, disabled, labelStyle, label, icon } = this.props;\n\n    const toValue = isOn\n      ? this.dimensions.width - this.dimensions.translateX\n      : 0;\n\n    Animated.timing(this.offsetX, {\n      toValue,\n      duration: 300\n    }).start();\n\n    return (\n      <View style={styles.container}>\n        {label ? (\n          <Text style={[styles.labelStyle, labelStyle]}>{label}</Text>\n        ) : null}\n        <TouchableOpacity\n          style={this.createToggleSwitchStyle()}\n          activeOpacity={0.8}\n          onPress={() => (disabled ? null : onToggle(!isOn))}\n        >\n          <Animated.View style={this.createInsideCircleStyle()}>\n            {icon}\n          </Animated.View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  labelStyle: {\n    marginHorizontal: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}