{"ast":null,"code":"var _jsxFileName = \"/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nimport styles from \"./Pagination.style\";\nexport default class PaginationDot extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animColor: new Animated.Value(0),\n      animOpacity: new Animated.Value(0),\n      animTransform: new Animated.Value(0)\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.active) {\n      this._animate(1);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.active !== this.props.active) {\n      this._animate(this.props.active ? 1 : 0);\n    }\n  }\n\n  _animate() {\n    var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var {\n      animColor,\n      animOpacity,\n      animTransform\n    } = this.state;\n    var {\n      animatedDuration,\n      animatedFriction,\n      animatedTension\n    } = this.props;\n    var commonProperties = {\n      toValue,\n      duration: animatedDuration,\n      isInteraction: false,\n      useNativeDriver: !this._shouldAnimateColor\n    };\n    var animations = [Animated.timing(animOpacity, _objectSpread({\n      easing: Easing.linear\n    }, commonProperties)), Animated.spring(animTransform, _objectSpread({\n      friction: animatedFriction,\n      tension: animatedTension\n    }, commonProperties))];\n\n    if (this._shouldAnimateColor) {\n      animations.push(Animated.timing(animColor, _objectSpread({\n        easing: Easing.linear\n      }, commonProperties)));\n    }\n\n    Animated.parallel(animations).start();\n  }\n\n  get _shouldAnimateColor() {\n    var {\n      color,\n      inactiveColor\n    } = this.props;\n    return color && inactiveColor;\n  }\n\n  render() {\n    var {\n      animColor,\n      animOpacity,\n      animTransform\n    } = this.state;\n    var {\n      active,\n      activeOpacity,\n      carouselRef,\n      color,\n      containerStyle,\n      inactiveColor,\n      inactiveStyle,\n      inactiveOpacity,\n      inactiveScale,\n      index,\n      style,\n      tappable,\n      delayPressInDot\n    } = this.props;\n    var animatedStyle = {\n      opacity: animOpacity.interpolate({\n        inputRange: [0, 1],\n        outputRange: [inactiveOpacity, 1]\n      }),\n      transform: [{\n        scale: animTransform.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveScale, 1]\n        })\n      }]\n    };\n    var animatedColor = this._shouldAnimateColor ? {\n      backgroundColor: animColor.interpolate({\n        inputRange: [0, 1],\n        outputRange: [inactiveColor, color]\n      })\n    } : {};\n    var dotContainerStyle = [styles.sliderPaginationDotContainer, containerStyle || {}];\n    var dotStyle = [styles.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n    var onPress = tappable ? () => {\n      try {\n        var currentRef = carouselRef.current || carouselRef;\n\n        currentRef._snapToItem(currentRef._getPositionIndex(index));\n      } catch (error) {\n        console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n      }\n    } : undefined;\n    return React.createElement(TouchableOpacity, {\n      accessible: false,\n      style: dotContainerStyle,\n      activeOpacity: tappable ? activeOpacity : 1,\n      onPress: onPress,\n      delayPressIn: delayPressInDot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: dotStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nPaginationDot.propTypes = {\n  inactiveOpacity: PropTypes.number.isRequired,\n  inactiveScale: PropTypes.number.isRequired,\n  active: PropTypes.bool,\n  activeOpacity: PropTypes.number,\n  carouselRef: PropTypes.object,\n  color: PropTypes.string,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  inactiveColor: PropTypes.string,\n  inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  index: PropTypes.number,\n  style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  tappable: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"names":["React","PureComponent","PropTypes","styles","PaginationDot","constructor","props","state","animColor","Animated","Value","animOpacity","animTransform","componentDidMount","active","_animate","componentDidUpdate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","spring","friction","tension","push","parallel","start","color","inactiveColor","render","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined","propTypes","number","isRequired","bool","object","string","ViewPropTypes","View"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './Pagination.style';\n\nexport default class PaginationDot extends PureComponent {\n\n    static propTypes = {\n        inactiveOpacity: PropTypes.number.isRequired,\n        inactiveScale: PropTypes.number.isRequired,\n        active: PropTypes.bool,\n        activeOpacity: PropTypes.number,\n        carouselRef: PropTypes.object,\n        color: PropTypes.string,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        inactiveColor: PropTypes.string,\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        index: PropTypes.number,\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        tappable: PropTypes.bool\n    };\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props\n\n        const commonProperties = {\n            toValue,\n            duration: animatedDuration,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        let animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(Animated.timing(animColor, {\n                easing: Easing.linear,\n                ...commonProperties\n            }));\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [{\n                scale: animTransform.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveScale, 1]\n                })\n            }]\n        };\n        const animatedColor = this._shouldAnimateColor ? {\n            backgroundColor: animColor.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveColor, color]\n            })\n        } : {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress = tappable ? () => {\n            try {\n                const currentRef = carouselRef.current || carouselRef;\n                currentRef._snapToItem(currentRef._getPositionIndex(index));\n            } catch (error) {\n                console.warn(\n                    'react-native-snap-carousel | Pagination: ' +\n                    '`carouselRef` has to be a Carousel ref.\\n' + error\n                );\n            }\n        } : undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}