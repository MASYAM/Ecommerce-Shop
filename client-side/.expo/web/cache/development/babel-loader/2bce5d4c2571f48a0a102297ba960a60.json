{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport getNavigationActionCreators from \"./routers/getNavigationActionCreators\";\nimport _getChildNavigation from \"./getChildNavigation\";\nimport getChildrenNavigationCache from \"./getChildrenNavigationCache\";\nexport default function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {\n  var actions = router.getActionCreators(state, null);\n  var navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey => _getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      var {\n        routes,\n        index\n      } = getCurrentNavigation().state;\n\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return {\n          remove: () => {}\n        };\n      }\n\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        }\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation())\n  };\n\n  var actionCreators = _objectSpread(_objectSpread({}, getNavigationActionCreators(navigation.state)), actions);\n\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = function () {\n      return navigation.dispatch(actionCreators[actionName](...arguments));\n    };\n  });\n  return navigation;\n}","map":{"version":3,"sources":["getNavigation.js"],"names":["actions","router","navigation","getChildNavigation","childKey","isFocused","index","getCurrentNavigation","routes","addListener","eventName","remove","actionSubscribers","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","getChildrenNavigationCache","actionCreators","getNavigationActionCreators","Object","actionName"],"mappings":";;;;;;AAAA,OAAA,2BAAA;AACA,OAAA,mBAAA;AACA,OAAA,0BAAA;AAEA,eAAe,SAAA,aAAA,CAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,oBAAA,EAOb;AACA,MAAMA,OAAO,GAAGC,MAAM,CAANA,iBAAAA,CAAAA,KAAAA,EAAhB,IAAgBA,CAAhB;AAEA,MAAMC,UAAU,GAAG;AAAA,IAAA,OAAA;AAAA,IAAA,MAAA;AAAA,IAAA,KAAA;AAAA,IAAA,QAAA;AAAA,IAAA,cAAA;AAMjBC,IAAAA,kBAAkB,EAAGC,QAAD,IAClBD,mBAAkB,CAAA,UAAA,EAAA,QAAA,EAPH,oBAOG,CAPH;AAQjBE,IAAAA,SAAS,EAAGD,QAAD,IAAc;AACvB,UAAM;AAAA,QAAA,MAAA;AAAUE,QAAAA;AAAV,UAAoBC,oBAAoB,GAA9C,KAAA;;AACA,UAAIH,QAAQ,IAARA,IAAAA,IAAoBI,MAAM,CAANA,KAAM,CAANA,CAAAA,GAAAA,KAAxB,QAAA,EAAwD;AACtD,eAAA,IAAA;AACD;;AACD,aAAA,KAAA;AAbe,KAAA;AAejBC,IAAAA,WAAW,EAAE,CAAA,SAAA,EAAA,OAAA,KAAwB;AACnC,UAAIC,SAAS,KAAb,QAAA,EAA4B;AAC1B,eAAO;AAAEC,UAAAA,MAAM,EAAE,MAAM,CAAE;AAAlB,SAAP;AACD;;AACDC,MAAAA,iBAAiB,CAAjBA,GAAAA,CAAAA,OAAAA;AACA,aAAO;AACLD,QAAAA,MAAM,EAAE,MAAM;AACZC,UAAAA,iBAAiB,CAAjBA,MAAAA,CAAAA,OAAAA;AACD;AAHI,OAAP;AApBe,KAAA;AA0BjBC,IAAAA,oBAAoB,EAAE,MA1BL,IAAA;AA2BjBC,IAAAA,oBAAoB,EAAE,MA3BL,IAAA;AA4BjBC,IAAAA,mBAAmB,EAAEC,0BAA0B,CAACT,oBAAD,EAAA;AA5B9B,GAAnB;;AA+BA,MAAMU,cAAc,mCACfC,2BAA2B,CAAChB,UAAU,CADpB,KACS,CADZ,GAEfF,OAFe,CAApB;;AAKAmB,EAAAA,MAAM,CAANA,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAqCC,UAAD,IAAgB;AAClDlB,IAAAA,UAAU,CAAVA,UAAU,CAAVA,GAAyB;AAAA,aACvBA,UAAU,CAAVA,QAAAA,CAAoBe,cAAc,CAAdA,UAAc,CAAdA,CADtBf,YACsBe,CAApBf,CADuB;AAAA,KAAzBA;AADFiB,GAAAA;AAKA,SAAA,UAAA;AACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: (childKey) =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: (childKey) => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach((actionName) => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"module"}