{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var JUMP_TO = 'Navigation/JUMP_TO';\nexport var jumpTo = payload => _objectSpread({\n  type: JUMP_TO,\n  preserveFocus: true\n}, payload);","map":{"version":3,"sources":["SwitchActions.ts"],"names":["JUMP_TO","jumpTo","payload","type","preserveFocus"],"mappings":";;;;;;AAAA,OAAO,IAAMA,OAAO,GAAb,oBAAA;AAEP,OAAO,IAAMC,MAAM,GAAIC,OAAD;AAKpBC,EAAAA,IAAI,EADC,OAJe;AAMpBC,EAAAA,aAAa,EAFR;AAJe,GAOjBF,OAPiB,CAAf","sourcesContent":["export const JUMP_TO = 'Navigation/JUMP_TO';\n\nexport const jumpTo = (payload: {\n  routeName: string;\n  key: string;\n  params?: object;\n}) => ({\n  type: JUMP_TO,\n  preserveFocus: true,\n  ...payload,\n});\n"]},"metadata":{},"sourceType":"module"}