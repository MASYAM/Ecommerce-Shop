{"ast":null,"code":"import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from \"./Theme\";\nimport normalizeStyle from \"./StyleNormalizer/normalizeStyle\";\nexport default class StyleProvider extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props)\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps)\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    var {\n      children\n    } = this.props;\n    return Children.only(children);\n  }\n\n}\nStyleProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object\n};\nStyleProvider.defaultProps = {\n  style: {}\n};\nStyleProvider.childContextTypes = {\n  theme: ThemeShape.isRequired\n};","map":{"version":3,"sources":["/Users/m.asyam/Desktop/MY-PROJECTS/react-project/client-pack/node_modules/native-base-shoutem-theme/src/StyleProvider.js"],"names":["React","Children","PropTypes","Theme","ThemeShape","normalizeStyle","StyleProvider","Component","constructor","props","context","state","theme","createTheme","getChildContext","UNSAFE_componentWillReceiveProps","nextProps","style","setState","render","children","only","propTypes","element","isRequired","object","defaultProps","childContextTypes"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB;AACA,OAAOC,cAAP;AAKA,eAAe,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAczDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBJ,KAAjB;AADI,KAAb;AAGD;;AAEDK,EAAAA,eAAe,GAAG;AAChB,WAAO;AACLF,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AADb,KAAP;AAGD;;AAEDG,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AAC1C,QAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKR,KAAL,CAAWQ,KAAnC,EAA0C;AACxC,WAAKC,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBG,SAAjB;AADK,OAAd;AAGD;AACF;;AAEDH,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,WAAO,IAAIN,KAAJ,CAAUM,KAAK,CAACQ,KAAhB,CAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKX,KAA1B;AAEA,WAAOR,QAAQ,CAACoB,IAAT,CAAcD,QAAd,CAAP;AACD;;AA3CwD;AAAtCd,a,CACZgB,S,GAAY;AACjBF,EAAAA,QAAQ,EAAElB,SAAS,CAACqB,OAAV,CAAkBC,UADX;AAEjBP,EAAAA,KAAK,EAAEf,SAAS,CAACuB;AAFA,C;AADAnB,a,CAMZoB,Y,GAAe;AACpBT,EAAAA,KAAK,EAAE;AADa,C;AANHX,a,CAUZqB,iB,GAAoB;AACzBf,EAAAA,KAAK,EAAER,UAAU,CAACoB;AADO,C","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return Children.only(children);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}